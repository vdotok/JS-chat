{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;AACuD;AACU;AACG;AACK;AACZ;;;AAE7D,MAAMK,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEL,6EAAcA;CAC1B,EACD;EACEI,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEJ,kFAAeA;CAC3B,EACD;EACEG,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEN,0EAAa;EACxBO,WAAW,EAAE,CAACJ,sEAAS;CACxB,EACD;EAAEE,IAAI,EAAE,IAAI;EAAEG,UAAU,EAAE;AAAO,CAAE,CACpC;AAMK,MAAOC,gBAAgB;AAAhBA,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA;AAAgB;AAAhBA,gBAAgB;YAHjBV,iEAAoB,CAACK,MAAM,EAAE,EAAE,CAAC,EAChCL,yDAAY;AAAA;;sHAEXU,gBAAgB;IAAAE,UAAAA,yDAAAA;IAAAC,UAFjBb,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;ACpBlB,MAAOc,YAAY;EACvBC,eAAgB;;AADLD,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAE;EAAAC;EAAAC;EAAAC;IAAA;MAFZC,uDAAAA,oBAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJc;AAGF;AACT;AACkB;AACG;AACK;AACP;AACnB;AACgC;AACD;AACtB;AACF;AAC8B;AACH;AACvC;;;AA8BpC,MAAOY,SAAS;AAATA,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;QAATA,SAAS;EAAAC,YAFRnB,wDAAY;AAAA;AAEbkB,SAAS;YAlBlBJ,+DAAY,EACZL,gEAAmB,EACnBF,qEAAa,EACbX,iEAAgB,EAChBY,wDAAW,EACXC,gEAAmB,EACnBC,0DAAY,EACZC,0FAAuB,EACvBC,uFAAiB,EACjBC,mEAAgB,EAChBI,6DAAoB,CAAC;IACnBG,SAAS,EAAE,CAAC;IACZC,iBAAiB,EAAE;GACpB,CAAC;AAAA;;sHAKOH,SAAS;IAAAI,eA1BlBtB,wDAAY,EACZb,0EAAa,EACb4B,6FAAiB,EACjB3B,6EAAc,EACd4B,0FAAgB,EAChB3B,kFAAe;IAAAS,UAGfgB,+DAAY,EACZL,gEAAmB,EACnBF,qEAAa,EACbX,iEAAgB,EAChBY,wDAAW,EACXC,gEAAmB,EACnBC,0DAAY,EACZC,0FAAuB,EACvBC,uFAAiB,EACjBC,mEAAgB;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BG;AAMC;AAC4C;AAGK;AAEV;AACb;AACkB;AACgB;AACxB;AACjB;AACjB;;;;;;;;;;;ICIlBP,4DAAAA,cAAsE;IACpEA,uDAAAA,cAAyE;IAC3EA,0DAAAA,EAAM;;;;;;IARVA,qEAAAA,GAA4C;IAC1CA,4DAAAA,cAAgE;IAA9BA,wDAAAA;MAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,8BAAmB;IAAA,EAAC;IAC7DA,4DAAAA,cAAiC;IAC/BA,uDAAAA,cAA2D;IAC3DA,4DAAAA,YAA6C;IAAAA,oDAAAA,GAAkB;IAAAA,0DAAAA,EAAI;IAErEA,wDAAAA,sEAEM;IACRA,0DAAAA,EAAM;IACRA,mEAAAA,EAAe;;;;IANoCA,uDAAAA,GAAkB;IAAlBA,+DAAAA,mBAAkB;IAEnBA,uDAAAA,GAAsB;IAAtBA,wDAAAA,6BAAsB;;;;;;IAQ5EA,4DAAAA,cAAsD;IAItBA,oDAAAA,0BAAmB;IAAAA,0DAAAA,EAAI;IAC/CA,4DAAAA,cAAsF;IAAzBA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,oBAAY;IAAA,EAAC;IAAnFA,0DAAAA,EAAsF;IAExFA,4DAAAA,cAA0B;IACeA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAUA,yDAAAA,mBAAU;IAAA,EAAC;IAC1DA,4DAAAA,YAA+B;IAAAA,oDAAAA,4BAAoB;IAAAA,0DAAAA,EAAI;IACvDA,uDAAAA,iBAAsG;IAExGA,0DAAAA,EAAO;IAETA,4DAAAA,kBAA4F;IAA1CA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,mBAAU;IAAA,EAAC;IACpEA,oDAAAA,cACF;IAAAA,0DAAAA,EAAS;;;;IARDA,uDAAAA,GAAkB;IAAlBA,wDAAAA,0BAAkB;IAGTA,uDAAAA,GAAmC;IAAnCA,wDAAAA,2CAAmC;IAGmBA,uDAAAA,GAAoB;IAApBA,wDAAAA,4BAAoB;;;;;;IAQ/FA,4DAAAA,cAA6B;IAGCA,oDAAAA,0BAAmB;IAAAA,0DAAAA,EAAI;IAC/CA,4DAAAA,cAAsG;IAAzCA,wDAAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,mBAAc,aAAa,CAAC;IAAA,EAAC;IAAnGA,0DAAAA,EAAsG;IAExGA,4DAAAA,cAA0B;IACeA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAUA,yDAAAA,mBAAU;IAAA,EAAC;IAC1DA,4DAAAA,YAA+B;IAAAA,oDAAAA,2BAAoB;IAAAA,0DAAAA,EAAI;IACvDA,uDAAAA,iBAAsG;IAExGA,0DAAAA,EAAO;IAETA,4DAAAA,kBAA4F;IAA1CA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,mBAAU;IAAA,EAAC;IACpEA,oDAAAA,cACF;IAAAA,0DAAAA,EAAS;;;;IARDA,uDAAAA,GAAkB;IAAlBA,wDAAAA,0BAAkB;IAGTA,uDAAAA,GAAmC;IAAnCA,wDAAAA,2CAAmC;IAGmBA,uDAAAA,GAAoB;IAApBA,wDAAAA,4BAAoB;;;ADxC3F,MAAOS,iBAAiB;EAoB5Bd,YACSkC,aAA4B,EAC3BC,GAAgB,EAChBC,MAAqB,EACrBC,GAAgB,EAChBC,cAAiC;IAJlC,kBAAa,GAAbJ,aAAa;IACZ,QAAG,GAAHC,GAAG;IACH,WAAM,GAANC,MAAM;IACN,QAAG,GAAHC,GAAG;IACH,mBAAc,GAAdC,cAAc;IAxBxB,oBAAe,GAAGZ,mGAA8B,EAAE;IAClD,oBAAe,GAAGA,+FAA0B,EAAE;IACpC,gBAAW,GAAG,IAAIJ,uDAAY,EAAU,CAAC,CAAC;IAEpD,YAAO,GAAG,IAAI;IACd,kBAAa,GAAG,KAAK;IACrB,aAAQ,GAAG,EAAE;IACb,eAAU,GAAQ;MAChBmB,WAAW,EAAE;KACd;IACD,YAAO,GAAG,EAAE;IACZ,gBAAW,GAAG,EAAE;IAChB,mBAAc,GAAG,EAAE;IAEnB,kBAAa,GAAG,EAAE;IAClB,iBAAY,GAAG,EAAE;IAEP,kBAAa,GAAG,IAAInB,uDAAY,EAAU;EAQjD;EAEHoB,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG,IAAI,CAACN,GAAG,CAACO,KAAK,CACxB;MACEC,WAAW,EAAE,IAAItB,uDAAW,CAAC,EAAE,EAAE,CAC/BC,+DAAmB,EACnBA,gEAAoB,CAAC,GAAG,CAAC,CAC1B;KACF,EACD;MAAEwB,QAAQ,EAAE;IAAQ,CAAE,CACvB;IAEDC,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAGC,KAAK,IAAI;MAC3C,IAAIA,KAAK,CAACC,IAAI,KAAK,OAAO,IAAI,CAAC,IAAI,CAACC,OAAO,EAAE;QAC3C,IAAI,CAACC,QAAQ,EAAE;;IAEnB,CAAC,CAAC;EACJ;EAEAC,eAAe;IACb,IAAI,IAAI,CAACC,WAAW,EAAE;MACpB7B,6EAAS,CAAC,IAAI,CAAC6B,WAAW,CAACC,aAAa,EAAE,OAAO,CAAC,CAC/CC,IAAI,CACH9B,gEAAG,CAAEuB,KAAY,IAAMA,KAAK,CAACQ,MAA2B,CAACC,KAAK,CAAC,EAC/D/B,kFAAY,CAAC,IAAI,CAAC,EAClBC,mGAAoB,EAAE,EACtBE,0DAAS,CAAC,EAAE,CAAC,EACbD,2EAAQ,CAAE6B,KAAK,IAAI;QACjB,IAAI,CAACP,OAAO,GAAG,IAAI;QACnB,IAAI,CAACO,KAAK,EAAE;UACV,MAAMC,IAAI,GAAG;YACXC,OAAO,EAAE,wBAAwB;YACjCC,YAAY,EAAE,WAAW;YACzBC,YAAY,EAAE,EAAE;YAChBC,SAAS,EAAE;WACZ;UACD,OAAO,IAAI,CAAC9B,GAAG,CAAC+B,IAAI,CAAC,UAAU,EAAEL,IAAI,CAAC,CAACH,IAAI,CACzC9B,gEAAG,CAAEuC,GAAG,IAAI;YACV,IAAI,EAAEA,GAAG,CAACC,KAAK,IAAID,GAAG,CAACC,KAAK,CAACC,MAAM,CAAC,EAAE;cACpCF,GAAG,CAACC,KAAK,GAAG,EAAE;;YAEhB,IAAI,CAACE,YAAY,GAAG,CAAC,GAAGH,GAAG,CAACC,KAAK,CAAC;YAClC,OAAOD,GAAG;UACZ,CAAC,CAAC,CACH;;QAEH,MAAMI,SAAS,GAAG,CAAC,GAAG,IAAI,CAACD,YAAY,CAAC;QACxC,MAAME,UAAU,GAAGD,SAAS,CAACE,MAAM,CAAEC,IAAI,IAAI;UAC3C,MAAMC,WAAW,GAAGf,KAAK,CAACgB,WAAW,EAAE;UACvC,IAAIF,IAAI,CAACG,SAAS,CAACD,WAAW,EAAE,CAACE,UAAU,CAACH,WAAW,CAAC,EAAE;YACxD,OAAO,CAAC,CAAC;;QAEb,CAAC,CAAC;QACF,MAAMI,UAAU,GAAG;UACjBX,KAAK,EAAEI;SACR;QACD,OAAOvC,yCAAE,CAAC8C,UAAU,CAAC;MACvB,CAAC,CAAC,CACH,CACAC,SAAS,CAAEb,GAAG,IAAI;QACjB,IAAI,CAACd,OAAO,GAAG,KAAK;QACpB,IAAI,CAACc,GAAG,CAACC,KAAK,IAAI,CAACD,GAAG,CAACC,KAAK,CAACC,MAAM,EAAE;UACnC,IAAI,CAACjC,MAAM,CAAC6C,KAAK,CAAC,OAAO,EAAE,mBAAmB,CAAC;UAC/C,IAAI,CAACC,QAAQ,GAAG,EAAE;SACnB,MAAM;UACL,IAAI,CAACA,QAAQ,GAAGf,GAAG,CAACC,KAAK;;QAE3B,IAAI,CAACe,kBAAkB,EAAE;MAC3B,CAAC,CAAC;;EAER;EAEAA,kBAAkB;IAChB,IAAI,CAACC,aAAa,CAACxD,GAAG,CAAE8C,IAAI,IAAI;MAC9B,MAAMW,SAAS,GAAG,IAAI,CAACH,QAAQ,CAACI,IAAI,CACjCC,OAAO,IAAKA,OAAO,CAACC,OAAO,IAAId,IAAI,CAACc,OAAO,CAC7C;MACD,IAAIH,SAAS,EAAEA,SAAS,CAAC,UAAU,CAAC,GAAG,IAAI;IAC7C,CAAC,CAAC;IACF,IAAI,CAAC/C,cAAc,CAACmD,aAAa,EAAE;EACrC;EAEAC,aAAa,CAACC,OAAO;IACnB,IAAI,CAACC,cAAc,GAAG,EAAE;IACxBD,OAAO,CAAC,UAAU,CAAC,GAAG,CAACA,OAAO,CAAC,UAAU,CAAC;IAC1C,IAAI,CAACrD,cAAc,CAACmD,aAAa,EAAE;IACnC,IAAI,CAACL,aAAa,CAACS,IAAI,CAACF,OAAO,CAAC;IAChC,IAAI,CAACP,aAAa,GAAG,IAAI,CAACA,aAAa,CAACX,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACoB,QAAQ,CAAC;IACvE,IAAI,CAACV,aAAa,GAAG,CAAC,GAAG,IAAIW,GAAG,CAAC,IAAI,CAACX,aAAa,CAAC,CAAC;IACrD,IAAI,CAAC,IAAI,CAACA,aAAa,CAACf,MAAM,EAAE;MAC9B,IAAI,CAACuB,cAAc,GAAG,wBAAwB;KAC/C,MAAM,IAAI,IAAI,CAACR,aAAa,CAACf,MAAM,GAAG,CAAC,EAAE;MACxC,IAAI,CAACuB,cAAc,GAAG,oCAAoC;;IAE5DI,OAAO,CAACf,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAACW,cAAc,CAAC;IACpD,IAAI,CAACtD,cAAc,CAACmD,aAAa,EAAE;EACrC;EAEAQ,UAAU,CAACC,OAAO;IAChB,IAAI,CAACN,cAAc,GAAG,EAAE;IACxB,IAAI,CAACR,aAAa,GAAG,IAAI,CAACA,aAAa,CAACX,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACoB,QAAQ,CAAC;IACvE,IAAI,CAACxD,cAAc,CAACmD,aAAa,EAAE;IACnC,IAAI,CAAC,IAAI,CAACL,aAAa,CAACf,MAAM,EAAE;MAC9B,IAAI,CAACuB,cAAc,GAAG,wBAAwB;MAC9C;KACD,MAAM,IAAI,IAAI,CAACR,aAAa,CAACf,MAAM,GAAG,CAAC,EAAE;MACxC,IAAI,CAACuB,cAAc,GAAG,oCAAoC;MAC1D;;IAEF,IAAI,IAAI,CAACR,aAAa,CAACf,MAAM,IAAI,CAAC,EAAE;MAClC,MAAM8B,WAAW,GAAG,IAAI,CAACf,aAAa,CAACxD,GAAG,CAAE8C,IAAI,IAAKA,IAAI,CAACc,OAAO,CAAC;MAClE,MAAM3B,IAAI,GAAG;QACXuC,YAAY,EAAED,WAAW;QACzBE,YAAY,EAAEF,WAAW,CAAC9B,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;QAC5CxB,WAAW,EAAE;OACd;MACD,IAAI,CAACV,GAAG,CAAC+B,IAAI,CAAC,aAAa,EAAEL,IAAI,CAAC,CAACmB,SAAS,CAAEsB,CAAC,IAAI;QACjD,IAAI,CAAChE,cAAc,CAACmD,aAAa,EAAE;QACnC,IAAIa,CAAC,IAAIA,CAAC,CAACC,MAAM,IAAI,GAAG,EAAE;UACxB,IAAI,CAACX,cAAc,GAAG,EAAE;UACxB,IAAI,CAACY,aAAa,CAACC,IAAI,CAACH,CAAC,CAAC1D,KAAK,CAAC;UAChC,IAAI,CAACD,IAAI,CAAC+D,KAAK,EAAE;;QAEnB,IAAI,CAACtB,aAAa,GAAG,EAAE;QACvB,IAAI,CAAC9C,cAAc,CAACmD,aAAa,EAAE;QACnC,IAAI,CAACpC,OAAO,GAAG,KAAK;QACpB,IAAI,CAACsD,WAAW,CAACF,IAAI,CAAC;UAACtD,KAAK,EAAE,QAAQ;UAAEP,KAAK,EAAE0D,CAAC,CAAC1D;QAAK,CAAC,CAAC;MAC1D,CAAC,CAAC;KACH,MAAM;MACL,IAAI,CAACgE,aAAa,GAAG,IAAI;;EAE7B;EAEA;EACAtD,QAAQ;IACN7B,6FAAyB,CAAC,IAAI,CAACkB,IAAI,CAAC;IACpC,MAAMwD,WAAW,GAAG,IAAI,CAACf,aAAa,CAACxD,GAAG,CAAE8C,IAAI,IAAKA,IAAI,CAACc,OAAO,CAAC;IAClE,IAAI,IAAI,CAAC7C,IAAI,CAACmE,OAAO,IAAI,CAACX,WAAW,CAAC9B,MAAM,IAAI,IAAI,CAAChB,OAAO,EAAE;IAC9D,IAAI8C,WAAW,CAAC9B,MAAM,GAAG,CAAC,EAAE;MAC1B,IAAI,CAACjC,MAAM,CAAC6C,KAAK,CAAC,OAAO,EAAE,sCAAsC,CAAC;MAClE;;IAEF,IAAI,CAAC5B,OAAO,GAAG,IAAI;IACnB,IAAI,CAACf,cAAc,CAACmD,aAAa,EAAE;IACnC,IAAI5B,IAAI,GAAG;MACTuC,YAAY,EAAED,WAAW;MACzBE,YAAY,EAAEF,WAAW,CAAC9B,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG;KAC5C;IACDR,IAAI,GAAG;MACL,GAAGA,IAAI;MACP,GAAG,IAAI,CAAClB,IAAI,CAACiB;KACd;IACD,IAAI,CAACzB,GAAG,CAAC+B,IAAI,CAAC,aAAa,EAAEL,IAAI,CAAC,CAACmB,SAAS,CAAEsB,CAAC,IAAI;MACjD,IAAI,CAAChE,cAAc,CAACmD,aAAa,EAAE;MACnC,IAAIa,CAAC,IAAIA,CAAC,CAACC,MAAM,IAAI,GAAG,EAAE;QACxB;QACA,IAAIQ,oBAAoB,GAAG,EAAE;QAC7B,IAAI,CAAC3B,aAAa,CAACxD,GAAG,CAAEoF,CAAC,IAAI;UAC3BD,oBAAoB,CAAClB,IAAI,CAACmB,CAAC,CAACC,MAAM,CAAC;QACrC,CAAC,CAAC;QACF;QACA,MAAMC,SAAS,GAAG;UAChBC,IAAI,EAAEzF,+FAA0B,EAAE,CAACuF,MAAM;UACzCG,EAAE,EAAEL,oBAAoB;UACxBM,MAAM,EAAE,KAAK;UACbC,UAAU,EAAEhB;SACb;QACD,IAAI,CAACpE,aAAa,CAACqF,+BAA+B,CAACL,SAAS,CAAC;QAE7D;QACA,IAAI,CAACP,WAAW,CAACF,IAAI,CAAC;UAACtD,KAAK,EAAE,QAAQ;UAAEP,KAAK,EAAE0D,CAAC,CAAC1D;QAAK,CAAC,CAAC,CAAC,CAAC;QAC1D;QACA,IAAI,CAACgD,cAAc,GAAG,EAAE;QACxB,IAAI,CAACY,aAAa,CAACC,IAAI,CAACH,CAAC,CAAC1D,KAAK,CAAC;QAChC,IAAI,CAACR,MAAM,CAACoF,OAAO,CAAC,UAAU,EAAE,6BAA6B,CAAC;QAC9D,IAAI,CAACC,UAAU,EAAE;QACjB,IAAI,CAAC9E,IAAI,CAAC+D,KAAK,EAAE;;MAEnB,IAAI,CAACtB,aAAa,GAAG,EAAE;MACvB,IAAI,CAAC9C,cAAc,CAACmD,aAAa,EAAE;MACnC,IAAI,CAACpC,OAAO,GAAG,KAAK;IACtB,CAAC,CAAC;EACJ;EAEAoE,UAAU;IACR,IAAI,CAACrC,aAAa,GAAG,EAAE;IACvB,IAAI,CAACwB,aAAa,GAAG,KAAK;IAC1B,IAAI,CAAC1B,QAAQ,CAACwC,OAAO,CAAEC,OAAO,IAAMA,OAAO,CAAC,UAAU,CAAC,GAAG,KAAM,CAAC;IACjE,IAAI,CAAChB,WAAW,CAACF,IAAI,CAAC;MAACtD,KAAK,EAAE,QAAQ;MAAEP,KAAK,EAAC;IAAE,CAAC,CAAC;IAClD,IAAI,CAACN,cAAc,CAACmD,aAAa,EAAE;EACrC;EAEAmC,UAAU;IACR5B,OAAO,CAAC6B,GAAG,CAAC,0BAA0B,CAAC;IAGvC,IAAI,CAAClB,WAAW,CAACF,IAAI,CAAC;MAACtD,KAAK,EAAE,MAAM;MAAEP,KAAK,EAAC;IAAE,CAAC,CAAC;EAClD;;AAhOW9B,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAb;EAAA6H;IAAA;;;;;;;;;;;;;;;;;;MCjC9BzH,4DAAAA,aAA8B;MAGyCA,wDAAAA;QAAA,OAAS0H,gBAAY;MAAA,EAAC;MAAvF1H,0DAAAA,EAA0F;MAC1FA,4DAAAA,WAA0B;MAAAA,oDAAAA,wBAAiB;MAAAA,0DAAAA,EAAI;MAEjDA,4DAAAA,aAA6D;MAA9BA,wDAAAA;QAAAA,2DAAAA;QAAA;QAAA,OAASA,yDAAAA,oBAAmB;MAAA,EAAC;MAC1DA,uDAAAA,aAA4D;MAC9DA,0DAAAA,EAAM;MAERA,4DAAAA,aAA8B;MAGxBA,uDAAAA,eAA4D;MAC9DA,0DAAAA,EAAM;MACNA,uDAAAA,qBAA4E;MAC9EA,0DAAAA,EAAM;MAERA,4DAAAA,eAAwB;MAEpBA,oDAAAA,IACF;MAAAA,0DAAAA,EAAI;MAENA,4DAAAA,eAAyC;MACvCA,wDAAAA,0EAUe;MACjBA,0DAAAA,EAAM;MAGRA,wDAAAA,yDAmBM;MAENA,wDAAAA,gFAAAA,oEAAAA,CAmBc;;;MA3DPA,uDAAAA,IAAmD;MAAnDA,wDAAAA,yDAAmD;MACpDA,uDAAAA,GACF;MADEA,gEAAAA,uEACF;MAG+BA,uDAAAA,GAAW;MAAXA,wDAAAA,yBAAW;MAcbA,uDAAAA,GAAmB;MAAnBA,wDAAAA,2BAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9B7B;AAIwC;AACK;AACgB;AAClC;AACwB;AAGD;AAMjD;AAC4C;;;;;;;;;;;;;;;;;ICZ5DA,4DAAAA,cAA6E;IAChDA,oDAAAA,4BAAqB;IAAAA,0DAAAA,EAAI;IACpDA,4DAAAA,YAAmB;IAAAA,oDAAAA,+EAAwE;IAAAA,0DAAAA,EAAI;;;;;IAWrFA,4DAAAA,eAAoD;IAACA,oDAAAA,GAAqB;IAAAA,0DAAAA,EAAO;;;;IAA5BA,uDAAAA,GAAqB;IAArBA,gEAAAA,gCAAqB;;;;;IAE5EA,4DAAAA,YAA+C;IAAAA,oDAAAA,GAA4B;IAAAA,0DAAAA,EAAI;;;;IAAhCA,uDAAAA,GAA4B;IAA5BA,+DAAAA,wDAA4B;;;;;IAE3EA,4DAAAA,YACyD;IACvDA,oDAAAA,GACF;IAAAA,0DAAAA,EAAI;;;;;IAFFA,wDAAAA,6DAAsD;IACtDA,uDAAAA,GACF;IADEA,gEAAAA,6CACF;;;;;IAWAA,4DAAAA,YAAiG;IAC/FA,oDAAAA,GAGF;IAAAA,0DAAAA,EAAI;;;;IAJDA,wDAAAA,wEAAkE;IACnEA,uDAAAA,GAGF;IAHEA,gEAAAA,mDAGF;;;;;IACAA,4DAAAA,YAAwD;IACtDA,oDAAAA,GAEF;IAAAA,0DAAAA,EAAI;;;;IAFFA,uDAAAA,GAEF;IAFEA,gEAAAA,mFAEF;;;;;;IA/BNA,qEAAAA,GAA8C;IAC5CA,4DAAAA,cAAoE;IAA/BA,wDAAAA;MAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,iCAAoB;IAAA,EAAC;IACjEA,4DAAAA,cAA4B;IAEYA,oDAAAA,GAAmB;IAAAA,0DAAAA,EAAI;IAC3DA,wDAAAA,kFAAiF;IACnFA,0DAAAA,EAAM;IACNA,wDAAAA,4EAA+E;IAE/EA,wDAAAA,4EAGI;IAENA,0DAAAA,EAAM;IACNA,4DAAAA,cAAiC;IAE7BA,uDAAAA,eAAuD;IACvDA,4DAAAA,eAA8B;IACZA,wDAAAA;MAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,6BAAgB;IAAA,EAAC;IAACA,oDAAAA,uBAAe;IAAAA,0DAAAA,EAAI;IAC9DA,4DAAAA,aAA+C;IAA7BA,wDAAAA;MAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,+BAAkB;IAAA,EAAC;IAACA,oDAAAA,cAAM;IAAAA,0DAAAA,EAAI;IAG7DA,wDAAAA,8EAII;IACJA,wDAAAA,8EAGI;IAENA,0DAAAA,EAAM;IAEVA,mEAAAA,EAAe;;;;IA/B6BA,uDAAAA,GAAmB;IAAnBA,+DAAAA,qBAAmB;IAC5BA,uDAAAA,GAAuB;IAAvBA,wDAAAA,+BAAuB;IAE7BA,uDAAAA,GAAsB;IAAtBA,wDAAAA,8BAAsB;IAENA,uDAAAA,GAAuB;IAAvBA,wDAAAA,+BAAuB;IAcSA,uDAAAA,GAAwB;IAAxBA,wDAAAA,gCAAwB;IAKlEA,uDAAAA,GAAyB;IAAzBA,wDAAAA,iCAAyB;;;;;;IA1ClEA,qEAAAA,GAA8C;IAC5CA,4DAAAA,cAAuE;IAC7CA,oDAAAA,gBAAS;IAAAA,0DAAAA,EAAK;IACtCA,4DAAAA,aAA2C;IAApBA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,kBAAS;IAAA,EAAC;IAACA,oDAAAA,eAAQ;IAAAA,0DAAAA,EAAK;IAG1DA,wDAAAA,iEAGM;IAGNA,4DAAAA,cAAyC;IAErCA,wDAAAA,oFAmCe;IACjBA,0DAAAA,EAAM;IAGVA,mEAAAA,EAAe;;;;IA/C2BA,uDAAAA,GAAmC;IAAnCA,wDAAAA,qDAAmC;IAQvCA,uDAAAA,GAAY;IAAZA,wDAAAA,6BAAY;;;;;;IAyClDA,qEAAAA,GAA6C;IAC3CA,4DAAAA,oBAAmF;IAAxEA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAiBA,yDAAAA,wBAAe;IAAA,EAAC;MAAAA,2DAAAA;MAAA;MAAA,OAAgBA,yDAAAA,8BAAqB;IAAA,EAArC;IAAuCA,0DAAAA,EAAY;IACjGA,mEAAAA,EAAe;;;;;;IAEfA,qEAAAA,GAA4C;IAC1CA,4DAAAA,mBAAkF;IAAxEA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAiBA,yDAAAA,wBAAe;IAAA,EAAC;MAAAA,2DAAAA;MAAA;MAAA,OAAgBA,yDAAAA,8BAAqB;IAAA,EAArC;IAAuCA,0DAAAA,EAAW;IAC/FA,mEAAAA,EAAe;;;;;;IAebA,4DAAAA,cAA6G;IAA5CA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,qBAAY;IAAA,EAAC;IAAvFA,0DAAAA,EAA6G;;;;;IAC7GA,4DAAAA,YAAqE;IAAAA,oDAAAA,GACrE;IAAAA,0DAAAA,EAAI;;;;IADiEA,uDAAAA,GACrE;IADqEA,gEAAAA,sCACrE;;;;;IAUIA,4DAAAA,aAAuE;IAAAA,oDAAAA,GAAkB;IAAAA,0DAAAA,EAAK;;;;IAAvBA,uDAAAA,GAAkB;IAAlBA,+DAAAA,oBAAkB;;;;;IAIvFA,4DAAAA,cAAgD;IAC3BA,oDAAAA,GAAgB;IAAAA,0DAAAA,EAAI;;;;IAApBA,uDAAAA,GAAgB;IAAhBA,+DAAAA,kBAAgB;;;;;IAInCA,uDAAAA,sBAAiE;;;IAApDA,wDAAAA,gBAAe;;;;;;IAD9BA,4DAAAA,cAAoD;IAClDA,wDAAAA,uGAAiE;IACjEA,4DAAAA,cACsC;IAApCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,oCAAuB;IAAA,EAAC;;IADnCA,0DAAAA,EACsC;;;;IAFRA,uDAAAA,GAAmB;IAAnBA,wDAAAA,2BAAmB;IAC5CA,uDAAAA,GAA8B;IAA9BA,wDAAAA,QAAAA,yDAAAA,0BAAAA,2DAAAA,CAA8B;;;;;IAKnCA,uDAAAA,sBAAiE;;;IAApDA,wDAAAA,gBAAe;;;;;IAC5BA,qEAAAA,GAAmC;IACjCA,uDAAAA,cAAsF;IACtFA,4DAAAA,YAA4C;;IAAAA,oDAAAA,eAAQ;IAAAA,0DAAAA,EAAI;IAC1DA,mEAAAA,EAAe;;;;;IAFRA,uDAAAA,GAAmC;IAAnCA,wDAAAA,iDAAAA,2DAAAA,CAAmC;IACrCA,uDAAAA,GAA+B;IAA/BA,wDAAAA,SAAAA,yDAAAA,0BAAAA,2DAAAA,CAA+B;;;;;IAJtCA,4DAAAA,cAA2F;IACzFA,wDAAAA,uGAAiE;IACjEA,wDAAAA,wGAGe;IACjBA,0DAAAA,EAAM;;;;IAL0BA,uDAAAA,GAAmB;IAAnBA,wDAAAA,2BAAmB;IAClCA,uDAAAA,GAAkB;IAAlBA,wDAAAA,0BAAkB;;;;;IAOjCA,qEAAAA,GAAqE;IAClEA,oDAAAA,aACD;IAAAA,uDAAAA,SAAM;IACRA,mEAAAA,EAAe;;;;;IA7BvBA,qEAAAA,GAA6D;IAC3DA,4DAAAA,cAA+F;IAE7FA,wDAAAA,+EAA8F;IAE9FA,4DAAAA,cAA6B;IAE3BA,wDAAAA,iFAEM;IAENA,wDAAAA,iFAIM;IAENA,wDAAAA,iFAMM;IAENA,4DAAAA,eAAmB;IACjBA,wDAAAA,kGAGe;IACfA,4DAAAA,WAAM;IAACA,oDAAAA,IAAiC;;IAAAA,0DAAAA,EAAO;IAKvDA,mEAAAA,EAAe;;;;;IAlCRA,uDAAAA,GAAyF;IAAzFA,wDAAAA,uGAAyF;IAEzDA,uDAAAA,GAAkC;IAAlCA,wDAAAA,kDAAkC;IAI9CA,uDAAAA,GAAyB;IAAzBA,wDAAAA,kCAAyB;IAItBA,uDAAAA,GAA0B;IAA1BA,wDAAAA,mCAA0B;IAMVA,uDAAAA,GAAiD;IAAjDA,wDAAAA,+DAAiD;IASxEA,uDAAAA,GAAoD;IAApDA,wDAAAA,wEAAoD;IAI5DA,uDAAAA,GAAiC;IAAjCA,gEAAAA,MAAAA,yDAAAA,yCAAiC;;;;;IA/BlDA,qEAAAA,GAA2C;IACzCA,wDAAAA,sFAmCe;IACjBA,mEAAAA,EAAe;;;;IApCkBA,uDAAAA,GAA4B;IAA5BA,wDAAAA,6CAA4B;;;;;;IAsC7DA,4DAAAA,cAAyE;IAKjEA,uDAAAA,UAAW;IAEXA,4DAAAA,cAAgC;IACPA,oDAAAA,0BAAmB;IAAAA,0DAAAA,EAAI;IAC9CA,4DAAAA,YAAgD;IAC9CA,oDAAAA,kFAEF;IAAAA,0DAAAA,EAAI;IAGRA,4DAAAA,eAA6B;IACqBA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,kBAAS;IAAA,EAAC;IACjEA,oDAAAA,kBACF;IAAAA,0DAAAA,EAAS;IACTA,4DAAAA,kBAAyE;IAAzBA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,uBAAc;IAAA,EAAC;IACtEA,oDAAAA,iBACF;IAAAA,0DAAAA,EAAS;;;;;;IAWfA,qEAAAA,GAAiC;IAC/BA,4DAAAA,cAAmB;IACjBA,uDAAAA,cAA0E;IAC1EA,4DAAAA,eAAmB;IAAAA,oDAAAA,GAAmB;IAAAA,0DAAAA,EAAO;IAC7CA,4DAAAA,eAAoF;IAA7BA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,2BAAkB;IAAA,EAAC;IAACA,oDAAAA,QAAC;IAAAA,0DAAAA,EAAO;IAEhGA,mEAAAA,EAAe;;;;IAHQA,uDAAAA,GAAmB;IAAnBA,+DAAAA,wBAAmB;;;;;;IAK1CA,4DAAAA,qBAC8E;IAA5EA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,8BAAqB;IAAA,EAAC;MAAAA,2DAAAA;MAAA;MAAA;IAAA;IADjCA,0DAAAA,EAC8E;;;;IAA5CA,wDAAAA,2BAAqB;;;;;;IA+B/DA,4DAAAA,eAAsD;IAChCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,qBAAY;IAAA,EAAC;IAACA,oDAAAA,aAAO;IAAAA,0DAAAA,EAAO;IACzDA,uDAAAA,eAAsE;;IACxEA,0DAAAA,EAAM;;;;IADkCA,uDAAAA,GAA+B;IAA/BA,wDAAAA,QAAAA,yDAAAA,+BAAAA,2DAAAA,CAA+B;;;;;;IAGvEA,4DAAAA,eAAuD;IAIvBA,oDAAAA,kBAAW;IAAAA,0DAAAA,EAAI;IACvCA,4DAAAA,eAAsF;IAAzBA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,qBAAY;IAAA,EAAC;IAAnFA,0DAAAA,EAAsF;IAExFA,4DAAAA,eAA2B;IACmBA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAUA,yDAAAA,oBAAW;IAAA,EAAC;IAChEA,4DAAAA,aAA+B;IAAAA,oDAAAA,wBAAgB;IAAAA,0DAAAA,EAAI;IACnDA,uDAAAA,kBAAsG;IAExGA,0DAAAA,EAAO;IAETA,4DAAAA,mBAA6F;IAA3CA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,oBAAW;IAAA,EAAC;IACrEA,oDAAAA,cACF;IAAAA,0DAAAA,EAAS;;;;IARDA,uDAAAA,GAAuB;IAAvBA,wDAAAA,gCAAuB;IAGdA,uDAAAA,GAAwC;IAAxCA,wDAAAA,iDAAwC;IAGeA,uDAAAA,GAAoB;IAApBA,wDAAAA,6BAAoB;;;ADvL5F,MAAOnB,aAAa;EAqBxBc,YACSkC,aAA4B,EAC3BC,GAAgB,EAChB8F,MAAc,EACdC,KAAiB,EAClBC,MAAiB,EAChB/F,MAAqB,EACrBE,cAAiC,EACjCD,GAAgB;IAPjB,kBAAa,GAAbH,aAAa;IACZ,QAAG,GAAHC,GAAG;IACH,WAAM,GAAN8F,MAAM;IACN,UAAK,GAALC,KAAK;IACN,WAAM,GAANC,MAAM;IACL,WAAM,GAAN/F,MAAM;IACN,mBAAc,GAAdE,cAAc;IACd,QAAG,GAAHD,GAAG;IA5BH,mBAAc,GAAG,IAAIf,uDAAY,EAAU;IAC3C,gBAAW,GAAG,IAAIA,uDAAY,EAAU;IAClD,mBAAc,GAAG,KAAK;IAEtB,YAAO,GAAG,IAAI;IACd,cAAS,GAAG,EAAE;IACd,eAAU,GAAQ;MAChBmB,WAAW,EAAE;KACd;IACD,YAAO,GAAG,EAAE;IACZ,oBAAe,GAAGf,mGAA8B,EAAE;IAClD,oBAAe,GAAGA,+FAA0B,EAAE;IAE9C,eAAU,GAAG,QAAQ;IACrB,eAAU,GAAS,IAAI;IACvB,mBAAc,GAAG,KAAK;IACtB,kBAAa,GAAG,EAAE;IAClB,WAAM,GAAG,MAAM;IACf,iBAAY,GAAG,KAAK;IACpB,gBAAW,GAAG,IAAI;IAWhB,IAAI,CAAC0G,SAAS,GAAG,IAAI,CAAC/F,GAAG,CAACO,KAAK,CAC7B;MACEyF,QAAQ,EAAE,IAAI9G,wDAAW,CAAC,EAAE,EAAE,CAACC,gEAAmB,CAAC,CAAC;MACpDqB,WAAW,EAAE,IAAItB,wDAAW,CAAC,EAAE,EAAE,CAC/BC,gEAAmB,EACnBA,iEAAoB,CAAC,GAAG,CAAC,CAC1B;KACF,EACD;MAAEwB,QAAQ,EAAE;IAAQ,CAAE,CACvB;IACD,IAAI,CAACd,aAAa,CAACoG,aAAa,EAAE;EACpC;EAEA5F,QAAQ;IACN,IAAI,CAACR,aAAa,CAACqG,MAAM,CAACC,EAAE,CAAC,SAAS,EAAGC,QAAQ,IAAI;MACnDzC,OAAO,CAAC6B,GAAG,CAAC,4BAA4B,EAAEY,QAAQ,CAAC;MACnD,IAAI,CAACC,YAAY,GAAG,IAAI;MACxB,IAAI,CAAC,IAAI,CAACC,SAAS,CAACtE,MAAM,EAAE;QAC1B,IAAI,CAACuE,YAAY,EAAE;;IAEvB,CAAC,CAAC;IACF,IAAI,CAAC1G,aAAa,CAACqG,MAAM,CAACC,EAAE,CAAC,UAAU,EAAGC,QAAQ,IAAI;MACpDzC,OAAO,CAAC6B,GAAG,CAAC,6BAA6B,EAAEY,QAAQ,CAAC;IACtD,CAAC,CAAC;IAGF,IAAI,CAACvG,aAAa,CAACqG,MAAM,CAACC,EAAE,CAAC,YAAY,EAAGC,QAAQ,IAAI;MACtDzC,OAAO,CAAC6B,GAAG,CAAC,YAAY,EAAEY,QAAQ,CAAC;MACnC,IAAI,CAACC,YAAY,GAAG,KAAK;IAC3B,CAAC,CAAC;IAEFzF,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAGC,KAAK,IAAI;MAC3C,IAAIA,KAAK,CAACC,IAAI,KAAK,OAAO,EAAE;QAC1B,IAAI,CAACyF,eAAe,EAAE;;IAE1B,CAAC,CAAC;EACJ;EAEAtF,eAAe;IAEb,IAAI,CAACrB,aAAa,CAACqG,MAAM,CAACC,EAAE,CAAC,sBAAsB,EAAGrE,GAAQ,IAAI;MAChE6B,OAAO,CAAC6B,GAAG,CAAC,sBAAsB,EAAE1D,GAAG,CAAC;IAC1C,CAAC,CAAC;IAEF,IAAI,CAACjC,aAAa,CAACqG,MAAM,CAACC,EAAE,CAAC,SAAS,EAAGC,QAAQ,IAAI;MACnDzC,OAAO,CAAC6B,GAAG,CAAC,gBAAgB,EAAEY,QAAQ,CAAC;MACvC,IAAI,CAACK,gBAAgB,CAACL,QAAQ,CAAC;IACjC,CAAC,CAAC;IAEF,IAAI,CAACvG,aAAa,CAACqG,MAAM,CAACC,EAAE,CAAC,QAAQ,EAAGC,QAA4B,IAAI;MACtEzC,OAAO,CAAC6B,GAAG,CAAC,eAAe,EAAEY,QAAQ,CAAC;MACtC,IAAI,CAACM,eAAe,CAACN,QAAQ,CAAC;IAChC,CAAC,CAAC;IAEF,IAAI,CAACvG,aAAa,CAACqG,MAAM,CAACC,EAAE,CAAC,YAAY,EAAGC,QAAQ,IAAI;MACtDzC,OAAO,CAAC6B,GAAG,CAAC,YAAY,EAAEY,QAAQ,CAAC;MACnC,IAAI,CAACO,2BAA2B,CAACP,QAAQ,CAAC;IAC5C,CAAC,CAAC;IAEF,IAAI,CAACvG,aAAa,CAACqG,MAAM,CAACC,EAAE,CAAC,SAAS,EAAGC,QAAQ,IAAI;MACnDzC,OAAO,CAAC6B,GAAG,CAAC,+BAA+B,EAAEY,QAAQ,CAAC;MACtDA,QAAQ,GAAGQ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACV,QAAQ,CAAC,CAAC;MAC/C;MACA,IAAIA,QAAQ,CAAC5E,IAAI,EAAE;QACjB,IAAI,CAACuF,WAAW,CAACX,QAAQ,CAAC;;MAE5B,IACEA,QAAQ,CAACY,IAAI,IAAI,MAAM,IACvBZ,QAAQ,CAACY,IAAI,IAAI,MAAM,IACvBZ,QAAQ,CAACY,IAAI,IAAI,OAAO,IACxBZ,QAAQ,CAACY,IAAI,IAAI,OAAO,IACxBZ,QAAQ,CAACY,IAAI,IAAI,OAAO,EACxB;QACA,IAAI,CAACC,MAAM,EAAE;QACb,MAAMC,UAAU,GAAG,IAAI,CAACC,cAAc,CAACf,QAAQ,CAACrB,EAAE,CAAC;QACnD,MAAMqC,cAAc,GAAGF,UAAU,CAACG,EAAE,IAAI,IAAI,CAACC,UAAU,CAACD,EAAE;QAC1DH,UAAU,CAAC,aAAa,CAAC,GAAGE,cAAc,GACtC,CAAC,GACD,CAACF,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC;QACxCd,QAAQ,GAAG,IAAI,CAACmB,SAAS,CAACL,UAAU,EAAEd,QAAQ,CAAC;QAC/CA,QAAQ,CAAC,QAAQ,CAAC,GAAGgB,cAAc;QACnChB,QAAQ,CAAC,cAAc,CAAC,GAAGc,UAAU,CAAC,cAAc,CAAC;QACrDA,UAAU,CAAC,aAAa,CAAC,GAAGd,QAAQ,CAACvC,OAAO;QAC5CqD,UAAU,CAAC,MAAM,CAAC,GAAG,IAAIM,IAAI,CAACpB,QAAQ,CAACiB,EAAE,CAAC;QAC1CH,UAAU,CAAC,MAAM,CAAC,GAAGd,QAAQ,CAACY,IAAI;QAClC,IAAI,CAACS,WAAW,CAACP,UAAU,EAAEd,QAAQ,CAAC;QACtC,IAAI,CAACsB,iBAAiB,CAACtB,QAAQ,EAAEgB,cAAc,CAAC;QAChDO,UAAU,CAAC,MAAK;UACd,IAAI,CAACrB,SAAS,CAACsB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAI;YAC3B,OAAOD,CAAC,CAACR,EAAE,IAAIH,UAAU,CAACG,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;UACvC,CAAC,CAAC;QACJ,CAAC,EAAE,GAAG,CAAC;QACP,IAAI,CAACpH,cAAc,CAACmD,aAAa,EAAE;OACpC,MAAM,IAAIgD,QAAQ,CAACY,IAAI,IAAI,QAAQ,EAAE;QACpC,IAAI,CAACe,aAAa,CAAC3B,QAAQ,CAAC;OAC7B,MAAM,IAAIA,QAAQ,CAAC4B,WAAW,IAAI,CAAC,EAAE;QACpC,IAAIC,MAAM,GAAG7B,QAAQ,CAAC8B,KAAK,IAAI9B,QAAQ,CAACrB,EAAE;QAC1C,IAAIqB,QAAQ,CAACrB,EAAE,IAAIoD,SAAS,EAAEF,MAAM,GAAG7B,QAAQ,CAACrB,EAAE;QAClD,MAAMmC,UAAU,GAAG,IAAI,CAACC,cAAc,CAACc,MAAM,CAAC;QAC9C,MAAMG,OAAO,GAAGzC,wFAAe,CAC7BuB,UAAU,CAAC9G,WAAW,EACtB,IAAI,EACJgG,QAAQ,CAACiC,SAAS,CACnB;QACD,IAAID,OAAO,EAAE;UACXA,OAAO,CAAC,WAAW,CAAC,GAAG,CAACA,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;;QAExD,IAAI,CAACnI,cAAc,CAACmD,aAAa,EAAE;;IAEvC,CAAC,CAAC;IAEF,IAAI,IAAI,CAACkF,mBAAmB,EAAE;MAC5BhJ,8EAAS,CAAC,IAAI,CAACgJ,mBAAmB,CAAClH,aAAa,EAAE,OAAO,CAAC,CACvDC,IAAI,CACH9B,iEAAG,CAAEuB,KAAY,IAAMA,KAAK,CAACQ,MAA2B,CAACC,KAAK,CAAC,EAC/D/B,mFAAY,CAAC,IAAI,CAAC,EAClBC,mGAAoB,EAAE,CACvB,CACAkD,SAAS,CAAEnB,IAAI,IAAI;QAClB,MAAM+G,WAAW,GAAiB;UAChCrE,MAAM,EAAE,CAAC;UACTsE,IAAI,EAAE,CAAC;UACPxB,IAAI,EAAE,QAAQ;UACdyB,cAAc,EAAE,KAAK;UACrB3D,IAAI,EAAEzF,mGAA8B,EAAE;UACtCwE,OAAO,EAAE,GAAG;UACZwD,EAAE,EAAE,IAAIG,IAAI,EAAE,CAACkB,OAAO,EAAE,CAACC,QAAQ,EAAE;UACnCC,GAAG,EAAE,IAAI,CAACtB,UAAU,CAACuB,WAAW;UAChC9D,EAAE,EAAE,IAAI,CAACuC,UAAU,CAACwB,YAAY;UAChCC,IAAI,EAAE,IAAIvB,IAAI,EAAE,CAACkB,OAAO;SACzB;QACD,IAAI,CAAC7I,aAAa,CAAC0I,WAAW,CAACA,WAAW,CAAC;MAC7C,CAAC,CAAC;;EAER;EAEAxB,WAAW,CAACiC,QAAQ;IAClB,IAAIC,SAAS,GAAGD,QAAQ,CAACxH,IAAI,CAACyD,UAAU,CAAC1E,KAAK;IAC9CoD,OAAO,CAAC6B,GAAG,CACT,oCAAoC,EACpC;MAAEwD;IAAQ,CAAE,EACZ;MAAEC;IAAS,CAAE,CACd;IAED;IACA,IAAID,QAAQ,CAACxH,IAAI,CAACwD,MAAM,IAAI,KAAK,EAAE;MACjC,IAAIkE,CAAC,GAAG,IAAI,CAAC5C,SAAS,CAAC6C,SAAS,CAC7BC,GAAG,IAAKA,GAAG,CAACN,YAAY,IAAIG,SAAS,CAACH,YAAY,CACpD;MAED,IAAII,CAAC,KAAK,CAAC,CAAC,EAAE;QACZ,IAAIG,IAAI,GAAGL,QAAQ,CAACxH,IAAI,CAACyD,UAAU,CAAC1E,KAAK;QACzC,IAAI+I,aAAa,GAAG;UAClBV,GAAG,EAAES,IAAI,CAACR,WAAW;UACrBU,OAAO,EAAEF,IAAI,CAACP;SACf;QACD,IAAItH,IAAI,GAAG,EAAE;QACbA,IAAI,CAACgC,IAAI,CAAC8F,aAAa,CAAC;QACxB,IAAI,CAACzJ,aAAa,CAAC2J,eAAe,CAAChI,IAAI,CAAC;QACxCmC,OAAO,CAAC6B,GAAG,CAAC,YAAY,EAAE8D,aAAa,CAAC;QAExC;QACA,IAAID,IAAI,CAAC,cAAc,CAAC,CAACrH,MAAM,EAAE;UAC/BqH,IAAI,CAAC,cAAc,CAAC,GAAGA,IAAI,CAAC,cAAc,CAAC,CAAC9J,GAAG,CAAEkK,CAAC,IAAI;YACpDA,CAAC,CAAC,UAAU,CAAC,GAAGA,CAAC,CAAC,UAAU,CAAC,IAAIA,CAAC,CAAC,WAAW,CAAC;YAC/C,OAAOA,CAAC;UACV,CAAC,CAAC;;QAEJJ,IAAI,CAAC,WAAW,CAAC,GAAGA,IAAI,CAACrF,YAAY,GACjCqF,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GACpCA,IAAI,CAAC7I,WAAW;QACpB6I,IAAI,CAAC,QAAQ,CAAC,GAAG,KAAK;QACtBA,IAAI,CAAC,KAAK,CAAC,GAAGA,IAAI,CAACR,WAAW;QAC9BQ,IAAI,CAAC,SAAS,CAAC,GAAGA,IAAI,CAACP,YAAY;QACnCO,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE;QACxBA,IAAI,CAAC,mBAAmB,CAAC,GAAGA,IAAI,CAAC,cAAc,CAAC,CAACrH,MAAM;QACvDqH,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC;QAC9BA,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI;QACrB1F,OAAO,CAAC6B,GAAG,CACT,oCAAoC,EACpC,IAAI,EACJ,IAAI,EACJ6D,IAAI,EACJ,MAAM,EACN,IAAI,CAAC/C,SAAS,CACf;QAED,IAAI,CAACA,SAAS,CAAC9C,IAAI,CAAC6F,IAAI,CAAC;QACzB;QACA,IAAI,CAAC/E,WAAW,CAACF,IAAI,CAAC,QAAQ,CAAC;QAC/B;QACA,IAAI,CAACsF,cAAc,CAACtF,IAAI,CAACiF,IAAI,CAAC;QAC9B,IAAI,CAACrI,OAAO,GAAG,KAAK;QAEpB;;;;IAIJ,IAAIgI,QAAQ,CAACxH,IAAI,CAACwD,MAAM,IAAI,QAAQ,EAAE;MACpC;MACA;MACA,IAAI2E,KAAK,GAAG,IAAI,CAACrD,SAAS,CAAC6C,SAAS,CACjCC,GAAG,IAAKA,GAAG,CAACN,YAAY,IAAIG,SAAS,CAACH,YAAY,CACpD;MACD,IAAIa,KAAK,GAAG,CAAC,CAAC,EAAE;QACd,IAAI,CAACrD,SAAS,CAACsD,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;QAC/B,IAAI,CAAC9J,aAAa,CAACgK,iBAAiB,CAAC;UACnCjB,GAAG,EAAEK,SAAS,CAACJ,WAAW;UAC1BU,OAAO,EAAEN,SAAS,CAACH;SACpB,CAAC;QACF,IAAI,CAACxB,UAAU,GAAG,EAAE;QACpB,IAAI,CAACrH,cAAc,CAACmD,aAAa,EAAE;;MAErCO,OAAO,CAAC6B,GAAG,CACT,qCAAqC,EACrCwD,QAAQ,EACR,IAAI,EACJ,IAAI,CAAC1B,UAAU,EACf,IAAI,CAACtG,OAAO,EACZ,CAAC,IAAI,CAACsG,UAAU,CAACwC,SAAS,IAAI,CAAC,IAAI,CAAC9I,OAAO,CAC5C,CAAC,CAAC;;;IAGL,IAAIgI,QAAQ,CAACxH,IAAI,CAACwD,MAAM,IAAI,QAAQ,EAAE;MACpC,IAAI+E,OAAO,GAAG,IAAI,CAACzD,SAAS,CAAC6C,SAAS,CACnCa,CAAC,IAAKA,CAAC,CAAClB,YAAY,KAAKG,SAAS,CAACH,YAAY,CACjD;MACD;MACA,IAAIiB,OAAO,GAAG,CAAC,CAAC,EAAE;QAChB,IAAI,CAACzD,SAAS,CAACyD,OAAO,CAAC,CAACvJ,WAAW,GAAGyI,SAAS,CAACzI,WAAW;QAC3D,IAAI,CAAC8F,SAAS,CAACyD,OAAO,CAAC,CAACD,SAAS,GAAGb,SAAS,CAACzI,WAAW;QACzD;;;EAGN;;EACAyJ,SAAS;IACP7K,6FAAyB,CAAC,IAAI,CAAC2G,SAAS,CAAC;IACzCpC,OAAO,CAACf,KAAK,CAAC,iBAAiB,EAAE,IAAI,CAACmD,SAAS,CAACtB,OAAO,CAAC;IACxD,IAAI,IAAI,CAACsB,SAAS,CAACtB,OAAO,IAAI,IAAI,CAACzD,OAAO,EAAE;IAC5C,MAAMkJ,QAAQ,GAAG,IAAI,CAACnE,SAAS,CAACxE,KAAK;IACrC,IAAI,CAACP,OAAO,GAAG,IAAI;IACnB,IAAI,CAAClB,GAAG,CAAC+B,IAAI,CAAC,aAAa,EAAEqI,QAAQ,CAAC,CAACvH,SAAS,CAAEsB,CAAC,IAAI;MACrD,IAAIA,CAAC,IAAIA,CAAC,CAACC,MAAM,IAAI,GAAG,EAAE;QACxB;QAEA,IACE,IAAI,CAACoD,UAAU,CAACtB,QAAQ,KAAKkE,QAAQ,CAAClE,QAAQ,IAC9C,IAAI,CAACsB,UAAU,CAACtD,YAAY,KAAK,CAAC,EAClC;UACAL,OAAO,CAAC6B,GAAG,CAAC,6BAA6B,EAAE,IAAI,CAAC8B,UAAU,EAAE4C,QAAQ,CAAC;UACrE,IAAI,CAAC5C,UAAU,CAAC9G,WAAW,GAAG0J,QAAQ,CAAC1J,WAAW;UAClD,IAAI,CAAC8G,UAAU,CAACwC,SAAS,GAAGI,QAAQ,CAAC1J,WAAW;;QAGlD;QACA,IAAIkE,oBAAoB,GAAG,EAAE;QAC7BT,CAAC,CAAC1D,KAAK,CAACwD,YAAY,CAACxE,GAAG,CAAEoF,CAAC,IAAI;UAC7BD,oBAAoB,CAAClB,IAAI,CAACmB,CAAC,CAACC,MAAM,CAAC;QACrC,CAAC,CAAC;QACF,MAAMC,SAAS,GAAG;UAChBC,IAAI,EAAEzF,+FAA0B,EAAE,CAACuF,MAAM;UACzCG,EAAE,EAAEL,oBAAoB;UACxBM,MAAM,EAAE,QAAQ;UAChBC,UAAU,EAAEhB;SACb;QACDN,OAAO,CAAC6B,GAAG,CACT,qCAAqC,EACrCX,SAAS,EACT,iBAAiB,EACjBZ,CAAC,CACF;QACD,IAAI,CAACpE,aAAa,CAACqF,+BAA+B,CAACL,SAAS,CAAC;QAC7D;QAEA,IAAI,CAACsF,cAAc,GAAG,KAAK;QAC3B,IAAI,CAACnJ,OAAO,GAAG,KAAK;QACpB,IAAI,CAACjB,MAAM,CAACoF,OAAO,CAAC,6BAA6B,EAAE,UAAU,CAAC;;IAElE,CAAC,CAAC;EACJ;EACAiF,WAAW,CAAC7J,KAAK;IACf,IAAI,CAACS,OAAO,GAAG,IAAI;IACnB,MAAMkJ,QAAQ,GAAG;MACflE,QAAQ,EAAEzF,KAAK,CAAC8G;KACjB;IACD,IAAI,CAACvH,GAAG,CAAC+B,IAAI,CAAC,aAAa,EAAEqI,QAAQ,CAAC,CAACvH,SAAS,CAAEsB,CAAC,IAAI;MACrD,IAAI,CAAChE,cAAc,CAACmD,aAAa,EAAE;MACnC,IAAIa,CAAC,IAAIA,CAAC,CAACC,MAAM,IAAI,GAAG,EAAE;QACxB,IAAI,CAAClD,OAAO,GAAG,KAAK;QAEpB,IAAIkI,CAAC,GAAG,IAAI,CAAC5C,SAAS,CAAC6C,SAAS,CAAEa,CAAC,IAAKA,CAAC,CAAC3C,EAAE,KAAK9G,KAAK,CAAC8G,EAAE,CAAC;QAC1D,IAAI,CAACf,SAAS,CAACsD,MAAM,CAACV,CAAC,EAAE,CAAC,CAAC;QAC3BvF,OAAO,CAAC6B,GAAG,CAAC,wBAAwB,EAAE,IAAI,CAACc,SAAS,EAAE;UAAC/F;QAAK,CAAC,EAAE2I,CAAC,CAAC;QAOjE;QACA,IAAIxE,oBAAoB,GAAG,EAAE;QAC7BnE,KAAK,CAACwD,YAAY,CAACxE,GAAG,CAAEoF,CAAC,IAAI;UAC3BD,oBAAoB,CAAClB,IAAI,CAACmB,CAAC,CAACC,MAAM,CAAC;QACrC,CAAC,CAAC;QACF,MAAMC,SAAS,GAAG;UAChBC,IAAI,EAAEzF,+FAA0B,EAAE,CAACuF,MAAM;UACzCG,EAAE,EAAEL,oBAAoB;UACxBM,MAAM,EAAE,QAAQ;UAChBC,UAAU,EAAEhB;SACb;QACD,IAAI,CAACpE,aAAa,CAACqF,+BAA+B,CAACL,SAAS,CAAC;QAC7D;QAEA;QACA,IAAI,CAACyC,UAAU,GAAG,EAAE;QACpB,IAAI,CAACtG,OAAO,GAAG,KAAK;QACpB,IAAI,CAACjB,MAAM,CAACoF,OAAO,CAAC,6BAA6B,EAAE,UAAU,CAAC;OAC/D,MAAM;QACLxB,OAAO,CAACf,KAAK,CAACqB,CAAC,CAACmE,OAAO,CAAC;QACxBiC,KAAK,CAACpG,CAAC,CAACmE,OAAO,CAAC;QAChB,IAAI,CAACnI,cAAc,CAACmD,aAAa,EAAE;;IAEvC,CAAC,CAAC;EACJ;EACAkH,qBAAqB,CAAC/J,KAAK;IACzB,IAAI,CAACgK,WAAW,GAAGhK,KAAK,CAAC8G,EAAE,CAAC,CAAC;IAC7B1D,OAAO,CAAC6B,GAAG,CACT,iCAAiC,EACjCjF,KAAK,EACL,IAAI,EACJ,IAAI,CAACgK,WAAW,CACjB;IACD,IAAIlB,IAAI,GAAG9I,KAAK;IAChB,IAAI8I,IAAI,CAAC,cAAc,CAAC,CAACrH,MAAM,EAAE;MAC/BqH,IAAI,CAAC,cAAc,CAAC,GAAGA,IAAI,CAAC,cAAc,CAAC,CAAC9J,GAAG,CAAEkK,CAAC,IAAI;QACpDA,CAAC,CAAC,UAAU,CAAC,GAAGA,CAAC,CAAC,UAAU,CAAC,IAAIA,CAAC,CAAC,WAAW,CAAC;QAC/C,OAAOA,CAAC;MACV,CAAC,CAAC;;IAEJJ,IAAI,CAAC,WAAW,CAAC,GAAGA,IAAI,CAACrF,YAAY,GAAEqF,IAAI,CAAC7I,WAAW,CAACgK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAEnB,IAAI,CAAC7I,WAAW;IACvF;IACA6I,IAAI,CAAC,QAAQ,CAAC,GAAG,KAAK;IACtBA,IAAI,CAAC,KAAK,CAAC,GAAGA,IAAI,CAACR,WAAW;IAC9BQ,IAAI,CAAC,SAAS,CAAC,GAAGA,IAAI,CAACP,YAAY;IACnCO,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE;IACxBA,IAAI,CAAC,mBAAmB,CAAC,GAAGA,IAAI,CAAC,cAAc,CAAC,CAACrH,MAAM;IACvDqH,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC;IAC9BA,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI;IAErB,IAAI,CAAC/C,SAAS,CAAC9C,IAAI,CAAC6F,IAAI,CAAC;IACzB1F,OAAO,CAAC6B,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAACc,SAAS,EAAE+C,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;IACvF;IACA;IACA,IAAIC,aAAa,GAAG;MAClBV,GAAG,EAAES,IAAI,CAACR,WAAW;MACrBU,OAAO,EAAEF,IAAI,CAACP;KACf;IACD,IAAItH,IAAI,GAAG,EAAE;IACbA,IAAI,CAACgC,IAAI,CAAC8F,aAAa,CAAC;IACxB,IAAI,CAACzJ,aAAa,CAAC2J,eAAe,CAAChI,IAAI,CAAC;IACxC;IACA;IACA,IAAI,CAAC,IAAI,CAAC8F,UAAU,CAACwC,SAAS,EAAE;MAC9B,IAAI,CAACxC,UAAU,GAAG,IAAI,CAAChB,SAAS,CAACtE,MAAM,GAAG,IAAI,CAACsE,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE;;IAEpE,IAAI,IAAI,CAACiE,WAAW,EAAE;MACpB,MAAME,SAAS,GAAG,IAAI,CAACnE,SAAS,CAACrD,IAAI,CAClC1C,KAAK,IAAKA,KAAK,CAAC8G,EAAE,IAAI,IAAI,CAACkD,WAAW,CACxC;MACD,IAAI,CAACjD,UAAU,GAAGmD,SAAS,GAAGA,SAAS,GAAG,IAAI,CAACnE,SAAS,CAAC,GAAG,CAAC;MAC7D,IAAI,CAACiE,WAAW,GAAG,IAAI;;IAEzB,IAAI,CAACnD,cAAc,GAAG,IAAI;IAG1BO,UAAU,CAAC,MAAK;MACd,IAAI,CAAC+C,UAAU,EAAE;IACnB,CAAC,EAAE,GAAG,CAAC;IACP,IAAI,CAACzK,cAAc,CAACmD,aAAa,EAAE;EACrC;EACAmD,YAAY;IACV,IAAI,CAACvF,OAAO,GAAG,IAAI;IACnB,IAAI,CAAClB,GAAG,CAAC6K,GAAG,CAAC,WAAW,CAAC,CAAChI,SAAS,CAAEsB,CAAC,IAAI;MACxC,IAAI,CAACjD,OAAO,GAAG,KAAK;MACpB,IAAIiD,CAAC,IAAIA,CAAC,CAACC,MAAM,IAAI,GAAG,EAAE;QACxB,IAAI,CAACoC,SAAS,GAAGrC,CAAC,CAAC2G,MAAM,CAACrL,GAAG,CAAE8J,IAAI,IAAI;UACrC,IAAIA,IAAI,CAAC,cAAc,CAAC,CAACrH,MAAM,EAAE;YAC/BqH,IAAI,CAAC,cAAc,CAAC,GAAGA,IAAI,CAAC,cAAc,CAAC,CAAC9J,GAAG,CAAEkK,CAAC,IAAI;cACpDA,CAAC,CAAC,UAAU,CAAC,GAAGA,CAAC,CAAC,UAAU,CAAC,IAAIA,CAAC,CAAC,WAAW,CAAC;cAC/C,OAAOA,CAAC;YACV,CAAC,CAAC;;UAEJJ,IAAI,CAAC,WAAW,CAAC,GAAGA,IAAI,CAACrF,YAAY,GACjCqF,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GACpCA,IAAI,CAAC7I,WAAW;UACpB6I,IAAI,CAAC,QAAQ,CAAC,GAAG,KAAK;UACtBA,IAAI,CAAC,KAAK,CAAC,GAAGA,IAAI,CAACR,WAAW;UAC9BQ,IAAI,CAAC,SAAS,CAAC,GAAGA,IAAI,CAACP,YAAY;UACnCO,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE;UACxBA,IAAI,CAAC,mBAAmB,CAAC,GAAGA,IAAI,CAAC,cAAc,CAAC,CAACrH,MAAM;UACvDqH,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC;UAC9BA,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI;UACrB,OAAOA,IAAI;QACb,CAAC,CAAC;QACF1F,OAAO,CAAC6B,GAAG,CAAC,2BAA2B,EAAE,IAAI,CAAC8B,UAAU,CAAC;QACzD,IAAI,CAAC,IAAI,CAACA,UAAU,CAACwC,SAAS,EAAE;UAC9B,IAAI,CAACxC,UAAU,GAAG,IAAI,CAAChB,SAAS,CAACtE,MAAM,GAAG,IAAI,CAACsE,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE;;QAEpE,IAAI,IAAI,CAACiE,WAAW,EAAE;UACpB,MAAME,SAAS,GAAG,IAAI,CAACnE,SAAS,CAACrD,IAAI,CAClC1C,KAAK,IAAKA,KAAK,CAAC8G,EAAE,IAAI,IAAI,CAACkD,WAAW,CACxC;UACD,IAAI,CAACjD,UAAU,GAAGmD,SAAS,GAAGA,SAAS,GAAG,IAAI,CAACnE,SAAS,CAAC,GAAG,CAAC;UAC7D,IAAI,CAACiE,WAAW,GAAG,IAAI;;QAEzB,IAAI,CAACnD,cAAc,GAAG,IAAI;QAC1B,IAAI,CAACvH,aAAa,CAAC2J,eAAe,CAAC,IAAI,CAAClD,SAAS,CAAC;;MAEpDqB,UAAU,CAAC,MAAK;QACd,IAAI,CAAC+C,UAAU,EAAE;MACnB,CAAC,EAAE,GAAG,CAAC;MACP,IAAI,CAACzK,cAAc,CAACmD,aAAa,EAAE;IACrC,CAAC,CAAC;EACJ;EAEA;EACAyH,aAAa,CAACC,MAAM;IAClB,IAAI,CAACC,UAAU,GAAGD,MAAM,CAAChK,KAAK;IAC9B6C,OAAO,CAAC6B,GAAG,CAAC,kBAAkB,EAAEsF,MAAM,CAAC;IAEvC,IAAI,IAAI,CAACC,UAAU,IAAI,QAAQ,EAAE;MAC/B,IAAI,CAACT,qBAAqB,CAACQ,MAAM,CAACvK,KAAK,CAAC;MACxC;;EAEJ;;EACA4D,aAAa,CAAC5D,KAAK;IACjBoD,OAAO,CAAC6B,GAAG,CAAC,2BAA2B,EAAEjF,KAAK,CAAC;IAE/C,IAAI,CAAC6G,cAAc,GAAG7G,KAAK,CAAC8G,EAAE,IAAI,IAAI,CAACC,UAAU,CAACD,EAAE;IACpD,IAAI,CAAC,IAAI,CAACD,cAAc,EAAE,IAAI,CAACgB,OAAO,GAAG,EAAE;IAC3C,IAAI,CAACd,UAAU,GAAG/G,KAAK;IACvBA,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC;IACxB,IAAI,CAACyK,MAAM,GAAG,KAAK;IACnB,IAAI,CAAC/D,MAAM,EAAE;IACb1G,KAAK,CAACH,WAAW,GAAGG,KAAK,CAACH,WAAW,IAAI,EAAE;IAC3C,IAAI,CAAC6K,eAAe,CAAC1K,KAAK,CAACH,WAAW,CAAC;IACvC,IAAI,CAACH,cAAc,CAACmD,aAAa,EAAE;EACrC;EACA;EACA8H,OAAO,CAAC7B,IAAI;IACV1F,OAAO,CAAC6B,GAAG,CAAC,uBAAuB,EAAE6D,IAAI,CAAC;IAE1C,IAAI,CAACkB,WAAW,GAAGlB,IAAI,CAAChC,EAAE,CAAC,CAAC;IAC5B,IAAI,CAACiD,qBAAqB,CAACjB,IAAI,CAAC;EAClC;EAKA8B,SAAS,CAAC5K,KAAK;IACb,IAAIA,KAAK,CAACyD,YAAY,EAAE;MACtBqG,KAAK,CAAC,uCAAuC,CAAC;MAC9C;;IAEF9J,KAAK,CAAC,UAAU,CAAC,GAAGA,KAAK,CAAC8G,EAAE;IAC5B,IAAI,CAACtB,SAAS,CAAC1B,KAAK,CAAC9D,KAAK,CAAC;IAC3B,IAAI,CAAC4J,cAAc,GAAG,IAAI;IAC1B,IAAI,CAAClK,cAAc,CAACmD,aAAa,EAAE;EACrC;EACAgI,aAAa,CAACvH,OAAY;IACxB,IAAIwH,OAAO,GAAGxH,OAAO,CAACyH,QAAQ,CAAC,YAAY,CAAC,GACxC,yBAAyB,GACzBzH,OAAO,CAACyH,QAAQ,CAAC,MAAM,CAAC,GACxB,yBAAyB,GACzBzH,OAAO,CAACyH,QAAQ,CAAC,OAAO,CAAC,GACzB,0BAA0B,GAC1B,+FAA+F;IACnG,IAAIzH,OAAO,CAACyH,QAAQ,CAAC,QAAQ,CAAC,EAAED,OAAO,GAAG,2BAA2B;IACrE,IAAIxH,OAAO,CAACyH,QAAQ,CAAC,QAAQ,CAAC,EAAED,OAAO,GAAG,2BAA2B;IACrE,OAAOA,OAAO;EAChB;EACAE,QAAQ,CAAC1H,OAAY;IACnB,OAAOA,OAAO,CAAC2G,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC5C;EACArD,cAAc,CAACoC,OAAO;IACpB,OAAO5D,wFAAe,CAAC,IAAI,CAACW,SAAS,EAAE,cAAc,EAAEiD,OAAO,CAAC;EACjE;EACA7B,iBAAiB,CAACtB,QAAQ,EAAEgB,cAAc;IACxC,IAAIhB,QAAQ,CAACtB,IAAI,IAAI,IAAI,CAAC0G,eAAe,IAAI,CAACpE,cAAc,EAAE;IAC9D,MAAMqE,OAAO,GAAiB;MAC5BpD,SAAS,EAAEjC,QAAQ,CAACiB,EAAE;MACtBW,WAAW,EAAE,CAAC;MACdlD,IAAI,EAAEzF,mGAA8B,EAAE;MACtCuJ,GAAG,EAAExC,QAAQ,CAACwC,GAAG;MACjB7D,EAAE,EAAEqB,QAAQ,CAACrB,EAAE;MACfgE,IAAI,EAAE,IAAIvB,IAAI,EAAE,CAACkB,OAAO;KACzB;IACD,IAAI,CAAC7I,aAAa,CAAC6H,iBAAiB,CAAC+D,OAAO,CAAC;EAC/C;EACAR,eAAe,CAAC7K,WAAW;IACzB,MAAMsL,iBAAiB,GAAGtL,WAAW,CAClCgC,MAAM,CAAEiH,IAAI,IAAK,CAACA,IAAI,CAACsC,MAAM,CAAC,CAC9BpM,GAAG,CAAE8J,IAAI,IAAI;MACZ,MAAMoC,OAAO,GAAiB;QAC5BpD,SAAS,EAAEgB,IAAI,CAAChC,EAAE;QAClBW,WAAW,EAAE,CAAC;QACdlD,IAAI,EAAEzF,mGAA8B,EAAE;QACtCuJ,GAAG,EAAES,IAAI,CAACT,GAAG;QACb7D,EAAE,EAAEsE,IAAI,CAACtE,EAAE;QACXgE,IAAI,EAAE,IAAIvB,IAAI,EAAE,CAACkB,OAAO;OACzB;MACD,OAAO+C,OAAO;IAChB,CAAC,CAAC;IACJ,IAAIC,iBAAiB,CAAC1J,MAAM,EAC1B,IAAI,CAACnC,aAAa,CAAC+L,WAAW,CAACF,iBAAiB,CAAC;IACnDtL,WAAW,GAAGA,WAAW,CAACb,GAAG,CAAE8J,IAAI,IAAI;MACrCA,IAAI,CAACsC,MAAM,GAAG,IAAI;MAClB,OAAOtC,IAAI;IACb,CAAC,CAAC;EACJ;EACAwC,eAAe,CAACC,KAAe;IAC7B,IAAI,CAACC,UAAU,GAAGD,KAAK,CAACE,IAAI,CAAC,CAAC,CAAC;EACjC;EACAC,WAAW;IACT,OAAO,IAAI,CAACF,UAAU,CAACvD,IAAI,GAAG,IAAI,GAAG,IAAI;EAC3C;EACA0D,gBAAgB;IACd,IAAI,CAACH,UAAU,GAAG,IAAI;EACxB;EACAI,WAAW,CAACC,KAAK;IACf,IAAIpF,IAAI,GAAG,MAAM;IACjB,MAAMqF,QAAQ,GAAGD,KAAK,CAACpF,IAAI;IAC3B,IAAIqF,QAAQ,CAACf,QAAQ,CAAC,OAAO,CAAC,EAAEtE,IAAI,GAAG,OAAO,CAAC,KAC1C,IAAIqF,QAAQ,CAACf,QAAQ,CAAC,OAAO,CAAC,EAAEtE,IAAI,GAAG,OAAO,CAAC,KAC/C,IAAIqF,QAAQ,CAACf,QAAQ,CAAC,OAAO,CAAC,EAAEtE,IAAI,GAAG,OAAO;IACnD,OAAOA,IAAI;EACb;EACAR,eAAe;IACb,IAAI,CAAC,IAAI,CAAC8F,IAAI,CAAC,IAAI,CAAClE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC2D,UAAU,EAAE;MAChD;KACD,MAAM,IAAI,IAAI,CAAC3D,OAAO,CAACpG,MAAM,GAAG,GAAG,EAAE;MACpC,IAAI,CAACjC,MAAM,CAAC6C,KAAK,CAAC,6CAA6C,EAAE,OAAO,CAAC;MACzE;KACD,MAAM,IAAI,IAAI,CAACmJ,UAAU,IAAI,IAAI,CAACE,WAAW,EAAE,EAAE;MAChD,IAAI,CAAClM,MAAM,CAAC6C,KAAK,CAAC,0CAA0C,EAAE,OAAO,CAAC;MACtE,IAAI,CAACmJ,UAAU,GAAG,IAAI;MACtB;;IAEF,IAAI,CAAC9E,MAAM,EAAE;IACb,IAAI,CAAC,IAAI,CAACmB,OAAO,IAAI,CAAC,IAAI,CAAC2D,UAAU,EAAE;IACvC,IAAI,IAAI,CAACA,UAAU,EAAE;MACnB,MAAMQ,MAAM,GAAG;QACblF,EAAE,EAAE,IAAIG,IAAI,EAAE,CAACkB,OAAO,EAAE,CAACC,QAAQ,EAAE;QACnC7D,IAAI,EAAEzF,mGAA8B,EAAE;QACtC6I,KAAK,EAAE,IAAI,CAACZ,UAAU,CAACwB,YAAY;QACnC/D,EAAE,EAAE,IAAI,CAACuC,UAAU,CAACwB,YAAY;QAChCF,GAAG,EAAE,IAAI,CAACtB,UAAU,CAACuB,WAAW;QAChC7B,IAAI,EAAE,IAAI,CAACmF,WAAW,CAAC,IAAI,CAACJ,UAAU,CAAC;QACvChD,IAAI,EAAE,IAAIvB,IAAI,EAAE,CAACkB,OAAO;OACzB;MACD,IAAI,CAAC7I,aAAa,CAACqG,MAAM,CAACsG,QAAQ,CAAC,IAAI,CAACT,UAAU,EAAEQ,MAAM,CAAC;MAC3D,IAAI,CAACR,UAAU,GAAG,IAAI;;IAExB,IAAI,CAAC,IAAI,CAAC3D,OAAO,EAAE;IACnB,MAAMG,WAAW,GAAiB;MAChCrE,MAAM,EAAE,CAAC;MACTsE,IAAI,EAAE,CAAC;MACPxB,IAAI,EAAE,MAAM;MACZyB,cAAc,EAAE,KAAK;MACrB3D,IAAI,EAAEzF,mGAA8B,EAAE;MACtCwE,OAAO,EAAE,IAAI,CAACuE,OAAO;MACrBf,EAAE,EAAE,IAAIG,IAAI,EAAE,CAACkB,OAAO,EAAE,CAACC,QAAQ,EAAE;MACnCI,IAAI,EAAE,IAAIvB,IAAI,EAAE,CAACkB,OAAO,EAAE;MAC1BE,GAAG,EAAE,IAAI,CAACtB,UAAU,CAACuB,WAAW;MAChC9D,EAAE,EAAE,IAAI,CAACuC,UAAU,CAACwB;KACrB;IACD,IAAI,CAACjJ,aAAa,CAAC0I,WAAW,CAACA,WAAW,CAAC;IAC3C,IAAI,CAACH,OAAO,GAAG,EAAE;IACjB,IAAI,CAACnB,MAAM,EAAE;IACb,IACE,EAAE,IAAI,CAACX,SAAS,CAACtE,MAAM,IAAI,IAAI,CAACsF,UAAU,CAACD,EAAE,IAAI,IAAI,CAACf,SAAS,CAAC,CAAC,CAAC,CAACe,EAAE,CAAC,EACtE;MACA,IAAI,CAACqD,UAAU,EAAE;;EAErB;EACA+B,aAAa,CAAC3B,MAAM;IAClB,IAAIA,MAAM,CAAClC,GAAG,KAAK,OAAO,EAAE;MAC1B,IAAI,CAACpC,eAAe,EAAE;MACtB;;IAEF,MAAM+B,WAAW,GAAiB;MAChCrE,MAAM,EAAE,CAAC;MACTsE,IAAI,EAAE,CAAC;MACPxB,IAAI,EAAE,QAAQ;MACdyB,cAAc,EAAE,KAAK;MACrB3D,IAAI,EAAEzF,mGAA8B,EAAE;MACtCwE,OAAO,EAAE,GAAG;MACZwD,EAAE,EAAE,IAAIG,IAAI,EAAE,CAACkB,OAAO,EAAE,CAACC,QAAQ,EAAE;MACnCC,GAAG,EAAE,IAAI,CAACtB,UAAU,CAACuB,WAAW;MAChC9D,EAAE,EAAE,IAAI,CAACuC,UAAU,CAACwB,YAAY;MAChCC,IAAI,EAAE,IAAIvB,IAAI,EAAE,CAACkB,OAAO;KACzB;IACD,IAAI,CAAC7I,aAAa,CAAC0I,WAAW,CAACA,WAAW,CAAC;EAC7C;EACA5B,2BAA2B,CAACP,QAA4B;IACtD,MAAMqE,SAAS,GAAG,IAAI,CAACtD,cAAc,CAACf,QAAQ,CAACmD,OAAO,CAAC;IACvD,IAAIkB,SAAS,EAAE;MACb,MAAMiC,aAAa,GAAG,CAAC,GAAG,IAAIhJ,GAAG,CAAC0C,QAAQ,CAACuG,GAAG,CAACpN,GAAG,CAAEqN,CAAC,IAAKA,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC;MACvEpC,SAAS,CAAC,oBAAoB,CAAC,GAC5BiC,aAAa,IAAIA,aAAa,CAAC1K,MAAM,IAAK,CAAC;MAC9C,IAAIyI,SAAS,IAAIA,SAAS,CAACzG,YAAY,EACrCyG,SAAS,CAAC,QAAQ,CAAC,GAAGiC,aAAa,CAAC1K,MAAM,GAAG,CAAC;;IAElD,IAAI,CAAC/B,cAAc,CAACmD,aAAa,EAAE;EACrC;EACAsD,eAAe,CAACN,QAA4B;IAC1C,MAAMqE,SAAS,GAAG,IAAI,CAACtD,cAAc,CAACf,QAAQ,CAACmD,OAAO,CAAC;IACvD,IAAI,CAACkB,SAAS,EAAE;IAChB,IAAIA,SAAS,CAACzG,YAAY,EAAEyG,SAAS,CAAC,QAAQ,CAAC,GAAG,IAAI;IACtD,IAAI,CAACA,SAAS,CAACzG,YAAY,EAAE;MAC3ByG,SAAS,CAAC,oBAAoB,CAAC,GAC7BA,SAAS,CAAC,oBAAoB,CAAC,GAAGA,SAAS,CAAC,mBAAmB,CAAC,GAC5DA,SAAS,CAAC,oBAAoB,CAAC,GAAG,CAAC,GACnCA,SAAS,CAAC,oBAAoB,CAAC;;IAEvC,IAAI,CAACxK,cAAc,CAACmD,aAAa,EAAE;EACrC;EACAqD,gBAAgB,CAACL,QAA4B;IAC3C,MAAMqE,SAAS,GAAG,IAAI,CAACtD,cAAc,CAACf,QAAQ,CAACmD,OAAO,CAAC;IACvD,IAAIkB,SAAS,IAAIA,SAAS,CAACzG,YAAY,EAAEyG,SAAS,CAAC,QAAQ,CAAC,GAAG,KAAK;IACpE,IAAI,CAACA,SAAS,CAACzG,YAAY,EAAE;MAC3ByG,SAAS,CAAC,oBAAoB,CAAC,GAC7BA,SAAS,CAAC,oBAAoB,CAAC,GAAG,CAAC,GAC/BA,SAAS,CAAC,oBAAoB,CAAC,GAAG,CAAC,GACnC,CAAC;;IAET,IAAI,CAACxK,cAAc,CAACmD,aAAa,EAAE;EACrC;EACA2E,aAAa,CAAC3B,QAAqB;IACjC,IAAIA,QAAQ,CAACtB,IAAI,IAAI,IAAI,CAACgI,eAAe,CAAClI,MAAM,EAAE;IAClD,MAAM6F,SAAS,GAAG9E,wFAAe,CAC/B,IAAI,CAACW,SAAS,EACd,cAAc,EACdF,QAAQ,CAACrB,EAAE,CACZ;IACD,MAAMgI,UAAU,GAAGtC,SAAS,CAAC,cAAc,CAAC,CAACxH,IAAI,CAC9C+J,CAAC,IAAKA,CAAC,CAACpI,MAAM,IAAIwB,QAAQ,CAACtB,IAAI,CACjC;IACD,IAAIsB,QAAQ,CAACvC,OAAO,IAAI,GAAG,EAAE;MAC3B4G,SAAS,CAAC,gBAAgB,CAAC,GAAGA,SAAS,CAAC,gBAAgB,CAAC,IAAI,EAAE;MAC/DA,SAAS,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,IAAI/G,GAAG,CAAC,CAACqJ,UAAU,CAAC,CAAC,CAAC;KACzD,MAAM,IAAI3G,QAAQ,CAACvC,OAAO,IAAI,GAAG,EAAE;MAClC4G,SAAS,CAAC,gBAAgB,CAAC,GAAGA,SAAS,CAAC,gBAAgB,CAAC,CAACrI,MAAM,CAC7D4K,CAAC,IAAKA,CAAC,CAACpI,MAAM,IAAIwB,QAAQ,CAACtB,IAAI,CACjC;;IAEH2F,SAAS,CAAC,YAAY,CAAC,GACrBA,SAAS,CAAC,gBAAgB,CAAC,CAACzI,MAAM,IAAIoE,QAAQ,CAACvC,OAAO,IAAI,GAAG;IAC/D,MAAMoJ,QAAQ,GAAGxC,SAAS,CAAC,gBAAgB,CAAC,CAAClL,GAAG,CAC7C2N,OAAO,IAAKA,OAAO,CAAC1K,SAAS,CAC/B;IACD,IAAIyK,QAAQ,CAACjL,MAAM,IAAI,CAAC,EAAE;MACxByI,SAAS,CAAC,mBAAmB,CAAC,GAAGwC,QAAQ,GAAG,GAAG,GAAG,cAAc;KACjE,MAAM,IAAIA,QAAQ,CAACjL,MAAM,IAAI,CAAC,EAAE;MAC/ByI,SAAS,CAAC,mBAAmB,CAAC,GAAGwC,QAAQ,CAACE,IAAI,EAAE,GAAG,GAAG,GAAG,eAAe;KACzE,MAAM,IAAIF,QAAQ,CAACjL,MAAM,GAAG,CAAC,EAAE;MAC9ByI,SAAS,CAAC,mBAAmB,CAAC,GAC5BwC,QAAQ,CAAC7K,MAAM,CAAC,CAAC8G,CAAC,EAAEkE,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,CAACD,IAAI,EAAE,GACvC,GAAG,GACH,yBAAyB;;IAE7B;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAAClN,cAAc,CAACmD,aAAa,EAAE;EACrC;EACAiK,kBAAkB,CAACjH,QAAQ,EAAE2G,UAAU,EAAEtC,SAAS;IAChD,IAAIrE,QAAQ,CAACvC,OAAO,IAAI,GAAG,EAAE;MAC3B4G,SAAS,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,IAAI/G,GAAG,CAACqJ,UAAU,CAAC,CAAC;KACvD,MAAM,IAAI3G,QAAQ,CAACvC,OAAO,IAAI,GAAG,EAAE;MAClC4G,SAAS,CAAC,gBAAgB,CAAC,GAAGA,SAAS,CAAC,gBAAgB,CAAC,CAACrI,MAAM,CAC7D4K,CAAC,IAAKA,CAAC,CAACpI,MAAM,IAAIwB,QAAQ,CAACtB,IAAI,CACjC;;IAEH,IAAI,CAAC7E,cAAc,CAACmD,aAAa,EAAE;EACrC;EACA6D,MAAM;IACJU,UAAU,CAAC,MAAK;MACd,IAAI,CAAC9B,KAAK,CAACzE,aAAa,CAACkM,aAAa,CAAC,cAAc,CAAC,CAACC,SAAS,GAC9D,IAAI,CAAC1H,KAAK,CAACzE,aAAa,CAACkM,aAAa,CAAC,cAAc,CAAC,CAACE,YAAY;IACvE,CAAC,EAAE,GAAG,CAAC;EACT;EACAC,OAAO;IACL,IAAI,CAAC1C,UAAU,GAAG,MAAM;IACxB,IAAI,CAAC9K,cAAc,CAACmD,aAAa,EAAE;EACrC;EACAsK,MAAM;IACJ,IAAI,CAAC7N,aAAa,CAAC8N,UAAU,EAAE;IAC/BtO,oGAA+B,EAAE;IACjC,IAAI,CAACuG,MAAM,CAACiI,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACjC;EACAnD,UAAU;IACR,IAAI,IAAI,CAACpD,UAAU,CAACD,EAAE,EAAE;MACtB,IAAI,CAACf,SAAS,CAACsB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAI;QAC3B,OAAOD,CAAC,CAACR,EAAE,IAAI,IAAI,CAACC,UAAU,CAACD,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;MAC5C,CAAC,CAAC;;EAEN;EACAE,SAAS,CAACL,UAAU,EAAEd,QAAQ;IAC5B,IAAI,IAAI,CAAC0H,UAAU,CAAC5G,UAAU,EAAEd,QAAQ,CAAC,EAAE;MACzC,MAAM2H,YAAY,GAAGpI,wFAAe,CAClCuB,UAAU,CAACnD,YAAY,EACvB,QAAQ,EACRqC,QAAQ,CAACtB,IAAI,CACd;MACDsB,QAAQ,CAAC,WAAW,CAAC,GAAI2H,YAAY,IAAIA,YAAY,CAACvL,SAAS,IAAK,EAAE;;IAExE,OAAO4D,QAAQ;EACjB;EACA0H,UAAU,CAAC5G,UAAU,EAAEd,QAAQ;IAC7B,IAAIc,UAAU,CAAC,aAAa,CAAC,CAAClF,MAAM,IAAIoE,QAAQ,CAACtB,IAAI,EAAE;MACrD,MAAMkJ,eAAe,GACnB9G,UAAU,CAAC,aAAa,CAAC,CAACA,UAAU,CAAC,aAAa,CAAC,CAAClF,MAAM,GAAG,CAAC,CAAC;MACjE,OAAOgM,eAAe,CAAClJ,IAAI,IAAIsB,QAAQ,CAACtB,IAAI;;IAE9C,OAAO,IAAI;EACb;EACA2C,WAAW,CAACwG,MAAM,EAAE7H,QAAQ;IAC1B,IAAI8H,WAAW,GAAG,EAAE;IACpBA,WAAW,GAAGtH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACV,QAAQ,CAAC,CAAC;IAClD,IAAIA,QAAQ,CAACY,IAAI,IAAI,MAAM,IAAI,CAACZ,QAAQ,CAACvC,OAAO,EAAE;MAChDoK,MAAM,CAAC,aAAa,CAAC,CAACzK,IAAI,CAAC0K,WAAW,CAAC;KACxC,MAAM;MACL,MAAMC,UAAU,GAAGF,MAAM,CAAC7N,WAAW,CAAC+I,SAAS,CAC5CiF,CAAC,IAAKA,CAAC,CAAC/G,EAAE,IAAIjB,QAAQ,CAACiB,EAAE,CAC3B;MACD4G,MAAM,CAAC7N,WAAW,CAAC+N,UAAU,CAAC,GAAG/H,QAAQ;;EAE7C;EACAiI,cAAc,CAAC9N,KAAK;IAClB,MAAM+N,cAAc,GAAG/N,KAAK,CAAC8G,EAAE,IAAI,IAAI,CAACC,UAAU,CAACD,EAAE;IACrD,IAAI,CAACiH,cAAc,IAAI/N,KAAK,CAACgO,WAAW,EAAE;MACxC,OAAO,kBAAkB;KAC1B,MAAM,IAAIhO,KAAK,CAACyG,IAAI,IAAI,MAAM,EAAE;MAC/B,OAAOzG,KAAK,CAACyG,IAAI;;IAEnB,OAAOzG,KAAK,CAACiO,WAAW;EAC1B;EACAC,SAAS,CAACC,QAAQ;IAChB,IAAI,CAACC,aAAa,GAAGD,QAAQ;IAC7B,IAAI,CAACzO,cAAc,CAACmD,aAAa,EAAE;EACrC;EACAwL,UAAU;IACR,IAAI,CAACD,aAAa,GAAG,IAAI;IACzB,IAAI,CAAC1O,cAAc,CAACmD,aAAa,EAAE;EACrC;EACAyL,UAAU;IACR,IAAI,CAAC1E,cAAc,GAAG,KAAK;IAC3B,IAAI,CAAClK,cAAc,CAACmD,aAAa,EAAE;EACrC;EACA0L,YAAY;IACV,OAAO,IAAI,CAACC,QAAQ,EAAE,GAAG,IAAI,CAAC/D,MAAM,IAAI,MAAM,GAAG,KAAK;EACxD;EACAgE,gBAAgB;IACd,OAAO,IAAI,CAACD,QAAQ,EAAE,GAAG,IAAI,CAAC/D,MAAM,IAAI,KAAK,GAAG,KAAK;EACvD;EACAzF,UAAU;IACR,IAAI,CAACwF,UAAU,GAAG,QAAQ;IAC1B,IAAI,CAACC,MAAM,GAAG,MAAM;IACpB,IAAI,CAAC/K,cAAc,CAACmD,aAAa,EAAE;EACrC;EACA2L,QAAQ;IACN,OAAOE,MAAM,CAACC,UAAU,GAAG,GAAG;EAChC;;AAvyBWrS,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAe;EAAA6H;IAAA;;;;;;;;;;;;;;;;;;MCvC1BzH,4DAAAA,aAAoC;MAI9BA,uDAAAA,aAA6D;MAC/DA,0DAAAA,EAAM;MACNA,4DAAAA,aAAmC;MAEjCA,wDAAAA,oEAqDe;MAEfA,wDAAAA,mEAEe;MAEfA,wDAAAA,mEAEe;MAGjBA,0DAAAA,EAAM;MACNA,4DAAAA,aAA4B;MACGA,wDAAAA;QAAA,OAAS0H,YAAQ;MAAA,EAAC;MAC7C1H,uDAAAA,cAA4D;MAC5DA,4DAAAA,eAAyB;MAAAA,oDAAAA,IAAqC;MAAAA,0DAAAA,EAAO;MACrEA,uDAAAA,gBAA0E;MAC5EA,0DAAAA,EAAM;MAGVA,4DAAAA,eAA8D;MAGxDA,wDAAAA,oDAA6G;MAC7GA,wDAAAA,gDACI;MACNA,0DAAAA,EAAM;MAIRA,4DAAAA,eAAyB;MACvBA,wDAAAA,qEAqCe;MAEfA,wDAAAA,qDA0BM;MACRA,0DAAAA,EAAM;MAENA,4DAAAA,eAAiE;MAG7DA,wDAAAA,qEAMe;MAEfA,wDAAAA,wDAC8E;MAE9EA,4DAAAA,eAAsF;MACpFA,uDAAAA,eAAoG;MACpGA,4DAAAA,eAAqF;MAEpDA,oDAAAA,sBAAc;MAAAA,0DAAAA,EAAI;MAC/CA,4DAAAA,aAA6B;MAAAA,oDAAAA,SAAC;MAAAA,0DAAAA,EAAI;MAEpCA,4DAAAA,eAAiE;MAA/BA,wDAAAA;QAAAA,2DAAAA;QAAA;QAAA,OAASA,yDAAAA,YAAoB;MAAA,EAAC;MAC9DA,4DAAAA,eAA4B;MAExBA,uDAAAA,eAAqE;MACvEA,0DAAAA,EAAM;MACNA,4DAAAA,qBACoD;MAAlDA,wDAAAA;QAAA,OAAU0H,wCAAoC;MAAA,EAAC;MADjD1H,0DAAAA,EACoD;MAK5DA,4DAAAA,eAAkE;MAA5BA,wDAAAA;QAAA,OAAS0H,qBAAiB;MAAA,EAAC;MAC/D1H,uDAAAA,eAAuD;MACzDA,0DAAAA,EAAM;MASdA,wDAAAA,oDAGM;MAENA,wDAAAA,qDAmBM;;;MAjO2BA,uDAAAA,GAAyB;MAAzBA,wDAAAA,8BAAyB;MAMrCA,uDAAAA,GAA6B;MAA7BA,wDAAAA,qCAA6B;MAuD7BA,uDAAAA,GAA4B;MAA5BA,wDAAAA,oCAA4B;MAI5BA,uDAAAA,GAA2B;MAA3BA,wDAAAA,mCAA2B;MASfA,uDAAAA,GAAqC;MAArCA,gEAAAA,+CAAqC;MAC3CA,uDAAAA,GAA+C;MAA/CA,wDAAAA,oDAA+C;MAIxCA,uDAAAA,GAA6B;MAA7BA,wDAAAA,kCAA6B;MAGkCA,uDAAAA,GAAgB;MAAhBA,wDAAAA,wBAAgB;MAChEA,uDAAAA,GAA0B;MAA1BA,wDAAAA,kCAA0B;MAOtDA,uDAAAA,GAA0B;MAA1BA,wDAAAA,kCAA0B;MAuCTA,uDAAAA,GAAuC;MAAvCA,wDAAAA,mDAAuC;MA6BzCA,uDAAAA,GAAgC;MAAhCA,wDAAAA,qCAAgC;MAG7CA,uDAAAA,GAAgB;MAAhBA,wDAAAA,wBAAgB;MAS0BA,uDAAAA,GAAiB;MAAjBA,wDAAAA,yBAAiB;MA+BjDA,uDAAAA,IAAmB;MAAnBA,wDAAAA,2BAAmB;MAKnBA,uDAAAA,GAAoB;MAApBA,wDAAAA,4BAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChN0C;AAEhC;AACK;AACgB;AAClC;AACU;AAGc;AAG/B;AACjB;;;;;;;;;;;ICmBxBA,qEAAAA,GAA4C;IAC1CA,4DAAAA,cAAoE;IAAlCA,wDAAAA;MAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,2BAAgB,MAAM,CAAC;IAAA,EAAC;IACjEA,4DAAAA,cAAiC;IAC/BA,uDAAAA,cAA2D;IAC3DA,4DAAAA,YAA6C;IAAAA,oDAAAA,GAAoB;IAAAA,0DAAAA,EAAI;IAEvEA,4DAAAA,cAA2D;IACzDA,uDAAAA,cAAuE;IACzEA,0DAAAA,EAAM;IAEVA,mEAAAA,EAAe;;;;IANoCA,uDAAAA,GAAoB;IAApBA,+DAAAA,mBAAoB;;;ADhBnE,MAAOU,gBAAgB;EAS3Bf,YACSkC,aAA4B,EAC3BC,GAAgB,EACjBgG,MAAiB,EAChB/F,MAAqB;IAHtB,kBAAa,GAAbF,aAAa;IACZ,QAAG,GAAHC,GAAG;IACJ,WAAM,GAANgG,MAAM;IACL,WAAM,GAAN/F,MAAM;IAZhB,YAAO,GAAG,IAAI;IACd,aAAQ,GAAG,EAAE;IACb,iBAAY,GAAG,EAAE;IACP,gBAAW,GAAG,IAAId,uDAAY,EAAU,CAAC,CAAC;IAE1C,kBAAa,GAAG,IAAIA,uDAAY,EAAU;EASpD;EAEAoB,QAAQ,IACR;EAEAa,eAAe;IACb,IAAI,IAAI,CAACC,WAAW,EAAE;MACpB7B,6EAAS,CAAC,IAAI,CAAC6B,WAAW,CAACC,aAAa,EAAE,OAAO,CAAC,CAC/CC,IAAI,CACH9B,gEAAG,CAAEuB,KAAY,IAAMA,KAAK,CAACQ,MAA2B,CAACC,KAAK,CAAC,EAC/D/B,kFAAY,CAAC,IAAI,CAAC,EAClBC,kGAAoB,EAAE,EACtBE,yDAAS,CAAC,EAAE,CAAC,EACbD,0EAAQ,CAAC6B,KAAK,IAAG;QACf,IAAI,CAACP,OAAO,GAAG,IAAI;QACnB,IAAI,CAACO,KAAK,EAAE;UACV,MAAMC,IAAI,GAAG;YACXC,OAAO,EAAE,wBAAwB;YACjCC,YAAY,EAAE,WAAW;YACzBC,YAAY,EAAE,EAAE;YAChBC,SAAS,EAAE;WACZ;UACD,OAAO,IAAI,CAAC9B,GAAG,CAAC+B,IAAI,CAAC,UAAU,EAAEL,IAAI,CAAC,CAACH,IAAI,CAAC9B,gEAAG,CAACuC,GAAG,IAAG;YACpD,IAAG,EAAEA,GAAG,CAACC,KAAK,IAAID,GAAG,CAACC,KAAK,CAACC,MAAM,CAAC,EACnC;cACEF,GAAG,CAACC,KAAK,GAAG,EAAE;;YAEhB,IAAI,CAACE,YAAY,GAAG,CAAC,GAAGH,GAAG,CAACC,KAAK,CAAC;YAClC,OAAOD,GAAG;UACZ,CAAC,CAAC,CAAC;;QAEL,MAAMI,SAAS,GAAG,CAAC,GAAG,IAAI,CAACD,YAAY,CAAC;QACxC,MAAME,UAAU,GAAGD,SAAS,CAACE,MAAM,CAACC,IAAI,IAAG;UACzC,MAAMC,WAAW,GAAGf,KAAK,CAACgB,WAAW,EAAE;UACvC,IAAIF,IAAI,CAACG,SAAS,CAACD,WAAW,EAAE,CAACE,UAAU,CAACH,WAAW,CAAC,EAAE;YAAE,OAAO,CAAC,CAAC;;QACvE,CAAC,CAAC;QACF,MAAMI,UAAU,GAAG;UACjBX,KAAK,EAAEI;SACR;QACD,OAAOvC,yCAAE,CAAC8C,UAAU,CAAC;MACvB,CAAC,CAAC,CACH,CACAC,SAAS,CAACb,GAAG,IAAG;QACf,IAAI,CAACd,OAAO,GAAG,KAAK;QACpB,IAAI,CAACc,GAAG,CAACC,KAAK,IAAI,CAACD,GAAG,CAACC,KAAK,CAACC,MAAM,EAAE;UACnC,IAAI,CAACjC,MAAM,CAAC6C,KAAK,CAAC,mBAAmB,EAAE,OAAO,CAAC;UAC/C,IAAI,CAACC,QAAQ,GAAG,EAAE;SACnB,MAAM;UACL,IAAI,CAACA,QAAQ,GAAGf,GAAG,CAACC,KAAK;;MAE7B,CAAC,CAAC;;EAER;EAGAwD,UAAU;IACR5B,OAAO,CAAC6B,GAAG,CAAC,uBAAuB,CAAC;IAGpC,IAAI,CAAClB,WAAW,CAACF,IAAI,CAAC;MAACtD,KAAK,EAAE,QAAQ;MAAEP,KAAK,EAAE;IAAE,CAAC,CAAC;EACrD;EAEA;EACA4O,aAAa;IACX,IAAI,CAAC7K,WAAW,CAACF,IAAI,CAAC;MAACtD,KAAK,EAAE,OAAO;MAAEP,KAAK,EAAE;IAAE,CAAC,CAAC;EACpD;EAEA6O,SAAS,CAAC/M,IAAI,EAAEgN,GAAG;IACjB,IAAI,IAAI,CAACrO,OAAO,EAAE;IAClB,IAAI,CAACA,OAAO,GAAG,IAAI;IACnB,MAAMQ,IAAI,GAAG;MACXhB,WAAW,EAAEnB,wFAA0B,EAAE,CAACwN,QAAQ,GAAG,GAAG,GAAGxK,IAAI,CAACG,SAAS;MACzEuB,YAAY,EAAE,CAAC1B,IAAI,CAACc,OAAO,CAAC;MAC5Ba,YAAY,EAAE;KACf;IACDL,OAAO,CAAC6B,GAAG,CAAC,yBAAyB,EAAEnG,wFAA0B,EAAE,CAAC;IAEpE,IAAI,CAACS,GAAG,CAAC+B,IAAI,CAAC,aAAa,EAAEL,IAAI,CAAC,CAACmB,SAAS,CAACsB,CAAC,IAAG;MAC/C,IAAIA,CAAC,IAAIA,CAAC,CAACC,MAAM,IAAI,GAAG,EAAE;QACxB,MAAMoF,aAAa,GAAG;UACpB,GAAGrF,CAAC,CAAC1D,KAAK;UACVqI,GAAG,EAAE3E,CAAC,CAAC1D,KAAK,CAAC,aAAa,CAAC;UAC3BgJ,OAAO,EAAEtF,CAAC,CAAC1D,KAAK,CAAC,cAAc;SAChC;QACD,MAAMiB,IAAI,GAAG,EAAE;QACfA,IAAI,CAACgC,IAAI,CAAC8F,aAAa,CAAC;QACxB,IAAI,CAACzJ,aAAa,CAAC2J,eAAe,CAAChI,IAAI,CAAC;QAGxC;QACA,MAAMqD,SAAS,GAAG;UAChBC,IAAI,EAAEzF,wFAA0B,EAAE,CAACuF,MAAM;UACzCG,EAAE,EAAE,CAAC1C,IAAI,CAACuC,MAAM,CAAC;UACjBI,MAAM,EAAE,KAAK;UACbC,UAAU,EAAEhB;SAEb;QACDN,OAAO,CAAC6B,GAAG,CAAC,8CAA8C,EAAEX,SAAS,EAAE,UAAU,EAAEZ,CAAC,EAAE,IAAI,EAACoL,GAAG,CAAC;QAC/F,IAAI,CAACxP,aAAa,CAACqF,+BAA+B,CAACL,SAAS,CAAC;QAC7D;QAGA,IAAI,CAACP,WAAW,CAACF,IAAI,CAAC;UAACtD,KAAK,EAAE,QAAQ;UAAEP,KAAK,EAAE0D,CAAC,CAAC1D;QAAK,CAAC,CAAC;QACxD0D,CAAC,CAAC1D,KAAK,CAAC+O,YAAY,GAAGD,GAAG;QAC1B,IAAI,CAAClL,aAAa,CAACC,IAAI,CAACH,CAAC,CAAC1D,KAAK,CAAC;QAChC,IAAI,CAACS,OAAO,GAAG,KAAK;;IAExB,CAAC,CAAC;EACJ;;AA3HWtC,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAd;EAAA6H;IAAA;;;;;;;;;;;;;;;;;MCpB7BzH,4DAAAA,aAA2B;MAKrBA,wDAAAA;QAAA,OAAS0H,gBAAY;MAAA,EAAC;MAHxB1H,0DAAAA,EAIE;MACFA,4DAAAA,WAA0B;MAAAA,oDAAAA,eAAQ;MAAAA,0DAAAA,EAAI;MAExCA,4DAAAA,aAA+B;MAC7BA,uDAAAA,aAA4D;MAC9DA,0DAAAA,EAAM;MAERA,4DAAAA,aAA8B;MAGxBA,uDAAAA,cAA4D;MAC9DA,0DAAAA,EAAM;MACNA,uDAAAA,qBAA4E;MAC9EA,0DAAAA,EAAM;MAERA,4DAAAA,eAAwB;MACUA,wDAAAA;QAAA,OAAS0H,mBAAe;MAAA,EAAC;MACvD1H,uDAAAA,eAA+D;MAC/DA,4DAAAA,aAAuB;MAAAA,oDAAAA,sBAAc;MAAAA,0DAAAA,EAAI;MAE3CA,uDAAAA,eAA6B;MAE7BA,4DAAAA,aAAiB;MAAAA,oDAAAA,gBAAQ;MAAAA,0DAAAA,EAAI;MAG/BA,4DAAAA,eAA6C;MAC3CA,wDAAAA,yEAUe;MACjBA,0DAAAA,EAAM;;;MAX2BA,uDAAAA,IAAW;MAAXA,wDAAAA,yBAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BqC;AAER;AACP;AAEjB;;;;;;AAO3C,MAAOlB,cAAc;EAMzBa,YACUiI,MAAc,EACd5F,GAAgB,EACjBwP,IAAiB;IAFhB,WAAM,GAAN5J,MAAM;IACN,QAAG,GAAH5F,GAAG;IACJ,SAAI,GAAJwP,IAAI;IANb,YAAO,GAAG,KAAK;IACf,cAAS,GAAG,EAAE;EAMV;EAEJnP,QAAQ;IACN,IAAI,IAAI,CAACmP,IAAI,CAACC,OAAO,EAAE,EAAE;MACvB,IAAI,CAAC7J,MAAM,CAACiI,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;;IAEhC,IAAI,CAAC6B,SAAS,EAAE;IAChB9O,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAEC,KAAK,IAAG;MACzC,IAAIA,KAAK,CAACC,IAAI,KAAK,OAAO,EAAE;QAC1B,IAAI,CAAC4O,OAAO,EAAE;;IAElB,CAAC,CAAC;EACJ;EAEAD,SAAS;IACP,IAAI,CAACE,SAAS,GAAG,IAAI,CAAC5P,GAAG,CAACO,KAAK,CAAC;MAC9B,OAAO,EAAE,IAAIrB,uDAAW,CAAC,EAAE,EAAE,CAACC,+DAAmB,EAAEA,gEAAoB,CAAC,CAAC,CAAC,EAAEA,gEAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;MACtG,UAAU,EAAE,IAAID,uDAAW,CAAC,IAAI,EAAE,CAACC,+DAAmB,EAAEA,gEAAoB,CAAC,CAAC,CAAC,EAAEA,gEAAoB,CAAC,EAAE,CAAC,CAAC;KAC3G,EAAE;MAAEwB,QAAQ,EAAE;IAAQ,CAAE,CAAC;EAC5B;EAEAgP,OAAO;IACLvQ,sFAAyB,CAAC,IAAI,CAACwQ,SAAS,CAAC;IACzC,IAAI,IAAI,CAACA,SAAS,CAACnL,OAAO,EAAE;IAC5B,MAAMqL,QAAQ,GAAG,IAAI,CAACF,SAAS,CAACrO,KAAK;IACrCuO,QAAQ,CAACP,UAAU,GAAGA,2DAAU,CAAC,CAAC;IAClC,IAAI,CAACvO,OAAO,GAAG,IAAI;IACnB,IAAI,CAAC+O,SAAS,GAAG,IAAI;IACrB,IAAI,CAACP,IAAI,CAACQ,KAAK,CAACF,QAAQ,CAAC,CAACnN,SAAS,CAACsB,CAAC,IAAG;MACtC,IAAI,CAACjD,OAAO,GAAG,KAAK;MACpB,IAAIiD,CAAC,IAAIA,CAAC,CAACC,MAAM,IAAI,GAAG,EAAE;QACxB7E,+FAA0B,CAAC4E,CAAC,CAAC;QAC7B5E,gGAA2B,CAAC4E,CAAC,CAACkM,UAAU,CAAC;QACzC9Q,mGAA8B,CAAC4E,CAAC,CAACW,MAAM,CAAC;QACxC,IAAI,CAACgB,MAAM,CAACiI,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;QAC9B,IAAI,CAAC+B,SAAS,CAACvL,KAAK,EAAE;OACvB,MAAM;QACL,IAAI,CAAC0L,SAAS,GAAG9L,CAAC,CAACmE,OAAO;;IAE9B,CAAC,CAAC;EACJ;EAEAiI,WAAW;IACT,IAAI,CAACT,SAAS,CAACvL,KAAK,EAAE;EACxB;;AAtDWvH,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAc;EAAAC;EAAAC;EAAAwS;EAAAvS;IAAA;MCb3BC,4DAAAA,aAA8B;MAC5BA,uDAAAA,aAAoD;MACpDA,4DAAAA,aAA0B;MACGA,oDAAAA,cAAO;MAAAA,0DAAAA,EAAK;MACvCA,4DAAAA,WAAuC;MAAAA,oDAAAA,GAAa;MAAAA,0DAAAA,EAAI;MACxDA,4DAAAA,aAAwC;MACMA,wDAAAA;QAAA,OAAU0H,aAAS;MAAA,EAAC;MAC9D1H,uDAAAA,eAAgG;MAIlGA,0DAAAA,EAAO;MAETA,4DAAAA,eAA8B;MACaA,wDAAAA;QAAA,OAAS0H,aAAS;MAAA,EAAC;MAAsB1H,oDAAAA,eAAO;MAAAA,0DAAAA,EAAS;MAClGA,4DAAAA,cAAuB;MAAwBA,oDAAAA,eAAO;MAAAA,0DAAAA,EAAI;MAC1DA,4DAAAA,aAAsB;MAAAA,oDAAAA,iBAAS;MAAAA,0DAAAA,EAAI;;;MAZEA,uDAAAA,GAAa;MAAbA,+DAAAA,eAAa;MAE5CA,uDAAAA,GAAuB;MAAvBA,wDAAAA,4BAAuB;MAEdA,uDAAAA,GAAqC;MAArCA,wDAAAA,0CAAqC;MAErCA,uDAAAA,GAAqC;MAArCA,wDAAAA,0CAAqC;MAISA,uDAAAA,GAAoB;MAApBA,wDAAAA,yBAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbN;AAEf;AAEJ;AACW;AACxB;;;;;;AAO3C,MAAOjB,eAAe;EAM1BY,YACUiI,MAAc,EACd5F,GAAgB,EACjBwP,IAAiB;IAFhB,WAAM,GAAN5J,MAAM;IACN,QAAG,GAAH5F,GAAG;IACJ,SAAI,GAAJwP,IAAI;IANb,YAAO,GAAG,KAAK;EAOX;EAEJnP,QAAQ;IACN,IAAI,CAACqP,SAAS,EAAE;IAChB9O,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAEC,KAAK,IAAG;MACzC,IAAIA,KAAK,CAACC,IAAI,KAAK,OAAO,EAAE;QAC1B,IAAI,CAAC4O,OAAO,EAAE;;IAElB,CAAC,CAAC;EACJ;EAEAD,SAAS;IACP,IAAI,CAACE,SAAS,GAAG,IAAI,CAAC5P,GAAG,CAACO,KAAK,CAAC;MAC9B,WAAW,EAAE,IAAIrB,uDAAW,CAAC,EAAE,EAAE,CAACC,+DAAmB,EAAEoR,0FAAmC,EAAEpR,gEAAoB,CAAC,CAAC,CAAC,EAAEA,gEAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;MAC/I,aAAa,EAAE,IAAID,uDAAW,CAAC,KAAK,EAAE,CAACC,+DAAmB,CAAC,CAAC;MAC5D,cAAc,EAAE,IAAID,uDAAW,CAAC,KAAK,EAAE,CAACC,+DAAmB,CAAC,CAAC;MAC7D,eAAe,EAAE,IAAID,uDAAW,CAACuR,SAAS,CAACC,QAAQ,EAAE,CAACvR,+DAAmB,CAAC,CAAC;MAC3E,OAAO,EAAE,IAAID,uDAAW,CAAC,IAAI,EAAE,CAACqR,uFAAgC,EAAEpR,+DAAmB,CAAC,CAAC;MACvF,UAAU,EAAE,IAAID,uDAAW,CAAC,IAAI,EAAE,CAACC,+DAAmB,CAAC;KACxD,EAAE;MAAEwB,QAAQ,EAAE;IAAQ,CAAE,CAAC;IAC1BgD,OAAO,CAAC6B,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACoK,SAAS,CAAC;EAChD;EAEAD,OAAO;IACLvQ,sFAAyB,CAAC,IAAI,CAACwQ,SAAS,CAAC;IACzC,IAAI,IAAI,CAACA,SAAS,CAACnL,OAAO,EAAE;IAC5B,MAAMqL,QAAQ,GAAG,IAAI,CAACF,SAAS,CAACrO,KAAK;IACrCuO,QAAQ,CAACP,UAAU,GAAGA,2DAAU,CAAC,CAAC;IAClC,IAAI,CAACvO,OAAO,GAAG,IAAI;IACnB,IAAI,CAAC+O,SAAS,GAAG,IAAI;IACrB,IAAI,CAACP,IAAI,CAACoB,MAAM,CAACd,QAAQ,CAAC,CAACnN,SAAS,CAACsB,CAAC,IAAG;MACvC,IAAI,CAACjD,OAAO,GAAG,KAAK;MACpB,IAAIiD,CAAC,IAAIA,CAAC,CAACC,MAAM,IAAI,GAAG,EAAE;QACxB7E,+FAA0B,CAAC4E,CAAC,CAAC;QAC7B5E,gGAA2B,CAAC4E,CAAC,CAACkM,UAAU,CAAC;QACzC9Q,mGAA8B,CAAC4E,CAAC,CAACW,MAAM,CAAC;QACxC,IAAI,CAACgB,MAAM,CAACiI,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;QAC9B,IAAI,CAAC+B,SAAS,CAACvL,KAAK,EAAE;OACvB,MAAM;QACL,IAAI,CAAC0L,SAAS,GAAG9L,CAAC,CAACmE,OAAO;;IAE9B,CAAC,CAAC;EACJ;;AApDWrL,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAa;EAAAC;EAAAC;EAAAwS;EAAAvS;IAAA;MCd5BC,4DAAAA,aAA8B;MAC5BA,uDAAAA,aAAoD;MACpDA,4DAAAA,aAA0B;MACGA,oDAAAA,8BAAuB;MAAAA,0DAAAA,EAAK;MACvDA,4DAAAA,WAAuC;MAAAA,oDAAAA,GAAc;MAAAA,0DAAAA,EAAI;MACzDA,4DAAAA,aAAwC;MACMA,wDAAAA;QAAA,OAAU0H,aAAS;MAAA,EAAC;MAC9D1H,uDAAAA,eAAkG;MAMpGA,0DAAAA,EAAO;MAETA,4DAAAA,eAA8B;MACaA,wDAAAA;QAAA,OAAS0H,aAAS;MAAA,EAAC;MAAuB1H,oDAAAA,gBAC/E;MAAAA,0DAAAA,EAAS;MACbA,4DAAAA,cAAuB;MAAuBA,oDAAAA,eAAO;MAAAA,0DAAAA,EAAI;;;MAdpBA,uDAAAA,GAAc;MAAdA,+DAAAA,eAAc;MAE7CA,uDAAAA,GAAuB;MAAvBA,wDAAAA,4BAAuB;MAEdA,uDAAAA,GAAsC;MAAtCA,wDAAAA,2CAAsC;MAEtCA,uDAAAA,GAAkC;MAAlCA,wDAAAA,uCAAkC;MAElCA,uDAAAA,GAAqC;MAArCA,wDAAAA,0CAAqC;MAISA,uDAAAA,GAAoB;MAApBA,wDAAAA,yBAAoB;;;;;;;;;;;;;;;;;;;ACdzE,MAAOoB,YAAY;EAE7B;;;;;;;EAOA,OAAOoF,YAAY,CAAClE,IAAI;IACpB,IAAIA,IAAI,CAACuQ,KAAK,EAAE;MACZ,OAAO,IAAI;KACd,MAAM;MACH,IAAIvQ,IAAI,CAACwQ,QAAQ,EAAE;QACf,KAAK,MAAMC,KAAK,IAAIzQ,IAAI,CAACwQ,QAAQ,EAAE;UAC/B,MAAME,OAAO,GAAG1Q,IAAI,CAACqK,GAAG,CAACoG,KAAK,CAAC;UAC/B,IAAIC,OAAO,CAACvM,OAAO,EAAE;YACjBuM,OAAO,CAACC,aAAa,CAAC;cAAEC,QAAQ,EAAE;YAAI,CAAE,CAAC;;;;MAIrD,OAAO,KAAK;;EAEpB;EAEA;;;;;;;EAOA,OAAOC,iBAAiB,CAAC7Q,IAAI;IACzB,IAAIA,IAAI,CAACuQ,KAAK,EAAE;MACZ,OAAO,IAAI;KACd,MAAM;MACH,IAAIvQ,IAAI,CAACwQ,QAAQ,EAAE;QACf,KAAK,MAAMvQ,KAAK,IAAID,IAAI,CAACwQ,QAAQ,EAAE;UAC/B,MAAMM,UAAU,GAAG9Q,IAAI,CAACqK,GAAG,CAACpK,KAAK,CAAc;UAC/C,KAAK,MAAMwQ,KAAK,IAAIK,UAAU,CAACN,QAAQ,EAAE;YACrC,MAAME,OAAO,GAAGI,UAAU,CAACzG,GAAG,CAACoG,KAAK,CAAC;YACrC,IAAIC,OAAO,CAACvM,OAAO,EAAE;cACjBuM,OAAO,CAACC,aAAa,CAAC;gBAAEC,QAAQ,EAAE;cAAI,CAAE,CAAC;;;;;MAKzD,OAAO,KAAK;;EAEpB;EAEA,OAAOG,iBAAiB,CAAC7P,IAAI;IACzB,IAAIA,IAAI,EAAE;MACN,KAAK,MAAMoH,GAAG,IAAIpH,IAAI,EAAE;QACpB,IAAIA,IAAI,CAACoH,GAAG,CAAC,IAAI,EAAE,IAAIpH,IAAI,CAACoH,GAAG,CAAC,IAAI,IAAI,EAAE;UACtC,OAAOpH,IAAI,CAACoH,GAAG,CAAC;;QAEpB,IAAIpH,IAAI,CAACoH,GAAG,CAAC,IAAI,OAAOpH,IAAI,CAACoH,GAAG,CAAC,KAAK,QAAQ,EAAE;UAC5CpH,IAAI,CAACoH,GAAG,CAAC,GAAGpH,IAAI,CAACoH,GAAG,CAAC,CAAC0I,IAAI,EAAE;;;MAGpC,OAAO9P,IAAI;;EAEnB;;;;;;;;;;;;;;;;;ACvDE,MAAO+P,kBAAkB;EAuB3BC,SAAS;IACL,OAAO,IAAI,CAACR,OAAO,IAAI,IAAI,CAACA,OAAO,CAACS,MAAM,KAAK,IAAI,CAACT,OAAO,CAACU,KAAK,IAAI,IAAI,CAACV,OAAO,CAACW,OAAO,CAAC;EAC9F;EAEAC,YAAY;IACR,MAAMH,MAAM,GAAGI,MAAM,CAACC,IAAI,CAAC,IAAI,CAACd,OAAO,CAACS,MAAM,CAAC,CAAClS,GAAG,CAACwR,KAAK,IAAI,IAAI,CAACgB,UAAU,CAAChB,KAAK,EAAE,IAAI,CAACC,OAAO,CAACS,MAAM,CAACV,KAAK,CAAC,CAAC,CAAC;IAChH,OAAOU,MAAM,CAACzP,MAAM,GAAGyP,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM;EAC7C;EAEQM,UAAU,CAAC/K,IAAY,EAAEgL,MAAW;IACxC,OAAOT,kBAAkB,CAACU,aAAa,CAACjL,IAAI,CAAC,CAACgL,MAAM,CAAC;EACzD;;AAlCST,kBAAkB,CAEHU,aAAa,GAAG;EACpC,UAAU,EAAE,MAAM,wCAAwC;EAC1D,WAAW,EAAGD,MAAM,IAAK,kCAAkC,GAAGA,MAAM,CAACE,cAAc;EACnF,WAAW,EAAGF,MAAM,IAAK,0CAA0C,GAAGA,MAAM,CAACE,cAAc;EAC3F,SAAS,EAAGF,MAAM,IAAK,2BAA2B,GAAGA,MAAM,CAACG,eAAe;EAC3E,OAAO,EAAGH,MAAM,IAAKA,MAAM,CAAC5J,OAAO;EACnC,aAAa,EAAG4J,MAAM,IAAKA,MAAM,CAAC5J,OAAO;EACzC,YAAY,EAAG4J,MAAM,IAAKA,MAAM,CAAC5J,OAAO;EACxC,kBAAkB,EAAG4J,MAAM,IAAKA,MAAM,CAAC5J,OAAO;EAC9C,iBAAiB,EAAG4J,MAAM,IAAKA,MAAM,CAAC5J,OAAO;EAC7C,eAAe,EAAE,MAAM,uCAAuC;EAC9D,aAAa,EAAE,MAAM,uCAAuC;EAC5D,OAAO,EAAE,MAAM,oBAAoB;EACnC,iBAAiB,EAAE,MAAM,2GAA2G;EACpI,2BAA2B,EAAE,MAAM,mBAAmB;EACtD,wBAAwB,EAAE,MAAM,uCAAuC;EACvE,qBAAqB,EAAE,MAAM;CAChC;AAnBQmJ,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAA3T;EAAAwU;IAAApB;EAAA;EAAAnT;EAAAC;EAAAwS;EAAAvS;IAAA;MAJ3BC,4DAAAA,WAAuB;MACtBA,oDAAAA,GACD;MAAAA,0DAAAA,EAAI;;;MADHA,uDAAAA,GACD;MADCA,gEAAAA,qDACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACP2C;AACM;AACF;AACC;AACI;AACL;AACqC;AACjC;AACA;AAC6C;AACT;AACM;AACT;AACA;AACG;AACxB;AACwC;AACb;AACO;AAChB;AACsB;AACtB;AACM;AAO3D;AACqF;;AAPrH,MAAM8W,kBAAkB,GAAwB;EAAEC,QAAQ,EAAE;AAAI,CAAE;AAmE5D,MAAOzW,iBAAiB;AAAjBA,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA;AAAiB;AAAjBA,iBAAiB;aA7BjB,CACT;IAAE0W,OAAO,EAAEP,6EAAyB;IAAEQ,QAAQ,EAAEH;EAAkB,CAAE,CACrE;EAAAtX,UA7BCwW,yFAAkB,EAClBU,mEAAe,EACfF,kFAAe,EACf3B,iEAAa,EACbE,wFAAkB,EAClBR,8DAAc,EACdC,kEAAc,EACdF,6DAAY,EACZlU,yDAAY,EACZ6U,mFAAe,EACfE,uFAAiB,EACjBE,iFAAc,EACdE,iFAAc,EACdG,8EAAmB,EACnBiB,uEAAmB,EACnBT,+EAAa,EACbT,mFAAe,EACfd,iFAAc,EACdiB,8FAAoB,EACpBvB,gEAAa,EACbyB,qFAAgB,EAChBM,8FAAoB,EACpBE,+EAAa,EACbO,sGAAwB,EAQxBb,yFAAkB,EAClBpB,kEAAc,EACd8B,mEAAe,EACf7B,iEAAa,EACbE,wFAAkB,EAClBR,8DAAc,EACdC,kEAAc,EACdH,gEAAa,EACbC,6DAAY,EACZW,mFAAe,EACfE,uFAAiB,EACjBE,iFAAc,EACdE,iFAAc,EACdG,8EAAmB,EACnBiB,uEAAmB,EACnBT,+EAAa,EACbvB,iFAAc,EACdiB,8FAAoB,EACpBH,mFAAe,EACfK,qFAAgB,EAChBM,8FAAoB,EACpB3B,8DAAY,EACZoC,sGAAwB;AAAA;;sHAGfvW,iBAAiB;IAAAd,UAxD1BwW,yFAAkB,EAClBU,mEAAe,EACfF,kFAAe,EACf3B,iEAAa,EACbE,wFAAkB,EAClBR,8DAAc,EACdC,kEAAc,EACdF,6DAAY,EACZlU,yDAAY,EACZ6U,mFAAe,EACfE,uFAAiB,EACjBE,iFAAc,EACdE,iFAAc,EACdG,8EAAmB,EACnBiB,uEAAmB,EACnBT,+EAAa,EACbT,mFAAe,EACfd,iFAAc,EACdiB,8FAAoB,EACpBvB,gEAAa,EACbyB,qFAAgB,EAChBM,8FAAoB,EACpBE,+EAAa,EACbO,sGAAwB;IAAApX,UAQxBuW,yFAAkB,EAClBpB,kEAAc,EACd8B,mEAAe,EACf7B,iEAAa,EACbE,wFAAkB,EAClBR,8DAAc,EACdC,kEAAc,EACdH,gEAAa,EACbC,6DAAY,EACZW,mFAAe,EACfE,uFAAiB,EACjBE,iFAAc,EACdE,iFAAc,EACdG,8EAAmB,EACnBiB,uEAAmB,EACnBT,+EAAa,EACbvB,iFAAc,EACdiB,8FAAoB,EACpBH,mFAAe,EACfK,qFAAgB,EAChBM,8FAAoB,EACpB3B,8DAAY,EACZoC,sGAAwB;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;ACnFtB,MAAO7X,SAAS;EACpBW,YACUuX,WAAwB,EACtBtP,MAAc;IADhB,gBAAW,GAAXsP,WAAW;IACT,WAAM,GAANtP,MAAM;EACd;EAEJxI,WAAW;IACT,MAAM+X,eAAe,GAAG,IAAI,CAACD,WAAW,CAACC,eAAe,EAAE;IAC1D,IAAI,CAACA,eAAe,EAAE;MACpB,IAAI,CAACvP,MAAM,CAACiI,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/B,OAAO,KAAK;;IAEd,OAAO,IAAI;EACb;;AAbW7Q,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAoY,SAATpY,SAAS;AAAA;;;;;;;;;;;;;;;;;;;ACJoC;AAEG;;;AAGvD,MAAOuY,WAAW;EAOtB5X,YACU6X,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAPP,iBAAY,GAAG,IAAIF,yCAAO,EAAE;IAG5B,gBAAW,GAAG,IAAID,+CAAa,CAAM,CAAC,CAAC;EAK1C;EAEJrF,KAAK,CAACxO,IAAI;IACR,OAAO,IAAI,CAACgU,IAAI,CAAC3T,IAAI,CAAC,OAAO,EAAEL,IAAI,CAAC;EACtC;EAEAoP,MAAM,CAACpP,IAAI;IACT,OAAO,IAAI,CAACgU,IAAI,CAAC3T,IAAI,CAAC,QAAQ,EAAEL,IAAI,CAAC;EACvC;EAEAkM,MAAM;IACJrO,sFAA+B,EAAE;EACnC;EAEAoW,QAAQ;IACN,OAAOpW,kFAA2B,EAAE;EACtC;EAEA8V,eAAe;IACb,OAAO,CAAC,CAAC,IAAI,CAACM,QAAQ,EAAE;EAC1B;EAEAhG,OAAO;IACL,OAAO,CAAC,CAAC,IAAI,CAACgG,QAAQ,EAAE;EAC1B;EAEAE,SAAS;IACP,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,WAAW,GAAG,IAAIT,+CAAa,CAAC,CAAC,CAAC;EACzC;EAEAU,SAAS;IACP,MAAMC,QAAQ,GAAG3W,iFAA0B,EAAE;IAC7C,OAAO2W,QAAQ,CAACC,GAAG;EACrB;EAEAC,UAAU;IACR,OAAO,IAAI,CAACV,IAAI,CAAC7K,GAAG,CAAM,oBAAoB,CAAC;EACjD;;AAhDW4K,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAH,SAAXG,WAAW;AAAA;;;;;;;;;;;;;;;;;;;;ACLlB,SAAUY,UAAU,CAACC,GAAG;EAC1B,KAAK,MAAMxN,GAAG,IAAIwN,GAAG,EAAE;IACnB,IAAIA,GAAG,CAACC,cAAc,CAACzN,GAAG,CAAC,EACvB,OAAO,KAAK;;EAEpB,OAAO,IAAI;AACf;AAEM,SAAU0N,YAAY,CAACC,KAAK;EAC9B,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,IAAI,CAACA,KAAK,CAACvU,MAAM,EAAE;IACxC,OAAO,IAAI;GACd,MAAM;IACH,OAAO,KAAK;;AAEpB;AAEM,SAAU0U,OAAO,CAACC,KAAK;EACzB,MAAMC,cAAc,GAAGD,KAAK,CAACpU,WAAW,EAAE;EAC1C,IAAIoU,KAAK,IAAI,IAAI,IAAIC,cAAc,CAACC,KAAK,CAAC,gGAAgG,CAAC,EAAE;IACzI,OAAO,IAAI;GACd,MAAM;IACH,OAAO,KAAK;;AAEpB;AAEM,SAAUC,iBAAiB,CAACC,UAAsB,EAAExV,KAAa;EACnE,OAAOwV,UAAU,CAAC9T,IAAI,CAAC+J,CAAC,IAAIA,CAAC,IAAIzL,KAAK,CAAC;AAC3C;AAEM,SAAUoE,eAAe,CAACoR,UAAU,EAAEnO,GAAG,EAAErH,KAAK;EAClD,OAAOwV,UAAU,CAAC9T,IAAI,CAAC+J,CAAC,IAAIA,CAAC,CAACpE,GAAG,CAAC,IAAIrH,KAAK,CAAC;AAChD;AAEM,SAAUyV,eAAe,CAACrZ,WAAW;EACvC,MAAMsZ,QAAQ,GAAGtZ,WAAW,CAACuZ,SAAS,CAAC7G,WAAW;EAClD1S,WAAW,CAACuZ,SAAS,CAAC7G,WAAW,GAAG;IAChC,KAAK,MAAM8G,IAAI,IAAI,IAAI,EAAE;MACrB,IAAIA,IAAI,EAAE;QACN,MAAMC,QAAQ,GAAG,IAAI,CAACD,IAAI,CAAC;QAC3B,IAAIC,QAAQ,IAAK,OAAOA,QAAQ,CAACC,WAAW,KAAK,UAAW,EAAE;UAC1DD,QAAQ,CAACC,WAAW,EAAE;;;;IAKlC,IAAIJ,QAAQ,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAAE;MAC5CA,QAAQ,CAACK,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;;EAEvC,CAAC;AAEL;AACM,SAAUxI,QAAQ;EACpB,OAAOE,MAAM,CAACC,UAAU,GAAG,GAAG;AAClC;;;;;;;;;;;;;;;;;;;;ACpDsC;AACuB;;;;AAMvD,MAAOsI,UAAU;EAErB7Z,YACUoC,MAAqB,EACrBD,GAAgB;IADhB,WAAM,GAANC,MAAM;IACN,QAAG,GAAHD,GAAG;EAEb;EAEA2X,SAAS,CAACC,KAAY,EAAEnW,KAAa;IACnC,IAAI,CAACmW,KAAK,EAAE,OAAO9X,wCAAE,CAAC,EAAE,CAAC;IACzB,IAAI,CAAC2B,KAAK,EAAE,OAAO3B,wCAAE,CAAC8X,KAAK,CAAC;IAC5B,MAAMlW,IAAI,GAAG;MACX,cAAc,EAAE,WAAW;MAC3B,cAAc,EAAED,KAAK;MACrB,WAAW,EAAE;KACd;IACD,OAAO,IAAI,CAACzB,GAAG,CAAC+B,IAAI,CAAC,UAAU,EAAEL,IAAI,CAAC,CAACH,IAAI,CACzC7B,4DAAY,CAAC,GAAG,CAAC,EACjBD,mDAAG,CAACuC,GAAG,IAAG;MACR,IAAIA,GAAG,CAACoC,MAAM,IAAI,GAAG,EAAE;QACrB,IAAI,CAACnE,MAAM,CAAC6C,KAAK,CAAC,mBAAmB,EAAE,OAAO,CAAC;QAC/C,OAAO,EAAE;;MAEX,OAAOd,GAAG,CAACC,KAAK;IAClB,CAAC,CAAC,CACH;EACH;;AA1BWyV,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;;QAAVA,UAAU;EAAAG;AAAA;;;;;;;;;;;;;;;;;;ACJjB,MAAOC,WAAW;EACpBja,YAAoBka,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;EAAkB;EAClDJ,SAAS,CAACK,GAAG;IACT,OAAO,IAAI,CAACD,YAAY,CAACE,8BAA8B,CAACD,GAAG,CAAC;EAChE;;AAJSF,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;;QAAXA,WAAW;EAAAD;AAAA;;;;;;;;;;;;;;;;;;ACJkC;;;AAIpD,MAAOK,WAAW;EAEtBra,YACY6X,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAGT,aAAQ,GAAG,IAAIH,+CAAa,EAAO;IAC1C,cAAS,GAAG,IAAI,CAAC4C,QAAQ,CAACC,YAAY,EAAE;IAEjC,cAAS,GAAG,IAAI5C,yCAAO,EAAO;IACrC,sBAAiB,GAAG,IAAI,CAAC6C,SAAS,CAACD,YAAY,EAAE;EAN7C;EAQJ;;;;;;EAMAvN,GAAG,CAACyN,GAAG;IACL,OAAO,IAAI,CAAC5C,IAAI,CAAC7K,GAAG,CAACyN,GAAG,CAAC;EAC3B;EAEA;;;;;;EAMAC,IAAI,CAACD,GAAG,EAAE5W,IAAI,GAAG,EAAE;IACjB,OAAO,IAAI,CAACgU,IAAI,CAAC3T,IAAI,CAACuW,GAAG,EAAE5W,IAAI,CAAC;EAClC;EAEA;;;;;;;EAOAK,IAAI,CAACuW,GAAW,EAAEE,UAAe,EAAE;IACjC,OAAO,IAAI,CAAC9C,IAAI,CAAC3T,IAAI,CAACuW,GAAG,EAAEE,OAAO,CAAC;EACrC;;AAzCWN,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAA5C,SAAX4C,WAAW;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACJqG;AAC/E;AACG;AAEE;AACa;;;;AAI1D,MAAOa,WAAW;EAGpBlb,YACYiI,MAAc,EACd9F,GAAgB;IADhB,WAAM,GAAN8F,MAAM;IACN,QAAG,GAAH9F,GAAG;IAJP,YAAO,GAAG8Y,6EAAsB,GAAGA,0EAAmB;EAK1D;EAEJI,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAC9CD,GAAG,GAAG,IAAI,CAACE,cAAc,CAACF,GAAG,CAAC;IAC9B,OAAOC,IAAI,CAACE,MAAM,CAACH,GAAG,CAAC,CAClB5X,IAAI,CACDsX,mDAAG,CAAC7X,KAAK,IAAG;MACR,IAAIA,KAAK,YAAYyX,8DAAY,EAAE;QAC/B,IAAIzX,KAAK,IAAIA,KAAK,CAACuY,IAAI,EAAE;UACrB,MAAMC,MAAM,GAAGxY,KAAK,CAACuY,IAAI;UACzB,IAAI,CAACvZ,GAAG,CAACqY,SAAS,CAACe,IAAI,CAAC,KAAK,CAAC;UAC9B,IAAII,MAAM,CAACvY,IAAI,KAAK,GAAG,EAAE;YACrB1B,6EAA+B,EAAE;YACjC,IAAI,CAACka,YAAY,CAACD,MAAM,CAAClR,OAAO,CAAC;YACjC,IAAI,CAACxC,MAAM,CAACiI,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;WACnC,MAAM,IAAIyL,MAAM,CAACvY,IAAI,KAAK,GAAG,EAAE;YAC5B;YACA,IAAI,CAACwY,YAAY,CAACD,MAAM,CAAClR,OAAO,CAAC;YACjC;WACH,MAAM,IAAIkR,MAAM,CAACvY,IAAI,KAAK,GAAG,IAAIuY,MAAM,CAACvY,IAAI,KAAK,GAAG,EAAE,EACtD,MAAM;YACH,IAAI,CAACwY,YAAY,CAACD,MAAM,CAAClR,OAAO,CAAC;;;;IAKjD,CAAC,CAAC,EACFsQ,0DAAU,CAACc,QAAQ,IAAG;MAClB,IAAI,CAAC1Z,GAAG,CAACqY,SAAS,CAACe,IAAI,CAAC,KAAK,CAAC;MAC9BvV,OAAO,CAAC6B,GAAG,CAAC,+BAA+B,EAAEgU,QAAQ,CAAC5W,KAAK,CAAC;MAC5D,IAAI4W,QAAQ,YAAYhB,mEAAiB,EAAE;QACvC,IAAIgB,QAAQ,CAACtV,MAAM,KAAK,GAAG,EAAE;UACzB;QAAA,CACH,MAAM;UACH,IAAI,CAACqV,YAAY,CAACC,QAAQ,CAACpR,OAAO,CAAC;;;MAG3C,OAAOqQ,gDAAU,CAACe,QAAQ,CAAC;IAC/B,CAAC,CAAC,CACL;EACT;EAEAL,cAAc,CAACF,GAAqB;IAChCA,GAAG,GAAGA,GAAG,CAACQ,KAAK,CAAC;MAAE3B,GAAG,EAAE,IAAI,CAAC4B,OAAO,GAAGT,GAAG,CAACnB;IAAG,CAAE,CAAC;IAChD,MAAM6B,QAAQ,GAAG/S,IAAI,CAACE,SAAS,CAACmS,GAAG,CAACI,IAAI,CAAC;IACzC,MAAMlJ,UAAU,GAAG9Q,yEAA2B,EAAE;IAChD,IAAI8Q,UAAU,EAAE8I,GAAG,GAAGA,GAAG,CAACQ,KAAK,CAAC;MAAEG,OAAO,EAAEX,GAAG,CAACW,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG1J,UAAU;IAAC,CAAE,CAAC;IACtG8I,GAAG,GAAGA,GAAG,CAACQ,KAAK,CAAC;MAAEG,OAAO,EAAEX,GAAG,CAACW,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE,kBAAkB;IAAC,CAAE,CAAC;IACjFZ,GAAG,GAAGA,GAAG,CAACQ,KAAK,CAAC;MAAEJ,IAAI,EAAEM;IAAQ,CAAE,CAAC;IACnC,OAAOV,GAAG;EACd;EAEAM,YAAY,CAACO,aAAa;IACtB,IAAI,OAAOA,aAAa,IAAI,QAAQ,EAAE;MAClC;IAAA;EAGR;;AA/DSjB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAzD,SAAXyD,WAAW;AAAA;;;;;;;;;;;;;;;;;ACR2B;AACF;;AAI3C,MAAOkB,aAAa;EAKxBpc,eAAgB;EAGT0S,WAAW;IAChB,IAAI,CAAC2J,cAAc,CAAC3C,WAAW,EAAE;EACnC;EAGOpR,aAAa;IAClB,MAAM5D,IAAI,GAAGhD,wEAA0B,EAAE;IACzC,IAAI,CAAC6G,MAAM,GAAG,IAAI+T,OAAO,CAAC/T,MAAM,CAAC;MAC/BgU,SAAS,EAAE3K,2DAAU;MACrB4K,IAAI,EAAE,GAAG9X,IAAI,CAAC+X,oBAAoB,CAACC,gBAAgB,EAAE;MACrDC,UAAU,EAAE,GAAGjY,IAAI,CAACkY,eAAe,GAAGlY,IAAI,CAACkY,eAAe,CAACF,gBAAgB,GAAG,EAAE;KACjF,CAAC;IACF,IAAI,CAACnU,MAAM,CAACsU,QAAQ,CAACnY,IAAI,CAACuC,MAAM,CAAC+D,QAAQ,EAAE,EAAEtG,IAAI,CAACoY,mBAAmB,CAAC9R,QAAQ,EAAE,CAAC;EACnF;EAGOJ,WAAW,CAACH,OAAO;IACxB,IAAI,CAAClC,MAAM,CAACwU,WAAW,CAACtS,OAAO,CAAC;EAClC;EAEOoB,eAAe,CAACoB,MAAM;IAC3BA,MAAM,CAACrL,GAAG,CAACob,SAAS,IAAG;MACrB,IAAI,CAACzU,MAAM,CAAC0U,SAAS,CAACD,SAAS,CAAC;IAClC,CAAC,CAAC;EACJ;EAGO9Q,iBAAiB,CAACe,MAAM;IAC7B,IAAI,CAAC1E,MAAM,CAAC2U,WAAW,CAACjQ,MAAM,CAAC;EACjC;EAGO+C,UAAU;IACf,IAAI,CAACzH,MAAM,CAACyH,UAAU,EAAE;EAC1B;EAGA/B,WAAW,CAACkP,YAAY;IACtBA,YAAY,CAACvb,GAAG,CAAC8J,IAAI,IAAG;MACtB,IAAI,CAACnD,MAAM,CAAC6U,WAAW,CAAC1R,IAAI,CAAC;IAC/B,CAAC,CAAC;EACJ;EAGA3B,iBAAiB,CAACoT,YAAY;IAC5B,IAAI,CAAC5U,MAAM,CAAC6U,WAAW,CAACD,YAAY,CAAC;EACvC;EAGA5V,+BAA+B,CAACkR,GAAG;IACjCzS,OAAO,CAAC6B,GAAG,CAAC,oCAAoC,CAAC;IACjD,IAAI,CAACU,MAAM,CAAC8U,gBAAgB,CAAC5E,GAAG,CAAC;EACnC;;AA5DW2D,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAA3E,SAAb2E,aAAa;AAAA;;;;;;;;;;;;;;;;ACLpB,MAAO1a,cAAc;EAMzB,OAAOuO,gBAAgB;IACrBqN,YAAY,CAACC,KAAK,EAAE;IACpBC,cAAc,CAACD,KAAK,EAAE;IACtB;EACF;EAEA,OAAOxF,YAAY;IACjB,OAAOuF,YAAY,CAACG,OAAO,CAAC/b,cAAc,CAACgc,sBAAsB,CAAC;EACpE;EAEA,OAAOnL,YAAY,CAACoL,KAAK;IACvBL,YAAY,CAACM,OAAO,CAAClc,cAAc,CAACgc,sBAAsB,EAAEC,KAAK,CAAC;EACpE;EAEA,OAAOE,eAAe;IACpBP,YAAY,CAACQ,UAAU,CAACpc,cAAc,CAACgc,sBAAsB,CAAC;EAChE;EAEA,OAAOnb,eAAe;IACpB,OAAO+a,YAAY,CAACG,OAAO,CAAC/b,cAAc,CAACqc,qBAAqB,CAAC;EACnE;EAEA,OAAOtL,eAAe,CAACvD,QAAQ;IAC7BoO,YAAY,CAACM,OAAO,CAAClc,cAAc,CAACqc,qBAAqB,EAAE7O,QAAQ,CAAC;EACtE;EAEA,OAAO8O,kBAAkB;IACvBV,YAAY,CAACQ,UAAU,CAACpc,cAAc,CAACqc,qBAAqB,CAAC;EAC/D;EAEA,OAAOzL,WAAW,CAACgI,QAAQ;IACzBgD,YAAY,CAACM,OAAO,CAAClc,cAAc,CAACuc,qBAAqB,EAAEhV,IAAI,CAACE,SAAS,CAACmR,QAAQ,CAAC,CAAC;EACtF;EAEA,OAAO9X,WAAW;IAChB,OAAOyG,IAAI,CAACC,KAAK,CAACoU,YAAY,CAACG,OAAO,CAAC/b,cAAc,CAACuc,qBAAqB,CAAC,CAAC;EAC/E;EAEA,OAAOC,cAAc;IACnBZ,YAAY,CAACQ,UAAU,CAACpc,cAAc,CAACuc,qBAAqB,CAAC;EAC/D;;AA9CWvc,cAAc,CAETgc,sBAAsB,GAAG,YAAY;AAF1Chc,cAAc,CAGTqc,qBAAqB,GAAG,UAAU;AAHvCrc,cAAc,CAITuc,qBAAqB,GAAG,WAAW;AAJxCvc,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAA+V,SAAd/V,cAAc;AAAA;;;;;;;;;;;;;;;;;ACDgB;;AAMrC,MAAO0c,gBAAgB;EAD7Bpe;IAEmB,UAAK,GAAkB,IAAI2X,yCAAO,EAAE;;EAK9C0G,UAAU,CAAClE,GAAW;IAC3B,IAAI,CAACmE,SAAS,GAAG,IAAIC,SAAS,CAAC,QAAQ,GAAG,wBAAwB,GAAG,OAAO,CAAC;IAC7E,IAAI,CAACD,SAAS,CAACE,MAAM,GAAG,MAAM,IAAI,CAACC,KAAK,CAAClD,IAAI,EAAE;IAC/C,OAAO,IAAI4C,4CAAU,CAAMO,QAAQ,IAAG;MACpC,IAAI,CAACJ,SAAS,CAACK,SAAS,GAAIxb,KAAmB,IAAKub,QAAQ,CAACnD,IAAI,CAACpY,KAAK,CAAC;MACxE,IAAI,CAACmb,SAAS,CAACM,OAAO,GAAIzb,KAAY,IAAKub,QAAQ,CAACzZ,KAAK,CAAC9B,KAAK,CAAC;MAChE,IAAI,CAACmb,SAAS,CAACO,OAAO,GAAI1b,KAAiB,IAAKub,QAAQ,CAACI,QAAQ,EAAE;MACnE;MACA,OAAO,MAAM,IAAI,CAACR,SAAS,CAACS,KAAK,EAAE;IACrC,CAAC,CAAC;EACJ;EAEOC,IAAI,CAACvU,OAAe;IACzB;IACA;IACA;EAAA;EAIKwU,gBAAgB;IACrB,OAAO,IAAIC,MAAM,CAAC3W,MAAM,CAAC;MACvBiU,IAAI,EAAE,qBAAqB;MAC3B2C,IAAI,EAAE,MAAM;MACZC,WAAW,EAAE;QACXlQ,QAAQ,EAAE,MAAM;QAChBmQ,QAAQ,EAAE;OACX;MACDC,QAAQ,EAAE,OAAO;MACjBC,cAAc,EAAE,IAAI;MACpBC,MAAM,EAAE;KACT,CAAC;EACJ;;AArCWpB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAA3G,SAAhB2G,gBAAgB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNkB;AACA;AACiB;AACJ;AACV;AACI;AACA;AACG;AACH;AACI;AACe;AACyC;AACvE;AACE;;AAE7C,MAAMwB,UAAU,GAAG,CACjBhM,kFAAkB,EAClBiG,oDAAU,EACVI,sDAAW,CACZ;AAoBK,MAAOpZ,YAAY;AAAZA,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA;AAAY;AAAZA,YAAY;aAXZ,CACTa,qEAAc,EACdkW,2DAAW,EACXvY,+DAAS,EACTgb,+DAAW,EACX+B,mEAAa,EACbgC,yEAAgB,EAChB;IAAE/G,OAAO,EAAEsI,+FAA0B;IAAErI,QAAQ,EAAE;MAAEuI,WAAW,EAAE;IAAK;EAAE,CAAE,EACzE;IAAExI,OAAO,EAAEoI,oEAAiB;IAAEK,QAAQ,EAAE5E,+DAAW;IAAE6E,KAAK,EAAE;EAAI,CAAE,CACnE;EAAAlgB,UAdCZ,0DAAY,EACZwB,0DAAY;AAAA;;uHAeHI,YAAY;IAAAQ,eAvBvBuS,kFAAkB,EAClBiG,oDAAU,EACVI,sDAAW;IAAApa,UAKTZ,0DAAY,EACZwB,0DAAY;IAAAX,UARd8T,kFAAkB,EAClBiG,oDAAU,EACVI,sDAAW;EAAA;AAAA;;;;;;;;;;;;;;ACdP,MAAOrH,iBAAiB;EAE1B,OAAOoN,oBAAoB,CAAC3M,OAAO;IAC/B,IAAIA,OAAO,CAACzP,KAAK,IAAI,IAAI,IAAIyP,OAAO,CAACzP,KAAK,CAACsV,KAAK,CAAC,kBAAkB,CAAC,EAAE;MAClE,OAAO,IAAI;KACd,MAAM;MAEH,OAAO;QAAE,mBAAmB,EAAE;MAAI,CAAE;;EAE5C;EAEA,OAAO+G,sBAAsB,CAACC,MAAc;IACxC,OAAO,SAASC,QAAQ,CAAC9M,OAAO;MAC5B,MAAMzP,KAAK,GAAWyP,OAAO,CAACzP,KAAK;MACnC,IAAIA,KAAK,CAACS,MAAM,KAAK,CAAC,EAAE;QACpB,OAAOmG,SAAS;;MAEpB,MAAM4V,OAAO,GAAG,UAAU;MAC1B,MAAMC,QAAQ,GAAGzc,KAAK,CAAC0c,OAAO,CAACF,OAAO,EAAE,EAAE,CAAC;MAC3C,IAAIC,QAAQ,CAAChc,MAAM,GAAG6b,MAAM,EAAE;QAC1B,OAAO;UAAE,wBAAwB,EAAE;QAAI,CAAE;;MAE7C,OAAO1V,SAAS;IACpB,CAAC;EACL;EAEA,OAAO+V,mBAAmB,CAAClN,OAAO;IAC9B;IACA,IAAIA,OAAO,CAACzP,KAAK,CAACsV,KAAK,CAAC,uJAAuJ,CAAC,EAAE;MAC9K,OAAO,IAAI;KACd,MAAM;MACH,OAAO;QAAE,mBAAmB,EAAE;MAAI,CAAE;;EAE5C;EAEA,OAAOlG,cAAc,CAACK,OAAO;IACzB;IACA,IAAIT,iBAAiB,CAAC4N,iBAAiB,CAACnN,OAAO,CAACzP,KAAK,CAAC,EAAE,OAAO,IAAI;IACnE,MAAMqV,cAAc,GAAG5F,OAAO,CAACzP,KAAK,CAACgB,WAAW,EAAE;IAClD,IAAIyO,OAAO,CAACzP,KAAK,IAAI,IAAI,IAAIqV,cAAc,CAACC,KAAK,CAAC,gGAAgG,CAAC,EAAE;MACjJ,OAAO,IAAI;KACd,MAAM;MACH,OAAO;QAAE,qBAAqB,EAAE;MAAI,CAAE;;EAE9C;EAGA,OAAOsH,iBAAiB,CAAC5c,KAAU;IAC/B;IACA,OAAOA,KAAK,IAAI,IAAI,IAAIA,KAAK,CAACS,MAAM,KAAK,CAAC;EAC9C;EAEA,OAAOoc,oBAAoB,CAACpN,OAAO;IAC/BrN,OAAO,CAAC6B,GAAG,CAAC,sBAAsB,EAAEwL,OAAO,EAAEA,OAAO,CAACzP,KAAK,CAAC;IAC3D,IAAIyP,OAAO,CAACzP,KAAK,CAACsV,KAAK,CAAC,SAAS,CAAC,EAAE;MAChC,OAAO,IAAI;KACd,MAAM;MACH,OAAO;QAAE,aAAa,EAAE;MAAI,CAAE;;EAEtC;EAEA,OAAOwH,WAAW,CAAC9c,KAAU;IACzB,OAAOA,KAAK,CAAC+P,IAAI,EAAE;EACvB;EAEA,OAAOgN,qBAAqB,CAACtN,OAAO;IAChCrN,OAAO,CAAC6B,GAAG,CAAC,uBAAuB,EAAEwL,OAAO,CAAC;IAC7C,IAAIT,iBAAiB,CAAC4N,iBAAiB,CAACnN,OAAO,CAACzP,KAAK,CAAC,EAAE,OAAO,IAAI;IACnE,MAAMgd,UAAU,GAAGhO,iBAAiB,CAAC8N,WAAW,CAACrN,OAAO,CAACzP,KAAK,CAAC;IAC/D,IAAIgd,UAAU,CAAC1H,KAAK,CAAC,4BAA4B,CAAC,EAAE;MAChD,OAAO,IAAI;KACd,MAAM;MACH,OAAO;QAAE,mBAAmB,EAAE;MAAI,CAAE;;EAE5C;EAEA,OAAO2H,aAAa,CAACxN,OAAO;IACxB,IAAIT,iBAAiB,CAAC4N,iBAAiB,CAACnN,OAAO,CAACzP,KAAK,CAAC,EAAE,OAAO,IAAI;IACnE,IAAIyP,OAAO,CAACzP,KAAK,CAACsV,KAAK,CAAC,iKAAiK,CAAC,EAAE;MACxL,OAAO,IAAI;KACd,MAAM;MACH,OAAO;QAAE,uBAAuB,EAAE;MAAI,CAAE;;EAEhD;EAGA,OAAO4H,mBAAmB,CAACzN,OAAO;IAC9B;IACA,IAAIT,iBAAiB,CAAC4N,iBAAiB,CAACnN,OAAO,CAACzP,KAAK,CAAC,EAAE,OAAO,IAAI;IAEnE,IAAIyP,OAAO,CAACzP,KAAK,CAACsV,KAAK,CAAC,oEAAoE,CAAC,EAAE;MAC3F,OAAO,IAAI;KACd,MAAM;MACH,OAAO;QAAE,mBAAmB,EAAE;MAAI,CAAE;;EAE5C;EAGA,OAAO6H,cAAc,CAAC1N,OAAO;IACzB,IAAIT,iBAAiB,CAAC4N,iBAAiB,CAACnN,OAAO,CAACzP,KAAK,CAAC,EAAE,OAAO,IAAI;IACnE,IAAIyP,OAAO,CAACzP,KAAK,CAACsV,KAAK,CAAC,cAAc,CAAC,EAAE;MACrC,OAAO,IAAI;KACd,MAAM;MACH,OAAO;QAAE,cAAc,EAAE;MAAI,CAAE;;EAEvC;EAEA,OAAO8H,2BAA2B,CAAC3N,OAAO;IACtC,IAAIA,OAAO,CAACzP,KAAK,IAAI,IAAI,EAAE;IAC3B,IAAIqd,UAAU,GAAG,IAAI;MAAEC,UAAU,GAAG,IAAI;MAAEC,aAAa,GAAG,IAAI;IAC9D,IAAIvO,iBAAiB,CAACI,cAAc,CAACK,OAAO,CAAC,IAAI,IAAI,EAAE;MACnD4N,UAAU,GAAG,KAAK;;IAEtB,IAAI,CAAC5N,OAAO,CAACzP,KAAK,CAACsV,KAAK,CAAC,qBAAqB,CAAC,EAAE;MAC7CiI,aAAa,GAAG,KAAK;;IAEzB,IAAI,CAAC9N,OAAO,CAACzP,KAAK,CAACsV,KAAK,CAAC,2DAA2D,CAAC,EAAE;MACnFgI,UAAU,GAAG,KAAK;;IAEtBlb,OAAO,CAAC6B,GAAG,CAAC,6BAA6B,EAAE+K,iBAAiB,CAACI,cAAc,CAACK,OAAO,CAAC,EAAE4N,UAAU,EAAEE,aAAa,EAAED,UAAU,CAAC;IAC5H,IAAID,UAAU,IAAIE,aAAa,IAAID,UAAU,EAAE,OAAO,IAAI;IAC1D,OAAO;MAAE,sBAAsB,EAAE;IAAI,CAAE;EAC3C;EAEA,OAAOrO,iBAAiB,CAACQ,OAAO;IAC5B;IACA,IAAIA,OAAO,CAACzP,KAAK,IAAI,IAAI,IAAIyP,OAAO,CAACzP,KAAK,CAACsV,KAAK,CAAC,gBAAgB,CAAC,EAAE;MAChE,OAAO,IAAI;KACd,MAAM;MACH,OAAO;QAAE,2BAA2B,EAAE;MAAI,CAAE;;EAEpD;EAEA,OAAOkI,iBAAiB,CAAC/N,OAAO;IAC5B;IACA;IACA,IAAIA,OAAO,CAACzP,KAAK,IAAI,CAACgP,iBAAiB,CAACqN,sBAAsB,CAAC,CAAC,CAAC,CAAC5M,OAAO,CAAC,IAAIA,OAAO,CAACzP,KAAK,CAACsV,KAAK,CAAC,yCAAyC,CAAC,EAAE;MAC1I,OAAO,IAAI;KACd,MAAM;MACH,OAAO;QAAE,iBAAiB,EAAE;MAAI,CAAE;;EAE1C;EAEA,OAAOmI,aAAa,CAAChO,OAAwB,EAAEiO,IAAI;IAC/C,IAAIjO,OAAO,CAACzP,KAAK,IAAI,IAAI,EAAE,OAAO,IAAI;IACtC,OAAOyP,OAAO,CAACkO,IAAI,CAACvU,GAAG,CAAC,UAAU,CAAC,CAACpJ,KAAK,IAAIyP,OAAO,CAACzP,KAAK,GAAG;MAAE4d,eAAe,EAAE;IAAI,CAAE,GAAG,IAAI;EACjG;EAGA,OAAOC,gBAAgB,CAACpO,OAAO;IAC3B,IAAIA,OAAO,CAACzP,KAAK,IAAIyP,OAAO,CAACzP,KAAK,CAACsV,KAAK,CAAC,YAAY,CAAC,EAAE;MACpD,OAAO,IAAI;KACd,MAAM;MACH,OAAO;QAAE,gBAAgB,EAAE;MAAI,CAAE;;EAEzC;EAGA,OAAOwI,QAAQ,CAAC7d,IAAI;IAChB,IAAIA,IAAI,EAAE;MACN,KAAK,MAAMoH,GAAG,IAAIpH,IAAI,EAAE;QACpB,IAAIA,IAAI,CAACoH,GAAG,CAAC,IAAI,OAAOpH,IAAI,CAACoH,GAAG,CAAC,IAAI,QAAQ,EAAE;UAC3CpH,IAAI,CAACoH,GAAG,CAAC,GAAGpH,IAAI,CAACoH,GAAG,CAAC,CAAC0I,IAAI,EAAE;;;MAGpC,OAAO9P,IAAI;;EAEnB;EAGA,OAAO8d,YAAY,CAACtO,OAAO;IACvB,IAAIT,iBAAiB,CAAC4N,iBAAiB,CAACnN,OAAO,CAACzP,KAAK,CAAC,EAAE,OAAO,IAAI;IACnE,IAAIge,UAAU,CAACvO,OAAO,CAACzP,KAAK,CAAC,IAAI,CAAC,IAAI,CAACge,UAAU,CAACvO,OAAO,CAACzP,KAAK,CAAC,IAAIie,QAAQ,CAACxO,OAAO,CAACzP,KAAK,CAAC,KAAK,CAACke,KAAK,CAACzO,OAAO,CAACzP,KAAK,CAAC,EAAE;MACnH,OAAO,IAAI;KACd,MAAM;MACH,OAAO;QAAE,eAAe,EAAE;MAAI,CAAE;;EAExC;EAGA,OAAOme,oBAAoB,CAAC1O,OAAO;IAC/B,IAAIT,iBAAiB,CAAC4N,iBAAiB,CAACnN,OAAO,CAACzP,KAAK,CAAC,EAAE,OAAO,IAAI;IACnE,IAAIgP,iBAAiB,CAACkO,mBAAmB,CAACzN,OAAO,CAACzP,KAAK,CAAC,EAAE;IAC1D;IACA,IAAIyP,OAAO,CAACzP,KAAK,CAACsV,KAAK,CAAC,uCAAuC,CAAC,EAAE;MAC9D,OAAO,IAAI;KACd,MAAM;MACH,OAAO;QAAE,wBAAwB,EAAE;MAAI,CAAE;;EAEjD;EAGA,OAAO8I,eAAe,CAAC3O,OAAO;IAC1B,IAAIT,iBAAiB,CAAC4N,iBAAiB,CAACnN,OAAO,CAACzP,KAAK,CAAC,EAAE,OAAO,IAAI;IACnE,IAAIyP,OAAO,CAACzP,KAAK,CAACsV,KAAK,CAAC,uCAAuC,CAAC,EAAE;MAC9D,OAAO,IAAI;KACd,MAAM;MACH,OAAO;QAAE,wBAAwB,EAAE;MAAI,CAAE;;EAEjD;EAEA,OAAO+I,eAAe,CAAC5O,OAAO;IAC1B,IAAIT,iBAAiB,CAAC4N,iBAAiB,CAACnN,OAAO,CAACzP,KAAK,CAAC,EAAE,OAAO,IAAI;IACnE,IAAIyP,OAAO,CAACzP,KAAK,CAACsV,KAAK,CAAC,iBAAiB,CAAC,EAAE;MACxC,OAAO,IAAI;KACd,MAAM;MACH,OAAO;QAAE,wBAAwB,EAAE;MAAI,CAAE;;EAEjD;EAIA,OAAOgJ,aAAa,CAAC7O,OAAO;IACxB,IAAIT,iBAAiB,CAAC4N,iBAAiB,CAACnN,OAAO,CAACzP,KAAK,CAAC,EAAE,OAAO,IAAI;IACnE,IAAIyP,OAAO,CAACzP,KAAK,CAACsV,KAAK,CAAC,iBAAiB,CAAC,EAAE;MACxC,OAAO,IAAI;KACd,MAAM;MACH,OAAO;QAAE,eAAe,EAAE;MAAI,CAAE;;EAExC;EAEA,OAAOiJ,gBAAgB,CAAC9O,OAAO;IAC3B,IAAIT,iBAAiB,CAAC4N,iBAAiB,CAACnN,OAAO,CAACzP,KAAK,CAAC,EAAE,OAAO,IAAI;IACnE,IAAIgP,iBAAiB,CAACkO,mBAAmB,CAACzN,OAAO,CAACzP,KAAK,CAAC,EAAE;IAC1D,MAAMA,KAAK,GAAGyP,OAAO,CAACzP,KAAK,CAACoH,QAAQ,EAAE;IACtC,IAAIpH,KAAK,CAACsV,KAAK,CAAC,cAAc,CAAC,EAAE;MAC7B,OAAO,IAAI;KACd,MAAM;MACH,OAAO;QAAE,gBAAgB,EAAE;MAAI,CAAE;;EAEzC;EAEA,OAAOkJ,oBAAoB,CAAC/O,OAAO;IAC/B,IAAIT,iBAAiB,CAAC4N,iBAAiB,CAACnN,OAAO,CAACzP,KAAK,CAAC,EAAE,OAAO,IAAI;IACnE,MAAMA,KAAK,GAAGyP,OAAO,CAACzP,KAAK,CAACoH,QAAQ,EAAE;IACtC,IAAIpH,KAAK,CAACsV,KAAK,CAAC,qBAAqB,CAAC,EAAE;MACpC,OAAO,IAAI;KACd,MAAM;MACH,OAAO;QAAE,gBAAgB,EAAE;MAAI,CAAE;;EAEzC;EAGA,OAAOmJ,oBAAoB,CAAChP,OAAO;IAC/B,IAAIT,iBAAiB,CAAC4N,iBAAiB,CAACnN,OAAO,CAACzP,KAAK,CAAC,EAAE,OAAO,IAAI;IACnE,MAAMA,KAAK,GAAGyP,OAAO,CAACzP,KAAK,CAACoH,QAAQ,EAAE;IACtC,IAAIpH,KAAK,CAACsV,KAAK,CAAC,4CAA4C,CAAC,EAAE;MAC3D,OAAO,IAAI;KACd,MAAM;MACH,OAAO;QAAE,oBAAoB,EAAE;MAAI,CAAE;;EAE7C;EAGA,OAAOoJ,uBAAuB,CAACjP,OAAO;IAClC,IAAIT,iBAAiB,CAAC4N,iBAAiB,CAACnN,OAAO,CAACzP,KAAK,CAAC,EAAE,OAAO,IAAI;IACnE,MAAMA,KAAK,GAAGyP,OAAO,CAACzP,KAAK,CAACoH,QAAQ,EAAE;IACtC,IAAIpH,KAAK,CAACsV,KAAK,CAAC,4CAA4C,CAAC,EAAE;MAC3D,OAAO,IAAI;KACd,MAAM;MACH,OAAO;QAAE,oBAAoB,EAAE;MAAI,CAAE;;EAE7C;EAGA,OAAOqJ,WAAW,CAAClP,OAAO;IACtB,IAAIT,iBAAiB,CAAC4N,iBAAiB,CAACnN,OAAO,CAACzP,KAAK,CAAC,EAAE,OAAO,IAAI;IACnE,MAAMA,KAAK,GAAGyP,OAAO,CAACzP,KAAK,CAACoH,QAAQ,EAAE;IACtC,IAAIpH,KAAK,CAACsV,KAAK,CAAC,2JAA2J,CAAC,EAAE;MAC1K,OAAO,IAAI;KACd,MAAM;MACH,OAAO;QAAE,WAAW,EAAE;MAAI,CAAE;;EAEpC;EAGA,OAAOsJ,mBAAmB,CAACnP,OAAO;IAC9B,IAAIT,iBAAiB,CAAC4N,iBAAiB,CAACnN,OAAO,CAACzP,KAAK,CAAC,EAAE,OAAO,IAAI;IACnE,MAAMA,KAAK,GAAGyP,OAAO,CAACzP,KAAK,CAACoH,QAAQ,EAAE;IACtC,IAAIpH,KAAK,CAACsV,KAAK,CAAC,2EAA2E,CAAC,EAAE;MAC1F,OAAO,IAAI;KACd,MAAM;MACH,OAAO;QAAE,mBAAmB,EAAE;MAAI,CAAE;;EAE5C;;;;;;;;;;;;;;;ACjSG,MAAMtH,UAAU,GAAG,QAAQ;;;;;;;;;;;;;;ACAlC;AACA;AACA;AAEO,MAAMqJ,WAAW,GAAG;EACzBwH,UAAU,EAAE,KAAK;EACjBtH,UAAU,EAAE,6BAA6B;EACzCC,OAAO,EAAE;CACV;AAED;;;;;;;AAOA;;;;;;;;;;;;;;;;ACjB+C;AAGF;AACY;AAEzD,IAAIH,6EAAsB,EAAE;EAC1ByH,6DAAc,EAAE;;AAGlBC,sEAAAA,EAAwB,CAACC,eAAe,CAAC3hB,sDAAS,CAAC,CAChD4hB,KAAK,CAACC,GAAG,IAAI9c,OAAO,CAACf,KAAK,CAAC6d,GAAG,CAAC,CAAC","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/chat/add-group/add-group.component.ts","./src/app/components/chat/add-group/add-group.component.html","./src/app/components/chat/chat.component.ts","./src/app/components/chat/chat.component.html","./src/app/components/chat/new-chat/new-chat.component.ts","./src/app/components/chat/new-chat/new-chat.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/sign-up/sign-up.component.ts","./src/app/components/sign-up/sign-up.component.html","./src/app/shared/FormsHandler/FormsHandler.ts","./src/app/shared/FormsHandler/get-errors.component.ts","./src/app/shared/app-material/app-material.module.ts","./src/app/shared/auth/auth-guard.service.ts","./src/app/shared/auth/auth.service.ts","./src/app/shared/helpers/helpersFunctions.ts","./src/app/shared/pipe/filter.ts","./src/app/shared/pipe/safeurl.ts","./src/app/shared/services/base.service.ts","./src/app/shared/services/http.service.ts","./src/app/shared/services/pubsub.service.ts","./src/app/shared/services/storage.service.ts","./src/app/shared/services/websocket.service.ts","./src/app/shared/shared.module.ts","./src/app/shared/validators.ts","./src/constants/const.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChatComponent } from './components/chat/chat.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\r\nimport { AuthGuard } from './shared/auth/auth-guard.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'signup',\r\n    component: SignUpComponent\r\n  },\r\n  {\r\n    path: 'chat',\r\n    component: ChatComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  { path: '**', redirectTo: 'login' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `<router-outlet></router-outlet>`\r\n})\r\nexport class AppComponent {\r\n  constructor() { }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ChatComponent } from './components/chat/chat.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppMaterialModule } from './shared/app-material/app-material.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { AddGroupComponent } from './components/chat/add-group/add-group.component';\r\nimport { NewChatComponent } from './components/chat/new-chat/new-chat.component';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ChatComponent,\r\n    AddGroupComponent,\r\n    LoginComponent,\r\n    NewChatComponent,\r\n    SignUpComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    ReactiveFormsModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n    AppMaterialModule,\r\n    HttpClientModule,\r\n    ToastrModule.forRoot({\r\n      maxOpened: 1,\r\n      preventDuplicates: true\r\n    })\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport FormsHandler from \"src/app/shared/FormsHandler/FormsHandler\";\r\nimport { BaseService } from \"src/app/shared/services/base.service\";\r\nimport { PubsubService } from \"src/app/shared/services/pubsub.service\";\r\nimport { StorageService } from \"src/app/shared/services/storage.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { fromEvent } from \"rxjs/internal/observable/fromEvent\";\r\nimport { map } from \"rxjs/internal/operators/map\";\r\nimport { debounceTime } from \"rxjs/internal/operators/debounceTime\";\r\nimport { distinctUntilChanged } from \"rxjs/internal/operators/distinctUntilChanged\";\r\nimport { mergeMap } from \"rxjs/internal/operators/mergeMap\";\r\nimport { startWith } from \"rxjs/operators\";\r\nimport { of } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"add-group\",\r\n  templateUrl: \"./add-group.component.html\",\r\n  styleUrls: [\"./add-group.component.scss\"],\r\n})\r\nexport class AddGroupComponent implements OnInit {\r\n  currentUserName = StorageService.getAuthUsername();\r\n  currentUserData = StorageService.getUserData();\r\n  @Output() changeEvent = new EventEmitter<object>(); //<string>\r\n  form: FormGroup;\r\n  loading = true;\r\n  addGroupModel = false;\r\n  AllUsers = [];\r\n  activeChat: any = {\r\n    chatHistory: [],\r\n  };\r\n  message = \"\";\r\n  group_title = \"\";\r\n  groupnameError = \"\";\r\n  dialogRef;\r\n  selectedUsers = [];\r\n  CopyAllUsers = [];\r\n  @ViewChild(\"searchInput\") searchInput: ElementRef;\r\n  @Output() setActiveChat = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    public pubsubService: PubsubService,\r\n    private svc: BaseService,\r\n    private toastr: ToastrService,\r\n    private _fb: FormBuilder,\r\n    private changeDetector: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.form = this._fb.group(\r\n      {\r\n        group_title: new FormControl(\"\", [\r\n          Validators.required,\r\n          Validators.maxLength(100),\r\n        ]),\r\n      },\r\n      { updateOn: \"change\" }\r\n    );\r\n\r\n    document.addEventListener(\"keyup\", (event) => {\r\n      if (event.code === \"Enter\" && !this.loading) {\r\n        this.addGroup();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.searchInput) {\r\n      fromEvent(this.searchInput.nativeElement, \"input\")\r\n        .pipe(\r\n          map((event: Event) => (event.target as HTMLInputElement).value),\r\n          debounceTime(1000),\r\n          distinctUntilChanged(),\r\n          startWith(\"\"),\r\n          mergeMap((value) => {\r\n            this.loading = true;\r\n            if (!value) {\r\n              const data = {\r\n                sorting: \"ORDER BY full_name ASC\",\r\n                search_field: \"full_name\",\r\n                search_value: \"\",\r\n                condition: \"contains\",\r\n              };\r\n              return this.svc.post(\"AllUsers\", data).pipe(\r\n                map((res) => {\r\n                  if (!(res.users && res.users.length)) {\r\n                    res.users = [];\r\n                  }\r\n                  this.CopyAllUsers = [...res.users];\r\n                  return res;\r\n                })\r\n              );\r\n            }\r\n            const temparaay = [...this.CopyAllUsers];\r\n            const filteruser = temparaay.filter((user) => {\r\n              const searchValue = value.toLowerCase();\r\n              if (user.full_name.toLowerCase().startsWith(searchValue)) {\r\n                return -1;\r\n              }\r\n            });\r\n            const returnData = {\r\n              users: filteruser,\r\n            };\r\n            return of(returnData);\r\n          })\r\n        )\r\n        .subscribe((res) => {\r\n          this.loading = false;\r\n          if (!res.users || !res.users.length) {\r\n            this.toastr.error(\"Opps!\", \"No contacts found\");\r\n            this.AllUsers = [];\r\n          } else {\r\n            this.AllUsers = res.users;\r\n          }\r\n          this.setAlreadySelected();\r\n        });\r\n    }\r\n  }\r\n\r\n  setAlreadySelected() {\r\n    this.selectedUsers.map((user) => {\r\n      const userIndex = this.AllUsers.find(\r\n        (alluser) => alluser.user_id == user.user_id\r\n      );\r\n      if (userIndex) userIndex[\"selected\"] = true;\r\n    });\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  selectContact(contact) {\r\n    this.groupnameError = \"\";\r\n    contact[\"selected\"] = !contact[\"selected\"];\r\n    this.changeDetector.detectChanges();\r\n    this.selectedUsers.push(contact);\r\n    this.selectedUsers = this.selectedUsers.filter((user) => user.selected);\r\n    this.selectedUsers = [...new Set(this.selectedUsers)];\r\n    if (!this.selectedUsers.length) {\r\n      this.groupnameError = \"Please Select Contacts\";\r\n    } else if (this.selectedUsers.length > 4) {\r\n      this.groupnameError = \"Participants cannot be more than 4\";\r\n    }\r\n    console.error(\"groupnameError\", this.groupnameError);\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  openDialog(content): void {\r\n    this.groupnameError = \"\";\r\n    this.selectedUsers = this.selectedUsers.filter((user) => user.selected);\r\n    this.changeDetector.detectChanges();\r\n    if (!this.selectedUsers.length) {\r\n      this.groupnameError = \"Please Select Contacts\";\r\n      return;\r\n    } else if (this.selectedUsers.length > 4) {\r\n      this.groupnameError = \"Participants cannot be more than 4\";\r\n      return;\r\n    }\r\n    if (this.selectedUsers.length == 1) {\r\n      const useridArray = this.selectedUsers.map((user) => user.user_id);\r\n      const data = {\r\n        participants: useridArray,\r\n        auto_created: useridArray.length > 1 ? 0 : 1,\r\n        group_title: \"One to One chat\",\r\n      };\r\n      this.svc.post(\"CreateGroup\", data).subscribe((v) => {\r\n        this.changeDetector.detectChanges();\r\n        if (v && v.status == 200) {\r\n          this.groupnameError = \"\";\r\n          this.setActiveChat.emit(v.group);\r\n          this.form.reset();\r\n        }\r\n        this.selectedUsers = [];\r\n        this.changeDetector.detectChanges();\r\n        this.loading = false;\r\n        this.changeEvent.emit({event: \"THREAD\", group: v.group});\r\n      });\r\n    } else {\r\n      this.addGroupModel = true;\r\n    }\r\n  }\r\n\r\n  //Called when user clicks on done button\r\n  addGroup() {\r\n    FormsHandler.validateForm(this.form);\r\n    const useridArray = this.selectedUsers.map((user) => user.user_id);\r\n    if (this.form.invalid || !useridArray.length || this.loading) return;\r\n    if (useridArray.length > 5) {\r\n      this.toastr.error(\"OPPS!\", \"participants Can not be more than 5!\");\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    this.changeDetector.detectChanges();\r\n    let data = {\r\n      participants: useridArray,\r\n      auto_created: useridArray.length > 1 ? 0 : 1,\r\n    };\r\n    data = {\r\n      ...data,\r\n      ...this.form.value,\r\n    };\r\n    this.svc.post(\"CreateGroup\", data).subscribe((v) => {\r\n      this.changeDetector.detectChanges();\r\n      if (v && v.status == 200) {\r\n        //ABM - M2M GROUP CASE:\r\n        let participants_ref_ids = [];\r\n        this.selectedUsers.map((p) => {\r\n          participants_ref_ids.push(p.ref_id);\r\n        });\r\n        //participants_ref_ids.push(StorageService.getUserData().ref_id);\r\n        const groupInfo = {\r\n          from: StorageService.getUserData().ref_id,\r\n          to: participants_ref_ids,\r\n          action: \"new\",\r\n          groupModel: v,\r\n        };\r\n        this.pubsubService.sendNotificationOnGroupUpdation(groupInfo);\r\n\r\n        //\r\n        this.changeEvent.emit({event: \"THREAD\", group: v.group}); //added this because after creating m2m group, no group list is showing\r\n        //\r\n        this.groupnameError = \"\";\r\n        this.setActiveChat.emit(v.group);\r\n        this.toastr.success(\"Success!\", \"The group has been created!\");\r\n        this.closemodel();\r\n        this.form.reset();\r\n      }\r\n      this.selectedUsers = [];\r\n      this.changeDetector.detectChanges();\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  closemodel() {\r\n    this.selectedUsers = [];\r\n    this.addGroupModel = false;\r\n    this.AllUsers.forEach((element) => (element[\"selected\"] = false));\r\n    this.changeEvent.emit({event: \"THREAD\", group:{}});\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  backScreen() {\r\n    console.log(\"backScreen  - addp-group\");\r\n\r\n\r\n    this.changeEvent.emit({event: \"CHAT\", group:{}});\r\n  }\r\n}\r\n","<div class=\"newChatContainer\">\r\n  <div class=\"newChatHeader\">\r\n    <div class=\"newChatLeft hand\">\r\n      <img src=\"./assets/images/arrow-left.png\" class=\"arrowLeft hand\" (click)=\"backScreen()\" />\r\n      <p class=\"newChatHeading\">Create Group Chat</p>\r\n    </div>\r\n    <div class=\"newChatRight hand\" (click)=\"openDialog(content)\">\r\n      <img class=\"goodMark\" src=\"./assets/images/checkmark.png\" />\r\n    </div>\r\n  </div>\r\n  <div class=\"newChatSearchBox\">\r\n    <div class=\"input-group\">\r\n      <div class=\"input-group-prepend\">\r\n        <img src=\"./assets/images/search.png\" class=\"seacrchIcon\" />\r\n      </div>\r\n      <input type=\"text\" class=\"form-control\" placeholder=\"Search\" #searchInput />\r\n    </div>\r\n  </div>\r\n  <div class=\"newGrpChat\">\r\n    <p [ngClass]=\"groupnameError ? 'text-danger' :'cntct'\">\r\n      {{groupnameError ? groupnameError :'Select Contacts'}}\r\n    </p>\r\n  </div>\r\n  <div class=\"newListContainer max-height\">\r\n    <ng-container *ngFor=\"let user of AllUsers\">\r\n      <div class=\"contactListCard hand\" (click)=\"selectContact(user)\">\r\n        <div class=\"contactListCardLeft\">\r\n          <img src=\"./assets/images/user.png\" class=\"ListCardIcon\" />\r\n          <p class=\"ListCardName text-capitalize pb-1\">{{user.full_name}}</p>\r\n        </div>\r\n        <div class=\"selectuser contactListCardRight\" *ngIf=\"user['selected']\">\r\n          <img src=\"./assets/images/checkmark-circle.png\" class=\"ListCardButton\" />\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n\r\n<div id=\"myModal\" class=\"modal\" *ngIf=\"addGroupModel\">\r\n  <div class=\"createChatPopup\">\r\n    <div class=\"chatPopupContent groupPopup\">\r\n      <div class=\"modalHeader\">\r\n        <p class=\"modalHeading\">Create a group chat</p>\r\n        <img src=\"./assets/images/cross.png\" class=\"modalCross hand\" (click)=\"closemodel()\" />\r\n      </div>\r\n      <div class=\"modalContent\">\r\n        <form [formGroup]=\"form\" class=\"w-100\" (submit)=\"addGroup()\">\r\n          <p class=\"modalContentHeading\">Name your group chat</p>\r\n          <input type=\"text\" class=\"form-control\" placeholder=\"ex: Deeper team\" formControlName=\"group_title\" />\r\n          <form-errors [control]=\"form.get('group_title')\"></form-errors>\r\n        </form>\r\n      </div>\r\n      <button type=\"submit\" class=\"btn doneButton mt-3\" (click)=\"addGroup()\" [disabled]=\"loading\">\r\n        DONE\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #content let-modal>\r\n  <div class=\"createChatPopup\">\r\n    <div class=\"chatPopupContent\">\r\n      <div class=\"modalHeader\">\r\n        <p class=\"modalHeading\">Create a group chat</p>\r\n        <img src=\"./assets/images/cross.png\" class=\"modalCross hand\" (click)=\"modal.dismiss('Cross click')\" />\r\n      </div>\r\n      <div class=\"modalContent\">\r\n        <form [formGroup]=\"form\" class=\"w-100\" (submit)=\"addGroup()\">\r\n          <p class=\"modalContentHeading\">Name your group chat</p>\r\n          <input type=\"text\" class=\"form-control\" placeholder=\"ex: Deeper team\" formControlName=\"group_title\" />\r\n          <form-errors [control]=\"form.get('group_title')\"></form-errors>\r\n        </form>\r\n      </div>\r\n      <button type=\"submit\" class=\"btn doneButton mt-3\" (click)=\"addGroup()\" [disabled]=\"loading\">\r\n        DONE\r\n      </button>\r\n    </div>\r\n  </div>\r\n</ng-template>","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  ViewChild,\r\n  EventEmitter,\r\n  Output,\r\n} from \"@angular/core\";\r\nimport { MatLegacyDialog as MatDialog } from \"@angular/material/legacy-dialog\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { fromEvent } from \"rxjs/internal/observable/fromEvent\";\r\nimport { debounceTime } from \"rxjs/internal/operators/debounceTime\";\r\nimport { distinctUntilChanged } from \"rxjs/internal/operators/distinctUntilChanged\";\r\nimport { map } from \"rxjs/internal/operators/map\";\r\nimport { FindArrayObject } from \"src/app/shared/helpers/helpersFunctions\";\r\nimport { BaseService } from \"src/app/shared/services/base.service\";\r\nimport { PubsubService } from \"src/app/shared/services/pubsub.service\";\r\nimport { StorageService } from \"src/app/shared/services/storage.service\";\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport FormsHandler from \"src/app/shared/FormsHandler/FormsHandler\";\r\nimport {\r\n  MessageModel,\r\n  onlineOfflineModel,\r\n  receiptModel,\r\n  typingModel,\r\n} from \"src/app/shared/models/chat\";\r\n\r\n@Component({\r\n  selector: \"chat\",\r\n  templateUrl: \"./chat.component.html\",\r\n  styleUrls: [\"./chat.component.scss\"],\r\n})\r\nexport class ChatComponent implements OnInit {\r\n  @Output() setActiveChatt = new EventEmitter<string>();\r\n  @Output() changeEvent = new EventEmitter<string>();\r\n  editGroupModel = false;\r\n  groupForm: FormGroup;\r\n  loading = true;\r\n  AllGroups = [];\r\n  activeChat: any = {\r\n    chatHistory: [],\r\n  };\r\n  message = \"\";\r\n  currentUserName = StorageService.getAuthUsername();\r\n  currentUserData = StorageService.getUserData();\r\n  @ViewChild(\"messageInputElement\") messageInputElement: ElementRef;\r\n  threadType = \"THREAD\";\r\n  fileToSend: File = null;\r\n  isActiveThread = false;\r\n  popupimagesrc = \"\";\r\n  screen = \"CHAT\";\r\n  sdkconnected = false;\r\n  setToActive = null;\r\n  constructor(\r\n    public pubsubService: PubsubService,\r\n    private svc: BaseService,\r\n    private router: Router,\r\n    private elRef: ElementRef,\r\n    public dialog: MatDialog,\r\n    private toastr: ToastrService,\r\n    private changeDetector: ChangeDetectorRef,\r\n    private _fb: FormBuilder\r\n  ) {\r\n    this.groupForm = this._fb.group(\r\n      {\r\n        group_id: new FormControl(\"\", [Validators.required]),\r\n        group_title: new FormControl(\"\", [\r\n          Validators.required,\r\n          Validators.maxLength(100),\r\n        ]),\r\n      },\r\n      { updateOn: \"change\" }\r\n    );\r\n    this.pubsubService.initConfigure();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.pubsubService.Client.on(\"connect\", (response) => {\r\n      console.log(\"*** on-connect response:\\n\", response);\r\n      this.sdkconnected = true;\r\n      if (!this.AllGroups.length) {\r\n        this.getAllGroups();\r\n      }\r\n    });\r\n    this.pubsubService.Client.on(\"register\", (response) => {\r\n      console.log(\"*** on-register response:\\n\", response);\r\n    });\r\n    \r\n\r\n    this.pubsubService.Client.on(\"disconnect\", (response) => {\r\n      console.log(\"disconnect\", response);\r\n      this.sdkconnected = false;\r\n    });\r\n\r\n    document.addEventListener(\"keyup\", (event) => {\r\n      if (event.code === \"Enter\") {\r\n        this.sendTextMessage();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n\r\n    this.pubsubService.Client.on(\"authentication_error\", (res: any) => {\r\n      console.log(\"authentication_error\", res);\r\n    });\r\n\r\n    this.pubsubService.Client.on(\"offline\", (response) => {\r\n      console.log(\"*** on-offline\", response);\r\n      this.setOfflineStatus(response);\r\n    });\r\n\r\n    this.pubsubService.Client.on(\"online\", (response: onlineOfflineModel) => {\r\n      console.log(\"*** on-online\", response);\r\n      this.setOnlineStatus(response);\r\n    });\r\n\r\n    this.pubsubService.Client.on(\"subscribed\", (response) => {\r\n      console.log(\"subscribed\", response);\r\n      this.setOnlineStatusforSubscribe(response);\r\n    });\r\n\r\n    this.pubsubService.Client.on(\"message\", (response) => {\r\n      console.log(\"*** on-message response: \\n\\n\", response);\r\n      response = JSON.parse(JSON.stringify(response));\r\n      //console.trace(\"new message\", response);\r\n      if (response.data) {\r\n        this.updateGroup(response);\r\n      }\r\n      if (\r\n        response.type == \"text\" ||\r\n        response.type == \"file\" ||\r\n        response.type == \"image\" ||\r\n        response.type == \"audio\" ||\r\n        response.type == \"video\"\r\n      ) {\r\n        this.scroll();\r\n        const chatthread = this.findChatThread(response.to);\r\n        const isActiveThread = chatthread.id == this.activeChat.id;\r\n        chatthread[\"unReadCount\"] = isActiveThread\r\n          ? 0\r\n          : (chatthread[\"unReadCount\"] || 0) + 1;\r\n        response = this.messageBy(chatthread, response);\r\n        response[\"isRead\"] = isActiveThread;\r\n        response[\"auto_created\"] = chatthread[\"auto_created\"];\r\n        chatthread[\"lastMessage\"] = response.content;\r\n        chatthread[\"time\"] = new Date(response.id);\r\n        chatthread[\"type\"] = response.type;\r\n        this.pushMessage(chatthread, response);\r\n        this.readSingleMessage(response, isActiveThread);\r\n        setTimeout(() => {\r\n          this.AllGroups.sort((a, b) => {\r\n            return a.id == chatthread.id ? -1 : 1;\r\n          });\r\n        }, 500);\r\n        this.changeDetector.detectChanges();\r\n      } else if (response.type == \"typing\") {\r\n        this.setUserTyping(response);\r\n      } else if (response.receiptType == 3) {\r\n        let chName = response.topic || response.to;\r\n        if (response.to != undefined) chName = response.to;\r\n        const chatthread = this.findChatThread(chName);\r\n        const message = FindArrayObject(\r\n          chatthread.chatHistory,\r\n          \"id\",\r\n          response.messageId\r\n        );\r\n        if (message) {\r\n          message[\"readCount\"] = (message[\"readCount\"] || 0) + 1;\r\n        }\r\n        this.changeDetector.detectChanges();\r\n      }\r\n    });\r\n\r\n    if (this.messageInputElement) {\r\n      fromEvent(this.messageInputElement.nativeElement, \"input\")\r\n        .pipe(\r\n          map((event: Event) => (event.target as HTMLInputElement).value),\r\n          debounceTime(3000),\r\n          distinctUntilChanged()\r\n        )\r\n        .subscribe((data) => {\r\n          const sendMessage: MessageModel = {\r\n            status: 0,\r\n            size: 0,\r\n            type: \"typing\",\r\n            isGroupMessage: false,\r\n            from: StorageService.getAuthUsername(),\r\n            content: \"0\",\r\n            id: new Date().getTime().toString(),\r\n            key: this.activeChat.channel_key,\r\n            to: this.activeChat.channel_name,\r\n            date: new Date().getTime(),\r\n          };\r\n          this.pubsubService.sendMessage(sendMessage);\r\n        });\r\n    }\r\n  }\r\n\r\n  updateGroup(grp_info) {\r\n    let new_group = grp_info.data.groupModel.group;\r\n    console.log(\r\n      \"$$$$ in update group function \\n\\n\",\r\n      { grp_info },\r\n      { new_group }\r\n    );\r\n\r\n    // return;\r\n    if (grp_info.data.action == \"new\") {\r\n      let i = this.AllGroups.findIndex(\r\n        (grp) => grp.channel_name == new_group.channel_name\r\n      );\r\n\r\n      if (i === -1) {\r\n        let chat = grp_info.data.groupModel.group;\r\n        let subscribedata = {\r\n          key: chat.channel_key,\r\n          channel: chat.channel_name,\r\n        };\r\n        let data = [];\r\n        data.push(subscribedata);\r\n        this.pubsubService.subscribeToChat(data);\r\n        console.log(\"!!!!!! grp\", subscribedata);\r\n\r\n        //this.pubsubService.subscribeToChat(data);\r\n        if (chat[\"participants\"].length) {\r\n          chat[\"participants\"] = chat[\"participants\"].map((r) => {\r\n            r[\"username\"] = r[\"username\"] || r[\"full_name\"];\r\n            return r;\r\n          });\r\n        }\r\n        chat[\"chatTitle\"] = chat.auto_created\r\n          ? chat[\"participants\"][0][\"full_name\"]\r\n          : chat.group_title;\r\n        chat[\"Online\"] = false;\r\n        chat[\"key\"] = chat.channel_key;\r\n        chat[\"channel\"] = chat.channel_name;\r\n        chat[\"chatHistory\"] = [];\r\n        chat[\"TotalParticipants\"] = chat[\"participants\"].length;\r\n        chat[\"onlineParticipants\"] = 1;\r\n        chat[\"isSeen\"] = true;\r\n        console.log(\r\n          \"!!! final grp before pushing: \\n\\n\",\r\n          this,\r\n          \"\\n\",\r\n          chat,\r\n          \"\\n\\n\",\r\n          this.AllGroups\r\n        );\r\n\r\n        this.AllGroups.push(chat);\r\n        // this.setActiveChat(chat);\r\n        this.changeEvent.emit(\"THREAD\");\r\n        //chat.clicked_item = \"chat\";\r\n        this.setActiveChatt.emit(chat);\r\n        this.loading = false;\r\n\r\n        // console.log(\"** group added successfully\\n\", grp_info, \"\\n\");  //{new_group}, {index}, this.AllGroups\r\n      }\r\n    }\r\n\r\n    if (grp_info.data.action == \"delete\") {\r\n      //console.log(\"$$ group deleted successfully-before\\n\" , this.AllGroups);\r\n      // let cn = grp_info.data.groupModel;\r\n      let index = this.AllGroups.findIndex(\r\n        (grp) => grp.channel_name == new_group.channel_name\r\n      );\r\n      if (index > -1) {\r\n        this.AllGroups.splice(index, 1);\r\n        this.pubsubService.unsubscribeToChat({\r\n          key: new_group.channel_key,\r\n          channel: new_group.channel_name,\r\n        });\r\n        this.activeChat = {};\r\n        this.changeDetector.detectChanges();\r\n      }\r\n      console.log(\r\n        \"1234** group deleted successfully\\n\",\r\n        grp_info,\r\n        \"\\n\",\r\n        this.activeChat,\r\n        this.loading,\r\n        !this.activeChat.chatTitle && !this.loading\r\n      ); //{new_group}, {index}, this.AllGroups\r\n    }\r\n\r\n    if (grp_info.data.action == \"modify\") {\r\n      let grp_ind = this.AllGroups.findIndex(\r\n        (g) => g.channel_name === new_group.channel_name\r\n      );\r\n      // console.log(\"*** edit notification:\\n\", new_group, \"\\n\", this.AllGroups, \"\\n\");\r\n      if (grp_ind > -1) {\r\n        this.AllGroups[grp_ind].group_title = new_group.group_title;\r\n        this.AllGroups[grp_ind].chatTitle = new_group.group_title;\r\n        //console.log(\"*** edit notification:\\n\", new_group, \"\\n\", this.AllGroups, \"\\n\",new_group.group.group_title);\r\n      }\r\n    }\r\n  }\r\n  editGroup() {\r\n    FormsHandler.validateForm(this.groupForm);\r\n    console.error(\"this.groupForm.\", this.groupForm.invalid);\r\n    if (this.groupForm.invalid || this.loading) return;\r\n    const playload = this.groupForm.value;\r\n    this.loading = true;\r\n    this.svc.post(\"RenameGroup\", playload).subscribe((v) => {\r\n      if (v && v.status == 200) {\r\n        //this.getAllGroups(); //Commented this on 22-May-23 because chat history removed when rename group called\r\n\r\n        if (\r\n          this.activeChat.group_id === playload.group_id &&\r\n          this.activeChat.auto_created === 0\r\n        ) {\r\n          console.log(\"&& rename group api calleds\", this.activeChat, playload);\r\n          this.activeChat.group_title = playload.group_title;\r\n          this.activeChat.chatTitle = playload.group_title;\r\n        }\r\n\r\n        //ABM\r\n        let participants_ref_ids = [];\r\n        v.group.participants.map((p) => {\r\n          participants_ref_ids.push(p.ref_id);\r\n        });\r\n        const groupInfo = {\r\n          from: StorageService.getUserData().ref_id,\r\n          to: participants_ref_ids,\r\n          action: \"modify\",\r\n          groupModel: v,\r\n        };\r\n        console.log(\r\n          \"TT *** edit grppp  -sending side:\\n\",\r\n          groupInfo,\r\n          \"/nAPI response:\",\r\n          v\r\n        );\r\n        this.pubsubService.sendNotificationOnGroupUpdation(groupInfo);\r\n        //ABM\r\n\r\n        this.editGroupModel = false;\r\n        this.loading = false;\r\n        this.toastr.success(\"The group has been updated!\", \"Success!\");\r\n      }\r\n    });\r\n  }\r\n  deleteGroup(group) {\r\n    this.loading = true;\r\n    const playload = {\r\n      group_id: group.id,\r\n    };\r\n    this.svc.post(\"DeleteGroup\", playload).subscribe((v) => {\r\n      this.changeDetector.detectChanges();\r\n      if (v && v.status == 200) {\r\n        this.loading = false;\r\n\r\n        let i = this.AllGroups.findIndex((g) => g.id === group.id);\r\n        this.AllGroups.splice(i, 1);\r\n        console.log(\"TTTT ** delete group: \", this.AllGroups, {group}, i);\r\n        \r\n\r\n\r\n\r\n\r\n\r\n        //AMB\r\n        let participants_ref_ids = [];\r\n        group.participants.map((p) => {\r\n          participants_ref_ids.push(p.ref_id);\r\n        });\r\n        const groupInfo = {\r\n          from: StorageService.getUserData().ref_id,\r\n          to: participants_ref_ids,\r\n          action: \"delete\",\r\n          groupModel: v,\r\n        };\r\n        this.pubsubService.sendNotificationOnGroupUpdation(groupInfo);\r\n        //ABM\r\n\r\n        //this.getAllGroups(); //commented because all groups updated and chat removed \r\n        this.activeChat = {};\r\n        this.loading = false;\r\n        this.toastr.success(\"The group has been deleted!\", \"Success!\");\r\n      } else {\r\n        console.error(v.message);\r\n        alert(v.message);\r\n        this.changeDetector.detectChanges();\r\n      }\r\n    });\r\n  }\r\n  addNewGroupToAllGroup(group) {\r\n    this.setToActive = group.id; //jugaar\r\n    console.log(\r\n      \"aaaa - addNewGroupToAllGroup:  \",\r\n      group,\r\n      \"\\n\",\r\n      this.setToActive\r\n    );\r\n    let chat = group;\r\n    if (chat[\"participants\"].length) {\r\n      chat[\"participants\"] = chat[\"participants\"].map((r) => {\r\n        r[\"username\"] = r[\"username\"] || r[\"full_name\"];\r\n        return r;\r\n      });\r\n    }\r\n    chat[\"chatTitle\"] = chat.auto_created? chat.group_title.split(\"-\")[1]: chat.group_title;\r\n    //chat.auto_created? chat[\"participants\"][0][\"full_name\"] : chat.group_title;\r\n    chat[\"Online\"] = false;\r\n    chat[\"key\"] = chat.channel_key;\r\n    chat[\"channel\"] = chat.channel_name;\r\n    chat[\"chatHistory\"] = [];\r\n    chat[\"TotalParticipants\"] = chat[\"participants\"].length;\r\n    chat[\"onlineParticipants\"] = 1;\r\n    chat[\"isSeen\"] = true;\r\n\r\n    this.AllGroups.push(chat);\r\n    console.log(\"aaa allgroups:\\n\\n\", this.AllGroups, chat[\"participants\"][0][\"full_name\"]);\r\n    //======================//\r\n    // **** Subscribing group ****:\r\n    let subscribedata = {\r\n      key: chat.channel_key,\r\n      channel: chat.channel_name,\r\n    };\r\n    let data = [];\r\n    data.push(subscribedata);\r\n    this.pubsubService.subscribeToChat(data);\r\n    // **** Subscribing group ****:\r\n    //======================//\r\n    if (!this.activeChat.chatTitle) {\r\n      this.activeChat = this.AllGroups.length ? this.AllGroups[\"0\"] : {};\r\n    }\r\n    if (this.setToActive) {\r\n      const indexchat = this.AllGroups.find(\r\n        (group) => group.id == this.setToActive\r\n      );\r\n      this.activeChat = indexchat ? indexchat : this.AllGroups[\"0\"];\r\n      this.setToActive = null;\r\n    }\r\n    this.isActiveThread = true;\r\n    \r\n\r\n    setTimeout(() => {\r\n      this.sortThread();\r\n    }, 500);\r\n    this.changeDetector.detectChanges();\r\n  }\r\n  getAllGroups() {\r\n    this.loading = true;\r\n    this.svc.get(\"AllGroups\").subscribe((v) => {\r\n      this.loading = false;\r\n      if (v && v.status == 200) {\r\n        this.AllGroups = v.groups.map((chat) => {\r\n          if (chat[\"participants\"].length) {\r\n            chat[\"participants\"] = chat[\"participants\"].map((r) => {\r\n              r[\"username\"] = r[\"username\"] || r[\"full_name\"];\r\n              return r;\r\n            });\r\n          }\r\n          chat[\"chatTitle\"] = chat.auto_created\r\n            ? chat[\"participants\"][0][\"full_name\"]\r\n            : chat.group_title;\r\n          chat[\"Online\"] = false;\r\n          chat[\"key\"] = chat.channel_key;\r\n          chat[\"channel\"] = chat.channel_name;\r\n          chat[\"chatHistory\"] = [];\r\n          chat[\"TotalParticipants\"] = chat[\"participants\"].length;\r\n          chat[\"onlineParticipants\"] = 1;\r\n          chat[\"isSeen\"] = true;\r\n          return chat;\r\n        });\r\n        console.log(\"this.activeChat.chatTitle\", this.activeChat);\r\n        if (!this.activeChat.chatTitle) {\r\n          this.activeChat = this.AllGroups.length ? this.AllGroups[\"0\"] : {};\r\n        }\r\n        if (this.setToActive) {\r\n          const indexchat = this.AllGroups.find(\r\n            (group) => group.id == this.setToActive\r\n          );\r\n          this.activeChat = indexchat ? indexchat : this.AllGroups[\"0\"];\r\n          this.setToActive = null;\r\n        }\r\n        this.isActiveThread = true;\r\n        this.pubsubService.subscribeToChat(this.AllGroups);\r\n      }\r\n      setTimeout(() => {\r\n        this.sortThread();\r\n      }, 500);\r\n      this.changeDetector.detectChanges();\r\n    });\r\n  }\r\n\r\n  /* ======================================================================================================================= */\r\n  changeSidebar($event) {\r\n    this.threadType = $event.event;\r\n    console.log(\"changeSidebar:  \", $event);\r\n\r\n    if (this.threadType == \"THREAD\") {\r\n      this.addNewGroupToAllGroup($event.group);\r\n      //this.getAllGroups(); //commented on 24-May-23 because all chat removed\r\n    }\r\n  }\r\n  setActiveChat(group) {\r\n    console.log(\"aaaa - setActiveChat:  , \", group);\r\n\r\n    this.isActiveThread = group.id == this.activeChat.id;\r\n    if (!this.isActiveThread) this.message = \"\";\r\n    this.activeChat = group;\r\n    group[\"unReadCount\"] = 0;\r\n    this.screen = \"MSG\";\r\n    this.scroll();\r\n    group.chatHistory = group.chatHistory || [];\r\n    this.readsendMessage(group.chatHistory);\r\n    this.changeDetector.detectChanges();\r\n  }\r\n  //Called when group created: \r\n  setchat(chat) {\r\n    console.log(\"**** aaaa - setChat: \", chat);\r\n\r\n    this.setToActive = chat.id; //chat.id\r\n    this.addNewGroupToAllGroup(chat);\r\n  }\r\n  \r\n\r\n\r\n\r\n  openModal(group) {\r\n    if (group.auto_created) {\r\n      alert(\"Can not change One to one group title\");\r\n      return;\r\n    }\r\n    group[\"group_id\"] = group.id;\r\n    this.groupForm.reset(group);\r\n    this.editGroupModel = true;\r\n    this.changeDetector.detectChanges();\r\n  }\r\n  checkFileType(content: any) {\r\n    let preview = content.includes(\"text/plain\")\r\n      ? \"./assets/images/txt.png\"\r\n      : content.includes(\"/pdf\")\r\n      ? \"./assets/images/pdf.png\"\r\n      : content.includes(\"/json\")\r\n      ? \"./assets/images/json.png\"\r\n      : \"https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Icon-doc.svg/810px-Icon-doc.svg.png\";\r\n    if (content.includes(\"video/\")) preview = \"./assets/images/video.png\";\r\n    if (content.includes(\"audio/\")) preview = \"./assets/images/audio.png\";\r\n    return preview;\r\n  }\r\n  fileType(content: any) {\r\n    return content.split(\";\")[0].split(\":\")[1];\r\n  }\r\n  findChatThread(channel) {\r\n    return FindArrayObject(this.AllGroups, \"channel_name\", channel);\r\n  }\r\n  readSingleMessage(response, isActiveThread) {\r\n    if (response.from == this.currentUserName || !isActiveThread) return;\r\n    const chatobj: receiptModel = {\r\n      messageId: response.id,\r\n      receiptType: 3,\r\n      from: StorageService.getAuthUsername(),\r\n      key: response.key,\r\n      to: response.to,\r\n      date: new Date().getTime(),\r\n    };\r\n    this.pubsubService.readSingleMessage(chatobj);\r\n  }\r\n  readsendMessage(chatHistory) {\r\n    const unreadchatHistory = chatHistory\r\n      .filter((chat) => !chat.isRead)\r\n      .map((chat) => {\r\n        const chatobj: receiptModel = {\r\n          messageId: chat.id,\r\n          receiptType: 3,\r\n          from: StorageService.getAuthUsername(),\r\n          key: chat.key,\r\n          to: chat.to,\r\n          date: new Date().getTime(),\r\n        };\r\n        return chatobj;\r\n      });\r\n    if (unreadchatHistory.length)\r\n      this.pubsubService.readMessage(unreadchatHistory);\r\n    chatHistory = chatHistory.map((chat) => {\r\n      chat.isRead = true;\r\n      return chat;\r\n    });\r\n  }\r\n  handleFileInput(files: FileList) {\r\n    this.fileToSend = files.item(0);\r\n  }\r\n  invalidSize() {\r\n    return this.fileToSend.size / 1024 > 6144;\r\n  }\r\n  removeAttachment() {\r\n    this.fileToSend = null;\r\n  }\r\n  getFileType(fileR) {\r\n    let type = \"file\";\r\n    const filetype = fileR.type;\r\n    if (filetype.includes(\"image\")) type = \"image\";\r\n    else if (filetype.includes(\"audio\")) type = \"audio\";\r\n    else if (filetype.includes(\"video\")) type = \"video\";\r\n    return type;\r\n  }\r\n  sendTextMessage() {\r\n    if (!/\\S/.test(this.message) && !this.fileToSend) {\r\n      return;\r\n    } else if (this.message.length > 400) {\r\n      this.toastr.error(\"Message can not be more than 400 characters\", \"Opps!\");\r\n      return;\r\n    } else if (this.fileToSend && this.invalidSize()) {\r\n      this.toastr.error(\"The maximum size of file should be 6MBs.\", \"Opps!\");\r\n      this.fileToSend = null;\r\n      return;\r\n    }\r\n    this.scroll();\r\n    if (!this.message && !this.fileToSend) return;\r\n    if (this.fileToSend) {\r\n      const option = {\r\n        id: new Date().getTime().toString(),\r\n        from: StorageService.getAuthUsername(),\r\n        topic: this.activeChat.channel_name,\r\n        to: this.activeChat.channel_name,\r\n        key: this.activeChat.channel_key,\r\n        type: this.getFileType(this.fileToSend),\r\n        date: new Date().getTime(),\r\n      };\r\n      this.pubsubService.Client.SendFile(this.fileToSend, option);\r\n      this.fileToSend = null;\r\n    }\r\n    if (!this.message) return;\r\n    const sendMessage: MessageModel = {\r\n      status: 1,\r\n      size: 0,\r\n      type: \"text\",\r\n      isGroupMessage: false,\r\n      from: StorageService.getAuthUsername(),\r\n      content: this.message,\r\n      id: new Date().getTime().toString(),\r\n      date: new Date().getTime(),\r\n      key: this.activeChat.channel_key,\r\n      to: this.activeChat.channel_name,\r\n    };\r\n    this.pubsubService.sendMessage(sendMessage);\r\n    this.message = \"\";\r\n    this.scroll();\r\n    if (\r\n      !(this.AllGroups.length && this.activeChat.id == this.AllGroups[0].id)\r\n    ) {\r\n      this.sortThread();\r\n    }\r\n  }\r\n  typingmessage($event) {\r\n    if ($event.key === \"Enter\") {\r\n      this.sendTextMessage();\r\n      return;\r\n    }\r\n    const sendMessage: MessageModel = {\r\n      status: 0,\r\n      size: 0,\r\n      type: \"typing\",\r\n      isGroupMessage: false,\r\n      from: StorageService.getAuthUsername(),\r\n      content: \"1\",\r\n      id: new Date().getTime().toString(),\r\n      key: this.activeChat.channel_key,\r\n      to: this.activeChat.channel_name,\r\n      date: new Date().getTime(),\r\n    };\r\n    this.pubsubService.sendMessage(sendMessage);\r\n  }\r\n  setOnlineStatusforSubscribe(response: onlineOfflineModel) {\r\n    const indexchat = this.findChatThread(response.channel);\r\n    if (indexchat) {\r\n      const onlineNumbers = [...new Set(response.who.map((n) => n.username))];\r\n      indexchat[\"onlineParticipants\"] =\r\n        (onlineNumbers && onlineNumbers.length) || 1;\r\n      if (indexchat && indexchat.auto_created)\r\n        indexchat[\"Online\"] = onlineNumbers.length > 1;\r\n    }\r\n    this.changeDetector.detectChanges();\r\n  }\r\n  setOnlineStatus(response: onlineOfflineModel) {\r\n    const indexchat = this.findChatThread(response.channel);\r\n    if (!indexchat) return;\r\n    if (indexchat.auto_created) indexchat[\"Online\"] = true;\r\n    if (!indexchat.auto_created) {\r\n      indexchat[\"onlineParticipants\"] =\r\n        indexchat[\"onlineParticipants\"] < indexchat[\"TotalParticipants\"]\r\n          ? indexchat[\"onlineParticipants\"] + 1\r\n          : indexchat[\"onlineParticipants\"];\r\n    }\r\n    this.changeDetector.detectChanges();\r\n  }\r\n  setOfflineStatus(response: onlineOfflineModel) {\r\n    const indexchat = this.findChatThread(response.channel);\r\n    if (indexchat && indexchat.auto_created) indexchat[\"Online\"] = false;\r\n    if (!indexchat.auto_created) {\r\n      indexchat[\"onlineParticipants\"] =\r\n        indexchat[\"onlineParticipants\"] > 2\r\n          ? indexchat[\"onlineParticipants\"] - 1\r\n          : 1;\r\n    }\r\n    this.changeDetector.detectChanges();\r\n  }\r\n  setUserTyping(response: typingModel) {\r\n    if (response.from == this.currentUserData.ref_id) return;\r\n    const indexchat = FindArrayObject(\r\n      this.AllGroups,\r\n      \"channel_name\",\r\n      response.to\r\n    );\r\n    const typinguser = indexchat[\"participants\"].find(\r\n      (e) => e.ref_id == response.from\r\n    );\r\n    if (response.content == \"1\") {\r\n      indexchat[\"TypingUserList\"] = indexchat[\"TypingUserList\"] || [];\r\n      indexchat[\"TypingUserList\"] = [...new Set([typinguser])];\r\n    } else if (response.content == \"0\") {\r\n      indexchat[\"TypingUserList\"] = indexchat[\"TypingUserList\"].filter(\r\n        (e) => e.ref_id != response.from\r\n      );\r\n    }\r\n    indexchat[\"userTyping\"] =\r\n      indexchat[\"TypingUserList\"].length && response.content != \"0\";\r\n    const nameList = indexchat[\"TypingUserList\"].map(\r\n      (userObj) => userObj.full_name\r\n    );\r\n    if (nameList.length == 1) {\r\n      indexchat[\"userTypingContent\"] = nameList + \" \" + \"is typing...\";\r\n    } else if (nameList.length == 2) {\r\n      indexchat[\"userTypingContent\"] = nameList.join() + \" \" + \"are typing...\";\r\n    } else if (nameList.length > 2) {\r\n      indexchat[\"userTypingContent\"] =\r\n        nameList.filter((i, j) => j < 2).join() +\r\n        \" \" +\r\n        \"and other are typing...\";\r\n    }\r\n    // if (indexchat && indexchat.auto_created) {\r\n    //   indexchat['userTyping'] = response.content != '0' && response.from != this.currentUserData.ref_id;\r\n    //   indexchat['userTypingContent'] = (response.content == '1') ? sender + \" is typing...\" : \"\";\r\n    // } else if (indexchat && !indexchat.auto_created) {\r\n    //   this.setMultiUserTyping(response, typinguser, indexchat);\r\n    // }\r\n    this.changeDetector.detectChanges();\r\n  }\r\n  setMultiUserTyping(response, typinguser, indexchat) {\r\n    if (response.content == \"1\") {\r\n      indexchat[\"TypingUserList\"] = [...new Set(typinguser)];\r\n    } else if (response.content == \"0\") {\r\n      indexchat[\"TypingUserList\"] = indexchat[\"TypingUserList\"].filter(\r\n        (e) => e.ref_id != response.from\r\n      );\r\n    }\r\n    this.changeDetector.detectChanges();\r\n  }\r\n  scroll(): void {\r\n    setTimeout(() => {\r\n      this.elRef.nativeElement.querySelector(\".messagesBox\").scrollTop =\r\n        this.elRef.nativeElement.querySelector(\".messagesBox\").scrollHeight;\r\n    }, 500);\r\n  }\r\n  newChat() {\r\n    this.threadType = \"CHAT\";\r\n    this.changeDetector.detectChanges();\r\n  }\r\n  logout() {\r\n    this.pubsubService.Disconnect();\r\n    StorageService.clearLocalStorge();\r\n    this.router.navigate([\"login\"]);\r\n  }\r\n  sortThread() {\r\n    if (this.activeChat.id) {\r\n      this.AllGroups.sort((a, b) => {\r\n        return a.id == this.activeChat.id ? -1 : 1;\r\n      });\r\n    }\r\n  }\r\n  messageBy(chatthread, response) {\r\n    if (this.isShowName(chatthread, response)) {\r\n      const messageByObj = FindArrayObject(\r\n        chatthread.participants,\r\n        \"ref_id\",\r\n        response.from\r\n      );\r\n      response[\"messageBy\"] = (messageByObj && messageByObj.full_name) || \"\";\r\n    }\r\n    return response;\r\n  }\r\n  isShowName(chatthread, response) {\r\n    if (chatthread[\"chatHistory\"].length && response.from) {\r\n      const previourmessage =\r\n        chatthread[\"chatHistory\"][chatthread[\"chatHistory\"].length - 1];\r\n      return previourmessage.from != response.from;\r\n    }\r\n    return true;\r\n  }\r\n  pushMessage(thread, response) {\r\n    let newResponse = {};\r\n    newResponse = JSON.parse(JSON.stringify(response));\r\n    if (response.type == \"text\" || !response.content) {\r\n      thread[\"chatHistory\"].push(newResponse);\r\n    } else {\r\n      const foundIndex = thread.chatHistory.findIndex(\r\n        (x) => x.id == response.id\r\n      );\r\n      thread.chatHistory[foundIndex] = response;\r\n    }\r\n  }\r\n  getLastMessage(group): string {\r\n    const isactivethread = group.id == this.activeChat.id;\r\n    if (!isactivethread && group.unReadCount) {\r\n      return \"Misread messages\";\r\n    } else if (group.type != \"text\") {\r\n      return group.type;\r\n    }\r\n    return group.lastMessage;\r\n  }\r\n  openImage(imagesrc): void {\r\n    this.popupimagesrc = imagesrc;\r\n    this.changeDetector.detectChanges();\r\n  }\r\n  closeImage() {\r\n    this.popupimagesrc = null;\r\n    this.changeDetector.detectChanges();\r\n  }\r\n  closeModal() {\r\n    this.editGroupModel = false;\r\n    this.changeDetector.detectChanges();\r\n  }\r\n  isHideThread() {\r\n    return this.isMobile() ? this.screen != \"CHAT\" : false;\r\n  }\r\n  isHideChatScreen() {\r\n    return this.isMobile() ? this.screen != \"MSG\" : false;\r\n  }\r\n  backScreen() {\r\n    this.threadType = \"THREAD\";\r\n    this.screen = \"CHAT\";\r\n    this.changeDetector.detectChanges();\r\n  }\r\n  isMobile() {\r\n    return window.innerWidth < 768;\r\n  }\r\n}\r\n","<div class=\"row dashboardContainer\">\r\n  <!-- popup end -->\r\n  <div class=\"col-sm-4 leftSide\" [hidden]=\"isHideThread()\">\r\n    <div class=\"leftSideHeader\">\r\n      <img src=\"./assets/images/logo2.png\" class=\"dashboardLogo\" />\r\n    </div>\r\n    <div class=\"leftSideListContainer\">\r\n\r\n      <ng-container *ngIf=\"threadType === 'THREAD'\">\r\n        <div style=\"align-items: center; margin:0px\" class=\"leftSectionHeader\">\r\n          <h4 class=\"leftHeading\">CHATROOMS</h4>\r\n          <h4 class=\"createText\" (click)=\"newChat()\">Create +</h4>\r\n        </div>\r\n        <!-- empty chats section start-->\r\n        <div class=\"leftSectionEmptyContainer\" *ngIf=\"!AllGroups.length && !loading\">\r\n          <p class=\"noAvailableText\">No Available ChatRoom</p>\r\n          <p class=\"tapText\">Tap and hold on any message to star it, so you can easily find it later.</p>\r\n        </div>\r\n        <!-- empty chats section end-->\r\n\r\n        <div class=\"listingContainer fullHeight\">\r\n          <div class=\"chatListContainer noHorizontalPadding\">\r\n            <ng-container *ngFor=\"let group of AllGroups\">\r\n              <div class=\"chatsCardContainer hand\" (click)=\"setActiveChat(group)\">\r\n                <div class=\"chatsCardLeft\" >\r\n                  <div class=\"chatsNameWrap\">\r\n                    <p class=\"chatName text-capitalize\">{{group.chatTitle}}</p>\r\n                    <span class=\"unreadBadge\" *ngIf=\"group.unReadCount\"> {{group.unReadCount}}</span>\r\n                  </div>\r\n                  <p class=\"misreadMsg\" *ngIf=\"group.userTyping\">{{group?.userTypingContent}}</p>\r\n\r\n                  <p class=\"misreadMsg text-capitalize\" *ngIf=\"!group.userTyping\"\r\n                    [ngClass]=\"group.unReadCount ? 'misreadMsg':'readMsg'\">\r\n                    {{ getLastMessage(group) }}\r\n                  </p>\r\n\r\n                </div>\r\n                <div class=\"chatsCardRight mr-1\">\r\n                  <div class=\"dropdown mt-1\" style=\"align-self: flex-end\">\r\n                    <img src=\"./assets/images/more.png\" class=\"moreIcon\" />\r\n                    <div class=\"dropdown-content\">\r\n                      <a class=\"edit\" (click)=\"openModal(group)\">EDIT GROUP NAME</a>\r\n                      <a class=\"delete\" (click)=\"deleteGroup(group)\">DELETE</a>\r\n                    </div>\r\n                  </div>\r\n                  <p [ngClass]=\"group.Online ? 'cardOnlineStatus' :'cardOfflineStatus'\" *ngIf=\"group.auto_created\">\r\n                    {{group.Online\r\n                    ?\r\n                    'Online' :'Offline'}}\r\n                  </p>\r\n                  <p class=\"cardOnlineStatus\" *ngIf=\"!group.auto_created\">\r\n                    {{ group.onlineParticipants + '/' + group.TotalParticipants }} Online\r\n\r\n                  </p>\r\n\r\n                </div>\r\n              </div>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n\r\n      </ng-container>\r\n\r\n      <ng-container *ngIf=\"threadType === 'GROUP'\">\r\n        <add-group (setActiveChat)=\"setchat($event)\" (changeEvent)=\"changeSidebar($event)\"></add-group>\r\n      </ng-container>\r\n\r\n      <ng-container *ngIf=\"threadType === 'CHAT'\">\r\n        <new-chat (setActiveChat)=\"setchat($event)\" (changeEvent)=\"changeSidebar($event)\"></new-chat>\r\n      </ng-container>\r\n\r\n\r\n    </div>\r\n    <div class=\"leftSideFooter\">\r\n      <div class=\"logoutContainer\" (click)=\"logout()\">\r\n        <img src=\"./assets/images/log-out.png\" class=\"logoutLogo\" />\r\n        <span class=\"logoutText\">LOG OUT {{currentUserData.full_name}}</span>\r\n        <span class=\"ml-1\" [ngClass]=\"sdkconnected ? 'online' :'offline' \"></span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-sm-8 rightSide\" [hidden]=\"isHideChatScreen()\">\r\n    <div class=\"rightSideHeader alignBottom chatholder\">\r\n      <div style=\"display: flex;flex-direction: row;align-items: center\">\r\n        <img src=\"./assets/images/arrow-left.png\" class=\"arrowLeft hand\" (click)=\"backScreen()\" *ngIf=\"isMobile()\" />\r\n        <p class=\"roomNameText text-capitalize\" *ngIf=\"activeChat.chatTitle\">{{activeChat.chatTitle}}\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- right side starts -->\r\n    <div class=\"messagesBox\">\r\n      <ng-container *ngIf=\"activeChat.chatTitle\">\r\n        <ng-container *ngFor=\"let chat of activeChat['chatHistory']\">\r\n          <div [ngClass]=\"chat.from == currentUserName ? 'senderChatContainer' :'receiverChatContainer'\">\r\n\r\n            <h4 class=\"msgBy text-capitalize\" *ngIf=\"chat.from != currentUserName\">{{chat.messageBy}}</h4>\r\n            <!-- first messgae from same person -->\r\n            <div class=\"bubbleContainer\">\r\n\r\n              <div class=\"bubble\" *ngIf=\"chat.type ==='text'\">\r\n                <p class=\"msgText\">{{chat.content}}</p>\r\n              </div>\r\n\r\n              <div class=\"imgbubble\" *ngIf=\"chat.type ==='image'\">\r\n                <mat-spinner [diameter]=\"30\" *ngIf=\"!chat.content\"></mat-spinner>\r\n                <img [src]=\"chat.content | safeUrl\" class=\"w-100 msgImage img-thumbnail img-fluid\"\r\n                  (click)=\"openImage(chat.content)\" />\r\n              </div>\r\n\r\n              <div class=\"imgbubble file-attachment\" *ngIf=\"chat.type !=='text' && chat.type !=='image'\">\r\n                <mat-spinner [diameter]=\"30\" *ngIf=\"!chat.content\"></mat-spinner>\r\n                <ng-container *ngIf=\"chat.content\">\r\n                  <img [src]=\"checkFileType(chat.content)\" class=\"w-100 msgImage thumbnail img-fluid\" />\r\n                  <a [href]=\"chat.content | safeUrl\" download>Download</a>\r\n                </ng-container>\r\n              </div>\r\n\r\n              <span class=\"time\">\r\n                <ng-container *ngIf=\"chat.readCount && chat.from == currentUserName\">\r\n                   Read\r\n                  <br />\r\n                </ng-container>\r\n                <span> {{chat.date | date:\"shortTime\"}} </span>\r\n              </span>\r\n            </div>\r\n\r\n          </div>\r\n        </ng-container>\r\n      </ng-container>\r\n\r\n      <div class=\"chatRoomContainer\" *ngIf=\"!activeChat.chatTitle && !loading\">\r\n        <div style=\"height: 100%;\" class=\"listingContainer\">\r\n          <!-- empty list container start -->\r\n          <div class=\"emptyListContainer\">\r\n            <div class=\"emptyListTop\">\r\n              <div></div>\r\n              <img src=\"./assets/images/shipping.png\" class=\"shippingIcon\" />\r\n              <div class=\"noConvoTextWrapper\">\r\n                <p class=\"noConvoText\">No Conversation Yet</p>\r\n                <p style=\"max-width: 200px;\" class=\"noConvoSub\">\r\n                  Tap and hold on any message to star it, so you can easily find\r\n                  it later.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div class=\"emptyListBottom\">\r\n              <button type=\"submit\" class=\"btn newChatButton\" (click)=\"newChat()\">\r\n                NEW CHAT\r\n              </button>\r\n              <button type=\"submit\" class=\"btn refreshButton\" (click)=\"getAllGroups()\">\r\n                REFRESH\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <!-- empty list container end -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"sendInputContainer\" [hidden]=\"!activeChat.chatTitle\">\r\n      <div class=\"sendInputWrapper\">\r\n\r\n        <ng-container *ngIf=\"fileToSend\">\r\n          <div class=\"w-100\">\r\n            <img src=\"./assets/images/Document.png\" class=\"attachmentItemIcon ml-4\" />\r\n            <span class=\"ml-2\">{{fileToSend.name}}</span>\r\n            <span class=\"font-weight-bolder hand ml-2 text-danger\" (click)=\"removeAttachment()\">X</span>\r\n          </div>\r\n        </ng-container>\r\n\r\n        <input #messageInputElement type=\"text\" class=\"form-control\" placeholder=\"Type to reply..\"\r\n          (keyup)=\"typingmessage($event)\" [(ngModel)]=\"message\" *ngIf=\"!fileToSend\" />\r\n\r\n        <div class=\"sendInputButtonContainer dropup \" style=\"border-right: 1px solid #ebedf4\">\r\n          <img src=\"./assets/images/attachment.png\" data-toggle=\"dropdown\" class=\"sendIcon dropdown-toggle\" />\r\n          <div class=\"attachmentpopup dropdown-menu dropdown-menu-right selectOptionContainer\">\r\n            <div class=\"attachmentPopHeader mx-3\">\r\n              <p class=\"attachmentHeading\">ADD ATTACHMENT</p>\r\n              <p class=\"attachmentHeading\">X</p>\r\n            </div>\r\n            <div class=\"attachmentPopContent\" (click)=\"fileuploader.click()\">\r\n              <div class=\"attachmentTool\">\r\n                <div class=\"attachmentToolIcon\">\r\n                  <img src=\"./assets/images/Document.png\" class=\"attachmentItemIcon\" />\r\n                </div>\r\n                <input #fileuploader class=\"d-none\" type=\"file\" id=\"fileinput\"\r\n                  (change)=\"handleFileInput($event.target.files)\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"sendInputButtonContainer\" (click)=\"sendTextMessage()\">\r\n          <img src=\"./assets/images/send.png\" class=\"sendIcon\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- The Modal -->\r\n<div id=\"myModal\" class=\"modal\" *ngIf=\"popupimagesrc\">\r\n  <span class=\"close\" (click)=\"closeImage()\">&times;</span>\r\n  <img class=\"modal-content\" id=\"img01\" [src]=\"popupimagesrc | safeUrl\">\r\n</div>\r\n\r\n<div id=\"myModal\" class=\"modal\" *ngIf=\"editGroupModel\">\r\n  <div class=\"createChatPopup \">\r\n    <div class=\"chatPopupContent groupPopup\">\r\n      <div class=\"modalHeader\">\r\n        <p class=\"modalHeading\">Edit group </p>\r\n        <img src=\"./assets/images/cross.png\" class=\"modalCross hand\" (click)=\"closeModal()\" />\r\n      </div>\r\n      <div class=\" modalContent\">\r\n        <form [formGroup]=\"groupForm\" class=\"w-100\" (submit)=\"editGroup()\">\r\n          <p class=\"modalContentHeading\">Name your group </p>\r\n          <input type=\"text\" class=\"form-control\" placeholder=\"ex: Deeper team\" formControlName=\"group_title\" />\r\n          <form-errors [control]=\"groupForm.get('group_title')\"></form-errors>\r\n        </form>\r\n      </div>\r\n      <button type=\"submit\" class=\"btn doneButton mt-3\" (click)=\"editGroup()\" [disabled]=\"loading\">\r\n        DONE\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\r\nimport { fromEvent } from 'rxjs/internal/observable/fromEvent';\r\nimport { debounceTime } from 'rxjs/internal/operators/debounceTime';\r\nimport { distinctUntilChanged } from 'rxjs/internal/operators/distinctUntilChanged';\r\nimport { map } from 'rxjs/internal/operators/map';\r\nimport { mergeMap } from 'rxjs/internal/operators/mergeMap';\r\nimport { BaseService } from 'src/app/shared/services/base.service';\r\nimport { PubsubService } from 'src/app/shared/services/pubsub.service';\r\nimport { StorageService } from \"../../../shared/services/storage.service\";\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { startWith } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'new-chat',\r\n  templateUrl: './new-chat.component.html',\r\n  styleUrls: ['./new-chat.component.scss']\r\n})\r\nexport class NewChatComponent implements OnInit {\r\n  loading = true;\r\n  AllUsers = [];\r\n  CopyAllUsers = [];\r\n  @Output() changeEvent = new EventEmitter<object>(); //<string>\r\n  @ViewChild('searchInput') searchInput: ElementRef;\r\n  @Output() setActiveChat = new EventEmitter<string>();\r\n\r\n\r\n  constructor(\r\n    public pubsubService: PubsubService,\r\n    private svc: BaseService,\r\n    public dialog: MatDialog,\r\n    private toastr: ToastrService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.searchInput) {\r\n      fromEvent(this.searchInput.nativeElement, 'input')\r\n        .pipe(\r\n          map((event: Event) => (event.target as HTMLInputElement).value),\r\n          debounceTime(1000),\r\n          distinctUntilChanged(),\r\n          startWith(''),\r\n          mergeMap(value => {\r\n            this.loading = true;\r\n            if (!value) {\r\n              const data = {\r\n                sorting: \"ORDER BY full_name ASC\",\r\n                search_field: \"full_name\",\r\n                search_value: '',\r\n                condition: \"contains\",\r\n              }\r\n              return this.svc.post('AllUsers', data).pipe(map(res => {\r\n                if(!(res.users && res.users.length))\r\n                {\r\n                  res.users = [];\r\n                }\r\n                this.CopyAllUsers = [...res.users];\r\n                return res;\r\n              }))\r\n            }\r\n            const temparaay = [...this.CopyAllUsers];\r\n            const filteruser = temparaay.filter(user => {\r\n              const searchValue = value.toLowerCase();\r\n              if (user.full_name.toLowerCase().startsWith(searchValue)) { return -1; }\r\n            });\r\n            const returnData = {\r\n              users: filteruser\r\n            }\r\n            return of(returnData)\r\n          })\r\n        )\r\n        .subscribe(res => {\r\n          this.loading = false;\r\n          if (!res.users || !res.users.length) {\r\n            this.toastr.error(\"No contacts found\", \"Opps!\");\r\n            this.AllUsers = [];\r\n          } else {\r\n            this.AllUsers = res.users;\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n\r\n  backScreen() {\r\n    console.log(\"backscreen - new-chat\");\r\n   \r\n    \r\n    this.changeEvent.emit({event: \"THREAD\", group: {}});\r\n  }\r\n\r\n  //Called when \"Add Group Chat\" heading clicked\r\n  addGroupEvent() {\r\n    this.changeEvent.emit({event: \"GROUP\", group: {}});\r\n  }\r\n\r\n  startChat(user, val) {\r\n    if (this.loading) return;\r\n    this.loading = true;\r\n    const data = {\r\n      group_title: StorageService.getUserData().username + \"-\" + user.full_name,//TTuser.full_name,\r\n      participants: [user.user_id],\r\n      auto_created: 1\r\n    }\r\n    console.log(\"** new group creation: \", StorageService.getUserData());\r\n\r\n    this.svc.post('CreateGroup', data).subscribe(v => {\r\n      if (v && v.status == 200) {\r\n        const subscribedata = {\r\n          ...v.group,\r\n          key: v.group['channel_key'],\r\n          channel: v.group['channel_name'],\r\n        };\r\n        const data = [];\r\n        data.push(subscribedata)\r\n        this.pubsubService.subscribeToChat(data);\r\n\r\n\r\n        //ABM\r\n        const groupInfo = {\r\n          from: StorageService.getUserData().ref_id,\r\n          to: [user.ref_id],\r\n          action: \"new\",\r\n          groupModel: v\r\n          \r\n        };\r\n        console.log(\"** notification send on group creation :\\n\\n\", groupInfo, \"\\n\\n\\n\\n\", v, \"\\n\",val);\r\n        this.pubsubService.sendNotificationOnGroupUpdation(groupInfo);\r\n        //\r\n\r\n\r\n        this.changeEvent.emit({event: \"THREAD\", group: v.group});\r\n        v.group.clicked_item = val;\r\n        this.setActiveChat.emit(v.group);\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"newChatHeader\">\r\n  <div class=\"newChatLeft hand\">\r\n    <img\r\n      src=\"./assets/images/arrow-left.png\"\r\n      class=\"arrowLeft\"\r\n      (click)=\"backScreen()\"\r\n    />\r\n    <p class=\"newChatHeading\">New Chat</p>\r\n  </div>\r\n  <div class=\"newChatRight hand\">\r\n    <img class=\"goodMark\" src=\"./assets/images/checkmark.png\" />\r\n  </div>\r\n</div>\r\n<div class=\"newChatSearchBox\">\r\n  <div class=\"input-group\">\r\n    <div class=\"input-group-prepend\">\r\n      <img src=\"./assets/images/search.png\" class=\"seacrchIcon\" />\r\n    </div>\r\n    <input type=\"text\" class=\"form-control\" placeholder=\"Search\" #searchInput />\r\n  </div>\r\n</div>\r\n<div class=\"addGrpChat\">\r\n  <div class=\"addGrpChatTop hand\" (click)=\"addGroupEvent()\">\r\n    <img src=\"./assets/images/Group Chat.png\" class=\"addgrpIcon\" />\r\n    <p class=\"addGrpTitle\">Add Group Chat</p>\r\n  </div>\r\n  <div class=\"addGrpSep\"></div>\r\n  <!-- <div class=\"addGrpSub\"> -->\r\n  <p class=\"cntct\">Contacts</p>\r\n  <!-- </div> -->\r\n</div>\r\n<div class=\"contactListContainer max-height\">\r\n  <ng-container *ngFor=\"let user of AllUsers\">\r\n    <div class=\"contactListCard hand\" (click)=\"startChat(user, 'chat')\">\r\n      <div class=\"contactListCardLeft\">\r\n        <img src=\"./assets/images/user.png\" class=\"ListCardIcon\" />\r\n        <p class=\"ListCardName text-capitalize pb-1\">{{ user.full_name }}</p>\r\n      </div>\r\n      <div class=\"contactListCardRight justify-content-end pl-1\">\r\n        <img src=\"./assets/images/chat.png\" class=\"pl-1 ListCardButton hand\" />\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from \"@angular/router\";\r\nimport { StorageService } from 'src/app/shared/services/storage.service';\r\nimport FormsHandler from '../../shared/FormsHandler/FormsHandler';\r\nimport { AuthService } from '../../shared/auth/auth.service'; \r\nimport { project_id } from 'src/constants/const';\r\n\r\n@Component({\r\n  selector: 'ngx-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n\r\n  loginForm: FormGroup;\r\n  loading = false;\r\n  formError = '';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private _fb: FormBuilder,\r\n    public auth: AuthService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if (this.auth.islogin()) {\r\n      this.router.navigate(['chat']);\r\n    }\r\n    this.buildForm();\r\n    document.addEventListener(\"keyup\", event => {\r\n      if (event.code === 'Enter') {\r\n        this.onLogin();\r\n      }\r\n    });\r\n  }\r\n\r\n  buildForm() {\r\n    this.loginForm = this._fb.group({\r\n      'email': new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]),\r\n      'password': new FormControl(null, [Validators.required, Validators.minLength(8), Validators.maxLength(14)])\r\n    }, { updateOn: 'change' });\r\n  }\r\n\r\n  onLogin() {\r\n    FormsHandler.validateForm(this.loginForm);\r\n    if (this.loginForm.invalid) return;\r\n    const saveData = this.loginForm.value;\r\n    saveData.project_id = project_id; //'1RN1RP';\r\n    this.loading = true;\r\n    this.formError = null;\r\n    this.auth.login(saveData).subscribe(v => {\r\n      this.loading = false;\r\n      if (v && v.status == 200) {\r\n        StorageService.setUserData(v);\r\n        StorageService.setAuthToken(v.auth_token);\r\n        StorageService.setAuthUsername(v.ref_id);\r\n        this.router.navigate(['chat']);\r\n        this.loginForm.reset();\r\n      } else {\r\n        this.formError = v.message;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.loginForm.reset();\r\n  }\r\n\r\n}\r\n","<div class=\"containerWrapper\">\r\n  <img src=\"./assets/images/logo2.png\" class=\"logo\" />\r\n  <div class=\"innerWrapper\">\r\n    <h6 class=\"wrapperHeading\">Sign In</h6>\r\n    <p class=\"text-danger text-capitalize\">{{formError}}</p>\r\n    <div class=\"inputsContainer form-group\">\r\n      <form [formGroup]=\"loginForm\" class=\"w-100\" (submit)=\"onLogin()\">\r\n        <input type=\"email\" class=\"form-control\" placeholder=\"Email/Username\" formControlName=\"email\" />\r\n        <form-errors [control]=\"loginForm.get('username')\"></form-errors>\r\n        <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"password\" />\r\n        <form-errors [control]=\"loginForm.get('password')\"></form-errors>\r\n      </form>\r\n    </div>\r\n    <div class=\"buttonsContainer\">\r\n      <button type=\"submit\" class=\"signButton\" (click)=\"onLogin()\" [disabled]=\"loading\">SIGN IN</button>\r\n      <h5 class=\"bottomLink\"><a routerLink=\"/signup\">SIGN UP</a></h5>\r\n      <p class=\"text-muted\">Version:2</p>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from \"@angular/router\";\r\nimport FormsHandler from '../../shared/FormsHandler/FormsHandler';\r\nimport { AuthService } from '../../shared/auth/auth.service';\r\nimport { ValidationService } from 'src/app/shared/validators';\r\nimport { StorageService } from 'src/app/shared/services/storage.service';\r\nimport { project_id } from 'src/constants/const';\r\n\r\n@Component({\r\n  selector: 'sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.scss']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  loading = false;\r\n  formError;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private _fb: FormBuilder,\r\n    public auth: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    document.addEventListener(\"keyup\", event => {\r\n      if (event.code === 'Enter') {\r\n        this.onLogin();\r\n      }\r\n    });\r\n  }\r\n\r\n  buildForm() {\r\n    this.loginForm = this._fb.group({\r\n      'full_name': new FormControl('', [Validators.required, ValidationService.usernameValidator, Validators.minLength(4), Validators.maxLength(50)]),\r\n      'device_type': new FormControl('web', [Validators.required]),\r\n      'device_model': new FormControl('web', [Validators.required]),\r\n      'device_os_ver': new FormControl(navigator.platform, [Validators.required]),\r\n      'email': new FormControl(null, [ValidationService.emailValidator, Validators.required]),\r\n      'password': new FormControl(null, [Validators.required])\r\n    }, { updateOn: 'change' });\r\n    console.log('this.signupForm', this.loginForm);\r\n  }\r\n\r\n  onLogin() {\r\n    FormsHandler.validateForm(this.loginForm);\r\n    if (this.loginForm.invalid) return;\r\n    const saveData = this.loginForm.value;\r\n    saveData.project_id = project_id; //'1RN1RP';\r\n    this.loading = true;\r\n    this.formError = null;\r\n    this.auth.signup(saveData).subscribe(v => {\r\n      this.loading = false;\r\n      if (v && v.status == 200) {\r\n        StorageService.setUserData(v);\r\n        StorageService.setAuthToken(v.auth_token);\r\n        StorageService.setAuthUsername(v.ref_id);\r\n        this.router.navigate(['chat']);\r\n        this.loginForm.reset();\r\n      } else {\r\n        this.formError = v.message;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"containerWrapper\">\r\n  <img src=\"./assets/images/logo2.png\" class=\"logo\" />\r\n  <div class=\"innerWrapper\">\r\n    <h6 class=\"wrapperHeading\">Sign Up to your account</h6>\r\n    <p class=\"text-danger text-capitalize\">{{formError }}</p>\r\n    <div class=\"inputsContainer form-group\">\r\n      <form [formGroup]=\"loginForm\" class=\"w-100\" (submit)=\"onLogin()\">\r\n        <input type=\"text\" class=\"form-control\" placeholder=\"Your Username\" formControlName=\"full_name\" />\r\n        <form-errors [control]=\"loginForm.get('full_name')\"></form-errors>\r\n        <input type=\"email\" class=\"form-control\" placeholder=\"Your Email\" formControlName=\"email\" />\r\n        <form-errors [control]=\"loginForm.get('email')\"></form-errors>\r\n        <input type=\"password\" class=\"form-control\" placeholder=\"Your Password\" formControlName=\"password\" />\r\n        <form-errors [control]=\"loginForm.get('password')\"></form-errors>\r\n      </form>\r\n    </div>\r\n    <div class=\"buttonsContainer\">\r\n      <button type=\"submit\" class=\"signButton\" (click)=\"onLogin()\" [disabled]=\"loading\"> SIGN\r\n        UP</button>\r\n      <h5 class=\"bottomLink\"><a routerLink=\"/login\">SIGN IN</a></h5>\r\n    </div>\r\n  </div>\r\n</div>","import { FormGroup } from \"@angular/forms\";\r\n\r\nexport default class FormsHandler {\r\n\r\n    /**\r\n     * This method is use to validate Form\r\n     * @param formErrors string \r\n     * @param form  form instance | object\r\n     * @return errors as string\r\n     * @author  Mukhtiar Hussain <muhammad.mukhtiar@norgic.com>\r\n     **/\r\n    static validateForm(form) {\r\n        if (form.valid) {\r\n            return true;\r\n        } else {\r\n            if (form.controls) {\r\n                for (const field in form.controls) {\r\n                    const control = form.get(field);\r\n                    if (control.invalid) {\r\n                        control.markAsTouched({ onlySelf: true });\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n    * this method is use to validate Form Array\r\n    * @param formErrors string \r\n    * @param form  form instance | object\r\n    * @return errors as string\r\n    * @author  Mukhtiar Hussain <muhammad.mukhtiar@norgic.com>\r\n    **/\r\n    static validateFormArray(form) {\r\n        if (form.valid) {\r\n            return true;\r\n        } else {\r\n            if (form.controls) {\r\n                for (const group in form.controls) {\r\n                    const groupFiled = form.get(group) as FormGroup;\r\n                    for (const field in groupFiled.controls) {\r\n                        const control = groupFiled.get(field);\r\n                        if (control.invalid) {\r\n                            control.markAsTouched({ onlySelf: true });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    static deleteEmptyFileds(data) {\r\n        if (data) {\r\n            for (const key in data) {\r\n                if (data[key] == '' || data[key] == null) {\r\n                    delete data[key];\r\n                }\r\n                if (data[key] && typeof data[key] === 'string') {\r\n                    data[key] = data[key].trim();\r\n                }\r\n            }\r\n            return data;\r\n        }\r\n    }\r\n\r\n}","import { Component, Input } from '@angular/core';\r\nimport { AbstractControlDirective, AbstractControl } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'form-errors',\r\n    template: `\r\n    <p class='text-danger'>\r\n     {{hasErrors() ? listOfErrors() : ''}}\r\n    </p>`,\r\n})\r\nexport class GetErrorsComponent {\r\n\r\n    private static readonly errorMessages = {\r\n        'required': () => 'The specified information is required.',\r\n        'minlength': (params) => 'The min number of characters is ' + params.requiredLength,\r\n        'maxlength': (params) => 'The max allowed number of characters is ' + params.requiredLength,\r\n        'pattern': (params) => 'The required pattern is: ' + params.requiredPattern,\r\n        'years': (params) => params.message,\r\n        'countryCity': (params) => params.message,\r\n        'uniqueName': (params) => params.message,\r\n        'telephoneNumbers': (params) => params.message,\r\n        'telephoneNumber': (params) => params.message,\r\n        'invalidNumber': () => 'The specified information is invalid.',\r\n        'emptySpaces': () => 'The specified information is invalid.',\r\n        'email': () => 'Email is not valid',\r\n        'invalidPassword': () => 'Password must be a minimum of 8 characters and contain at least 1 uppercase character and 1 numeric value',\r\n        'invalidUsernameCharacters': () => 'invalid user name',\r\n        'invalidInputCharacters': () => 'The specified information is invalid.',\r\n        'invalidEmailAddress': () => 'Email is not valid',\r\n    };\r\n\r\n    @Input() private control: AbstractControlDirective | AbstractControl;\r\n\r\n    hasErrors(): boolean {\r\n        return this.control && this.control.errors && (this.control.dirty || this.control.touched);\r\n    }\r\n\r\n    listOfErrors() {\r\n        const errors = Object.keys(this.control.errors).map(field => this.getMessage(field, this.control.errors[field]));\r\n        return errors.length ? errors[0] : errors;\r\n    }\r\n\r\n    private getMessage(type: string, params: any) {\r\n        return GetErrorsComponent.errorMessages[type](params);\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatLegacyTableModule as MatTableModule } from '@angular/material/legacy-table';\r\nimport { PlatformModule } from '@angular/cdk/platform';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatLegacyPaginatorModule as MatPaginatorModule } from '@angular/material/legacy-paginator';\r\nimport { MatLegacySelectModule as MatSelectModule } from '@angular/material/legacy-select';\r\nimport { MatLegacyCheckboxModule as MatCheckboxModule } from '@angular/material/legacy-checkbox';\r\nimport { MatLegacyInputModule as MatInputModule } from '@angular/material/legacy-input';\r\nimport { MatLegacyRadioModule as MatRadioModule } from '@angular/material/legacy-radio';\r\nimport { MatLegacyButtonModule as MatButtonModule } from '@angular/material/legacy-button';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatLegacySlideToggleModule as MatSlideToggleModule } from '@angular/material/legacy-slide-toggle';\r\nimport { MatLegacyTooltipModule as MatTooltipModule } from '@angular/material/legacy-tooltip';\r\nimport { MatLegacyFormFieldModule as MatFormFieldModule } from '@angular/material/legacy-form-field';\r\nimport { MatLegacyTabsModule as MatTabsModule } from '@angular/material/legacy-tabs';\r\nimport { MatLegacyProgressBarModule as MatProgressBarModule } from '@angular/material/legacy-progress-bar';\r\nimport { MatLegacyMenuModule as MatMenuModule } from '@angular/material/legacy-menu';\r\nimport { MatLegacyDialogModule as MatDialogModule } from '@angular/material/legacy-dialog';\r\nconst globalRippleConfig: RippleGlobalOptions = { disabled: true };\r\nimport {\r\n  MAT_RIPPLE_GLOBAL_OPTIONS,\r\n  RippleGlobalOptions,\r\n  MatRippleModule,\r\n  MatNativeDateModule,\r\n} from '@angular/material/core';\r\nimport {MatLegacyProgressSpinnerModule as MatProgressSpinnerModule} from '@angular/material/legacy-progress-spinner';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatFormFieldModule,\r\n    MatRippleModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    CdkTableModule,\r\n    DragDropModule,\r\n    PortalModule,\r\n    CommonModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatInputModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatTabsModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatSlideToggleModule,\r\n    OverlayModule,\r\n    MatTooltipModule,\r\n    MatProgressBarModule,\r\n    MatMenuModule,\r\n    MatProgressSpinnerModule\r\n  ],\r\n  declarations: [],\r\n  entryComponents: [],\r\n  providers: [\r\n    { provide: MAT_RIPPLE_GLOBAL_OPTIONS, useValue: globalRippleConfig }\r\n  ],\r\n  exports: [\r\n    MatFormFieldModule,\r\n    PlatformModule,\r\n    MatRippleModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    CdkTableModule,\r\n    DragDropModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatInputModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatTabsModule,\r\n    MatTableModule,\r\n    MatSlideToggleModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatProgressBarModule,\r\n    LayoutModule,\r\n    MatProgressSpinnerModule\r\n  ]\r\n})\r\nexport class AppMaterialModule { }\r\n","import { CanActivate, Router } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private authService: AuthService,\r\n    protected router: Router\r\n  ) { }\r\n\r\n  canActivate() {\r\n    const isAuthenticated = this.authService.isAuthenticated();\r\n    if (!isAuthenticated) {\r\n      this.router.navigate(['login']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { StorageService } from '../services/storage.service';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  public userSubject$ = new Subject();\r\n  public currentUserReq$;\r\n  public currentUserId;\r\n  public userSubject = new ReplaySubject<any>(1);\r\n  private userRequest: Observable<any>;\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  login(data): Observable<any> {\r\n    return this.http.post('Login', data);\r\n  }\r\n\r\n  signup(data): Observable<any> {\r\n    return this.http.post('SignUp', data);\r\n  }\r\n\r\n  logout(): void {\r\n    StorageService.clearLocalStorge();\r\n  }\r\n\r\n  getToken(): string {\r\n    return StorageService.getAuthToken()\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return !!this.getToken();\r\n  }\r\n\r\n  islogin(): boolean {\r\n    return !!this.getToken();\r\n  }\r\n\r\n  resetUser() {\r\n    this.currentUserId = null;\r\n    this.userRequest = null;\r\n    this.userSubject = new ReplaySubject(1);\r\n  }\r\n\r\n  getUserId() {\r\n    const userdata = StorageService.getUserData();\r\n    return userdata._id;\r\n  }\r\n\r\n  isAuthUser(): Observable<any> {\r\n    return this.http.get<any>('users/current-user');\r\n  }\r\n}\r\n","\r\nexport function isEmptyObj(obj) {\r\n    for (const key in obj) {\r\n        if (obj.hasOwnProperty(key))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function isEmptyArray(array) {\r\n    if (!Array.isArray(array) || !array.length) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function isEmail(email) {\r\n    const emailLowercase = email.toLowerCase();\r\n    if (email == null || emailLowercase.match(/^[\\w-]+(\\.[\\w-]+)*@([a-z0-9-]+(\\.[a-z0-9-]+)*?\\.[a-zA-Z]{2,6}|(\\d{1,3}\\.){3}\\d{1,3})(:\\d{4})?$/)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function FindObjectByValue(inputArray: Array<any>, value: string) {\r\n    return inputArray.find(e => e == value);\r\n}\r\n\r\nexport function FindArrayObject(inputArray, key, value) {\r\n    return inputArray.find(e => e[key] == value);\r\n}\r\n\r\nexport function AutoUnsubscribe(constructor) {\r\n    const original = constructor.prototype.ngOnDestroy;\r\n    constructor.prototype.ngOnDestroy = function () {\r\n        for (const prop in this) {\r\n            if (prop) {\r\n                const property = this[prop];\r\n                if (property && (typeof property.unsubscribe === 'function')) {\r\n                    property.unsubscribe();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (original && typeof original === 'function') {\r\n            original.apply(this, arguments)\r\n        }\r\n    };\r\n\r\n}\r\nexport function isMobile() {\r\n    return window.innerWidth < 768\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable, of } from 'rxjs';\r\nimport { debounce, debounceTime, map } from 'rxjs/operators';\r\nimport { BaseService } from '../services/base.service';\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\nexport class filterPipe implements PipeTransform {\r\n\r\n  constructor(\r\n    private toastr: ToastrService,\r\n    private svc: BaseService\r\n  ) {\r\n  }\r\n\r\n  transform(items: any[], value: string): Observable<any> {\r\n    if (!items) return of([]);\r\n    if (!value) return of(items);\r\n    const data = {\r\n      \"search_field\": \"full_name\",\r\n      \"search_value\": value,\r\n      \"condition\": \"contains\",\r\n    }\r\n    return this.svc.post('AllUsers', data).pipe(\r\n      debounceTime(500),\r\n      map(res => {\r\n        if (res.status == 400) {\r\n          this.toastr.error(\"No contacts found\", \"Opps!\");\r\n          return [];\r\n        }\r\n        return res.users;\r\n      })\r\n    )\r\n  }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n@Pipe({\r\n    name: 'safeUrl'\r\n})\r\nexport class SafeUrlPipe implements PipeTransform {\r\n    constructor(private domSanitizer: DomSanitizer) { }\r\n    transform(url) {\r\n        return this.domSanitizer.bypassSecurityTrustResourceUrl(url);\r\n    }\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class BaseService {\r\n\r\n  constructor(\r\n    protected http: HttpClient\r\n  ) { }\r\n\r\n  public userData = new ReplaySubject<any>();\r\n  userData$ = this.userData.asObservable();\r\n\r\n  public isLoading = new Subject<any>();\r\n  isLoadingResponse = this.isLoading.asObservable();\r\n\r\n  /**\r\n  * This method is used to Call API using Http GET method.\r\n  * @param URL \r\n  * @return obserables responsce\r\n  * @author  Muhammad Mukhtiar  <muhammad.mukhtiar@norgic.com>\r\n  **/\r\n  get(URL): Observable<any> {\r\n    return this.http.get(URL);\r\n  }\r\n\r\n  /**\r\n  * This method is use to add or update data using API \r\n  * @param formData \r\n  * @return obserables responsce\r\n  * @author  Mukhtiar Hussain <muhammad.mukhtiar@norgic.com>\r\n  **/\r\n  save(URL, data = {}): Observable<any> {\r\n    return this.http.post(URL, data);\r\n  }\r\n\r\n  /**\r\n  * This method is used to Call API using Http Post method. \r\n  * @param URL \r\n  * @param URL \r\n  * @return obserables responsce\r\n  * @author  Mukhtiar Hussain <muhammad.mukhtiar@norgic.com>\r\n  **/\r\n  post(URL: string, payload: any = {}): Observable<any> {\r\n    return this.http.post(URL, payload);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpResponse, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { StorageService } from './storage.service';\r\nimport { environment } from '../../../environments/environment';\r\nimport { BaseService } from './base.service';\r\n\r\n@Injectable()\r\nexport class HttpService implements HttpInterceptor {\r\n    private baseUrl = environment.apiBaseUrl + environment.version;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private svc: BaseService\r\n    ) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        req = this.getModifiedReq(req);\r\n        return next.handle(req)\r\n            .pipe(\r\n                tap(event => {\r\n                    if (event instanceof HttpResponse) {\r\n                        if (event && event.body) {\r\n                            const serRes = event.body;\r\n                            this.svc.isLoading.next(false);\r\n                            if (serRes.code === 401) {\r\n                                StorageService.clearLocalStorge();\r\n                                this.showErrorMsg(serRes.message);\r\n                                this.router.navigate(['/login']);\r\n                            } else if (serRes.code === 407) {\r\n                                // StorageService.clearLocalStorge();\r\n                                this.showErrorMsg(serRes.message);\r\n                                // this.router.navigate(['/auth/login']);\r\n                            } else if (serRes.code === 200 || serRes.code === 201) {\r\n                            } else {\r\n                                this.showErrorMsg(serRes.message);\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }),\r\n                catchError(errorRes => {\r\n                    this.svc.isLoading.next(false);\r\n                    console.log('this should print your error!', errorRes.error);\r\n                    if (errorRes instanceof HttpErrorResponse) {\r\n                        if (errorRes.status === 500) {\r\n                            // this.toastrService.danger('Opps!', \"Something went wrong\");\r\n                        } else {\r\n                            this.showErrorMsg(errorRes.message);\r\n                        }\r\n                    }\r\n                    return throwError(errorRes);\r\n                })\r\n            );\r\n    }\r\n\r\n    getModifiedReq(req: HttpRequest<any>): HttpRequest<any> {\r\n        req = req.clone({ url: this.baseUrl + req.url });\r\n        const formdata = JSON.stringify(req.body);\r\n        const auth_token = StorageService.getAuthToken();\r\n        if (auth_token) req = req.clone({ headers: req.headers.set('Authorization', 'Bearer ' + auth_token) });\r\n        req = req.clone({ headers: req.headers.set('Content-Type', 'application/json') });\r\n        req = req.clone({ body: formdata });\r\n        return req;\r\n    }\r\n\r\n    showErrorMsg(errorResponse) {\r\n        if (typeof errorResponse == 'string') {\r\n            // this.toastrService.danger('Opps!', errorResponse);\r\n        }\r\n\r\n    }\r\n}","import { Injectable, OnDestroy, Output } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { StorageService } from './storage.service';\r\nimport { project_id } from 'src/constants/const';\r\ndeclare const MVDOTOK: any;\r\n\r\n@Injectable()\r\nexport class PubsubService implements OnDestroy {\r\n  @Output()\r\n  protected wsSubscription: Subscription;\r\n  public Client: any;\r\n\r\n  constructor() { }\r\n\r\n\r\n  public ngOnDestroy(): void {\r\n    this.wsSubscription.unsubscribe();\r\n  }\r\n\r\n\r\n  public initConfigure(): void {\r\n    const user = StorageService.getUserData();\r\n    this.Client = new MVDOTOK.Client({\r\n      projectID: project_id,//\"1RN1RP\",\r\n      host: `${user.messaging_server_map.complete_address}`,\r\n      stunServer: `${user.stun_server_map ? user.stun_server_map.complete_address : ''}`\r\n    });\r\n    this.Client.Register(user.ref_id.toString(), user.authorization_token.toString());\r\n  }\r\n\r\n\r\n  public sendMessage(message): void {\r\n    this.Client.SendMessage(message);\r\n  }\r\n\r\n  public subscribeToChat(groups): void {\r\n    groups.map(chanelObj => {\r\n      this.Client.Subscribe(chanelObj);\r\n    });\r\n  }\r\n\r\n\r\n  public unsubscribeToChat(groups): void {\r\n    this.Client.UnSubscribe(groups);\r\n  }\r\n\r\n\r\n  public Disconnect(): void {\r\n    this.Client.Disconnect();\r\n  }\r\n\r\n\r\n  readMessage(chatMessages) {\r\n    chatMessages.map(chat => {\r\n      this.Client.SendReceipt(chat);\r\n    });\r\n  }\r\n\r\n\r\n  readSingleMessage(chatMessages) {\r\n    this.Client.SendReceipt(chatMessages);\r\n  }\r\n\r\n  \r\n  sendNotificationOnGroupUpdation(obj) {\r\n    console.log(\"** sendNotificationOnGroupUpdation\")\r\n    this.Client.SendNotification(obj);\r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n@Injectable()\r\nexport class StorageService {\r\n\r\n  static readonly STORAGE_KEY_AUTH_TOKEN = 'auth_token';\r\n  static readonly STORAGE_KEY_USER_NAME = 'username';\r\n  static readonly STORAGE_KEY_USER_DATA = 'user_data';\r\n\r\n  static clearLocalStorge() {\r\n    localStorage.clear();\r\n    sessionStorage.clear();\r\n    return;\r\n  }\r\n\r\n  static getAuthToken() {\r\n    return localStorage.getItem(StorageService.STORAGE_KEY_AUTH_TOKEN);\r\n  }\r\n\r\n  static setAuthToken(token) {\r\n    localStorage.setItem(StorageService.STORAGE_KEY_AUTH_TOKEN, token);\r\n  }\r\n\r\n  static removeAuthToken() {\r\n    localStorage.removeItem(StorageService.STORAGE_KEY_AUTH_TOKEN);\r\n  }\r\n\r\n  static getAuthUsername() {\r\n    return localStorage.getItem(StorageService.STORAGE_KEY_USER_NAME);\r\n  }\r\n\r\n  static setAuthUsername(username) {\r\n    localStorage.setItem(StorageService.STORAGE_KEY_USER_NAME, username);\r\n  }\r\n\r\n  static removeAuthUsername() {\r\n    localStorage.removeItem(StorageService.STORAGE_KEY_USER_NAME);\r\n  }\r\n\r\n  static setUserData(userData) {\r\n    localStorage.setItem(StorageService.STORAGE_KEY_USER_DATA, JSON.stringify(userData));\r\n  }\r\n\r\n  static getUserData() {\r\n    return JSON.parse(localStorage.getItem(StorageService.STORAGE_KEY_USER_DATA));\r\n  }\r\n\r\n  static removeUserData() {\r\n    localStorage.removeItem(StorageService.STORAGE_KEY_USER_DATA);\r\n  }\r\n\r\n}\r\n","import { Injectable, Output } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n// declare var PUBSUB: any;\r\ndeclare const PUBSUB: any;\r\ndeclare const pubsub: any;\r\n\r\n@Injectable()\r\nexport class WebsocketService {\r\n  @Output() public ready: Subject<void> = new Subject();\r\n  public webSocket: WebSocket;\r\n  ws;\r\n  Client;\r\n\r\n  public initSocket(url: string): Observable<any> {\r\n    this.webSocket = new WebSocket('wss://' + 'vtest3.vdotok.com:8443' + '/call');\r\n    this.webSocket.onopen = () => this.ready.next();\r\n    return new Observable<any>(observer => {\r\n      this.webSocket.onmessage = (event: MessageEvent) => observer.next(event);\r\n      this.webSocket.onerror = (event: Event) => observer.error(event);\r\n      this.webSocket.onclose = (event: CloseEvent) => observer.complete();\r\n      // Callback invoked on unsubscribe\r\n      return () => this.webSocket.close();\r\n    });\r\n  }\r\n\r\n  public send(message: string): void {\r\n    // if (this.webSocket.readyState === WebSocket.OPEN) {\r\n    //   this.webSocket.send(message);\r\n    // }\r\n  }\r\n\r\n\r\n  public initPUBSUBSocket() {\r\n    return new PUBSUB.Client({\r\n      host: \"ws://emit1.togee.io\",\r\n      port: \"8080\",\r\n      credentials: {\r\n        username: \"john\",\r\n        password: \"\"\r\n      },\r\n      clientId: \"12345\",\r\n      reConnectivity: true,\r\n      secret: \"cWV91camkwd99XO9rvHmamvXxGdyeHK5\"\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { WebsocketService } from './services/websocket.service';\r\nimport { StorageService } from './services/storage.service';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { AuthGuard } from './auth/auth-guard.service';\r\nimport { BaseService } from './services/base.service';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { HttpService } from './services/http.service';\r\nimport { PubsubService } from './services/pubsub.service';\r\nimport { GetErrorsComponent } from './FormsHandler/get-errors.component';\r\nimport { MAT_LEGACY_DIALOG_DEFAULT_OPTIONS as MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material/legacy-dialog';\r\nimport { filterPipe } from './pipe/filter';\r\nimport { SafeUrlPipe } from './pipe/safeurl';\r\n\r\nconst components = [\r\n  GetErrorsComponent,\r\n  filterPipe,\r\n  SafeUrlPipe\r\n]\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule,\r\n    CommonModule,\r\n  ],\r\n  declarations: [...components],\r\n  exports: [...components],\r\n  providers: [\r\n    StorageService,\r\n    AuthService,\r\n    AuthGuard,\r\n    BaseService,\r\n    PubsubService,\r\n    WebsocketService,\r\n    { provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: { hasBackdrop: false } },\r\n    { provide: HTTP_INTERCEPTORS, useClass: HttpService, multi: true },\r\n  ],\r\n})\r\nexport class SharedModule { }\r\n","\r\nimport { AbstractControl } from '@angular/forms';\r\n\r\n\r\n\r\nexport class ValidationService {\r\n\r\n    static specialCharValidator(control) {\r\n        if (control.value == null || control.value.match(/^[a-zA-Z0-9._]*$/)) {\r\n            return null;\r\n        } else {\r\n\r\n            return { 'invalidCharacters': true };\r\n        }\r\n    }\r\n\r\n    static uppercaseCharacterRule(amount: number): any {\r\n        return function validate(control): { [key: string]: any } {\r\n            const value: string = control.value;\r\n            if (value.length === 0) {\r\n                return undefined;\r\n            }\r\n            const pattern = /[^A-Z]+/g;\r\n            const stripped = value.replace(pattern, '');\r\n            if (stripped.length < amount) {\r\n                return { 'uppercaseCharacterRule': true };\r\n            }\r\n            return undefined;\r\n        };\r\n    }\r\n\r\n    static creditCardValidator(control) {\r\n        // Visa, MasterCard, American Express, Diners Club, Discover, JCB\r\n        if (control.value.match(/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidCreditCard': true };\r\n        }\r\n    }\r\n\r\n    static emailValidator(control) {\r\n        // RFC 2822 compliant regex\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        const emailLowercase = control.value.toLowerCase();\r\n        if (control.value == null || emailLowercase.match(/^[\\w-]+(\\.[\\w-]+)*@([a-z0-9-]+(\\.[a-z0-9-]+)*?\\.[a-zA-Z]{2,6}|(\\d{1,3}\\.){3}\\d{1,3})(:\\d{4})?$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidEmailAddress': true };\r\n        }\r\n    }\r\n\r\n\r\n    static isEmptyInputValue(value: any): boolean {\r\n        // we don't check for string here so it also works with arrays\r\n        return value == null || value.length === 0;\r\n    }\r\n\r\n    static emptySpacesValidator(control) {\r\n        console.log('emptySpacesValidator', control, control.value);\r\n        if (control.value.match(/([^\\s])/)) {\r\n            return null;\r\n        } else {\r\n            return { 'emptySpaces': true };\r\n        }\r\n    }\r\n\r\n    static removeSpace(value: any): string {\r\n        return value.trim()\r\n    }\r\n\r\n    static englishWordsValidator(control) {\r\n        console.log('englishWordsValidator', control);\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        const tempstring = ValidationService.removeSpace(control.value);\r\n        if (tempstring.match(/^[a-zA-Z]+( [\\&a-zA-Z]+)*$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidCharacters': true };\r\n        }\r\n    }\r\n\r\n    static nameValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        if (control.value.match(/^(?:[a-zA-Z0-9\\s@,=%$#&_\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDCF\\uFDF0-\\uFDFF\\uFE70-\\uFEFF]|(?:\\uD802[\\uDE60-\\uDE9F]|\\uD83B[\\uDE00-\\uDEFF])){0,30}$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidNameCharacters': true };\r\n        }\r\n    }\r\n\r\n\r\n    static whiteSpaceValidator(control) {\r\n        // RFC 2822 compliant regex\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n\r\n        if (control.value.match(/^[-a-zA-Z\\u0600-\\u06FF0-9-()]+(\\s+[-a-zA-Z\\u0600-\\u06FF0-9-()]+)*$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidWhiteSpace': true };\r\n        }\r\n    }\r\n\r\n\r\n    static phoneValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        if (control.value.match(/^\\+?[0-9]+$/g)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidPhone': true };\r\n        }\r\n    }\r\n\r\n    static phoneUsernameEmailValidator(control) {\r\n        if (control.value == null) return;\r\n        let validEmail = true, validPhone = true, validUsername = true;\r\n        if (ValidationService.emailValidator(control) != null) {\r\n            validEmail = false;\r\n        }\r\n        if (!control.value.match(/^[a-zA-Z0-9]{5,17}$/)) {\r\n            validUsername = false;\r\n        }\r\n        if (!control.value.match(/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/)) {\r\n            validPhone = false;\r\n        }\r\n        console.log('phoneUsernameEmailValidator', ValidationService.emailValidator(control), validEmail, validUsername, validPhone)\r\n        if (validEmail || validUsername || validPhone) return null;\r\n        return { 'invalidUsernameEmail': true };\r\n    }\r\n\r\n    static usernameValidator(control) {\r\n        // RFC 2822 compliant regex\r\n        if (control.value == null || control.value.match(/^[a-zA-Z0-9]+$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidUsernameCharacters': true };\r\n        }\r\n    }\r\n\r\n    static passwordValidator(control) {\r\n        // {8,100}           - Assert password is between 8 and 100 characters\r\n        // (?=.*[0-9])       - Assert a string has at least one number\r\n        if (control.value && !ValidationService.uppercaseCharacterRule(1)(control) && control.value.match(/^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidPassword': true };\r\n        }\r\n    }\r\n\r\n    static MatchPassword(control: AbstractControl, crud) {\r\n        if (control.value == null) return null;\r\n        return control.root.get('password').value != control.value ? { passworMismatch: true } : null;\r\n    }\r\n\r\n\r\n    static pinCodeValidator(control) {\r\n        if (control.value && control.value.match(/^[0-9]{4}$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidPinCode': true };\r\n        }\r\n    }\r\n\r\n\r\n    static trimData(data) {\r\n        if (data) {\r\n            for (const key in data) {\r\n                if (data[key] && typeof data[key] == \"string\") {\r\n                    data[key] = data[key].trim();\r\n                }\r\n            }\r\n            return data;\r\n        }\r\n    }\r\n\r\n\r\n    static checkInteger(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        if (parseFloat(control.value) == 0 || (parseFloat(control.value) || parseInt(control.value)) && !isNaN(control.value)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidNumber': true };\r\n        }\r\n    }\r\n\r\n\r\n    static alphnumericValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        if (ValidationService.whiteSpaceValidator(control.value)) return;\r\n        // if (control.value.match(/^[^±!@£$%^&*_+§¡€#¢§¶•ªº«\\\\/<>?:;|=.,0-9]{1,500}$/)) {\r\n        if (control.value.match(/^[a-zA-Z0-9-,]+(\\s{0,1}[a-zA-Z-, ])*$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidInputCharacters': true };\r\n        }\r\n    }\r\n\r\n\r\n    static stringvalidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        if (control.value.match(/^[a-zA-Z0-9-,]+(\\s{0,1}[a-zA-Z-, ])*$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidInputCharacters': true };\r\n        }\r\n    }\r\n\r\n    static disallowspecial(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        if (control.value.match(/^[A-Za-z0-9 ]+$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidInputCharacters': true };\r\n        }\r\n    }\r\n\r\n\r\n\r\n    static alphValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        if (control.value.match(/^\\+?[A-Za-z]+$/g)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidString': true };\r\n        }\r\n    }\r\n\r\n    static numericValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        if (ValidationService.whiteSpaceValidator(control.value)) return;\r\n        const value = control.value.toString()\r\n        if (value.match(/^\\+?[0-9]+$/g)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidNumeric': true };\r\n        }\r\n    }\r\n\r\n    static floatNumberValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        const value = control.value.toString()\r\n        if (value.match(/^[+-]?\\d+(\\.\\d+)?$/g)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidNumeric': true };\r\n        }\r\n    }\r\n\r\n\r\n    static mackAddressValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        const value = control.value.toString()\r\n        if (value.match(/^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$/g)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidMackAddress': true };\r\n        }\r\n    }\r\n\r\n\r\n    static gatewayAddressValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        const value = control.value.toString()\r\n        if (value.match(/^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$/g)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidMackAddress': true };\r\n        }\r\n    }\r\n\r\n\r\n    static ipValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        const value = control.value.toString()\r\n        if (value.match(/^(\\d|[1-9]\\d|1\\d\\d|2([0-4]\\d|5[0-5]))\\.(\\d|[1-9]\\d|1\\d\\d|2([0-4]\\d|5[0-5]))\\.(\\d|[1-9]\\d|1\\d\\d|2([0-4]\\d|5[0-5]))\\.(\\d|[1-9]\\d|1\\d\\d|2([0-4]\\d|5[0-5]))$/g)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidIp': true };\r\n        }\r\n    }\r\n\r\n\r\n    static domainNameValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        const value = control.value.toString()\r\n        if (value.match(/^(?=^.{1,254}$)(^(?:(?!\\d+\\.)[a-zA-Z0-9_\\-]{1,63}\\.?)+(?:[a-zA-Z]{2,})$)/g)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidDomainName': true };\r\n        }\r\n    }\r\n\r\n}\r\n","export const project_id = \"1RN1RP\";","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiBaseUrl: \"https://q-tenant.vdotok.dev\",\r\n  version: \"/API/v0/\",\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["RouterModule","ChatComponent","LoginComponent","SignUpComponent","AuthGuard","routes","path","component","canActivate","redirectTo","AppRoutingModule","forRoot","imports","exports","AppComponent","constructor","selectors","decls","vars","template","i0","BrowserModule","FormsModule","ReactiveFormsModule","CommonModule","BrowserAnimationsModule","AppMaterialModule","HttpClientModule","SharedModule","AddGroupComponent","NewChatComponent","ToastrModule","AppModule","bootstrap","maxOpened","preventDuplicates","declarations","EventEmitter","FormControl","Validators","FormsHandler","StorageService","fromEvent","map","debounceTime","distinctUntilChanged","mergeMap","startWith","of","pubsubService","svc","toastr","_fb","changeDetector","getAuthUsername","getUserData","chatHistory","ngOnInit","form","group","group_title","required","maxLength","updateOn","document","addEventListener","event","code","loading","addGroup","ngAfterViewInit","searchInput","nativeElement","pipe","target","value","data","sorting","search_field","search_value","condition","post","res","users","length","CopyAllUsers","temparaay","filteruser","filter","user","searchValue","toLowerCase","full_name","startsWith","returnData","subscribe","error","AllUsers","setAlreadySelected","selectedUsers","userIndex","find","alluser","user_id","detectChanges","selectContact","contact","groupnameError","push","selected","Set","console","openDialog","content","useridArray","participants","auto_created","v","status","setActiveChat","emit","reset","changeEvent","addGroupModel","validateForm","invalid","participants_ref_ids","p","ref_id","groupInfo","from","to","action","groupModel","sendNotificationOnGroupUpdation","success","closemodel","forEach","element","backScreen","log","viewQuery","ctx","FindArrayObject","router","elRef","dialog","groupForm","group_id","initConfigure","Client","on","response","sdkconnected","AllGroups","getAllGroups","sendTextMessage","setOfflineStatus","setOnlineStatus","setOnlineStatusforSubscribe","JSON","parse","stringify","updateGroup","type","scroll","chatthread","findChatThread","isActiveThread","id","activeChat","messageBy","Date","pushMessage","readSingleMessage","setTimeout","sort","a","b","setUserTyping","receiptType","chName","topic","undefined","message","messageId","messageInputElement","sendMessage","size","isGroupMessage","getTime","toString","key","channel_key","channel_name","date","grp_info","new_group","i","findIndex","grp","chat","subscribedata","channel","subscribeToChat","r","setActiveChatt","index","splice","unsubscribeToChat","chatTitle","grp_ind","g","editGroup","playload","editGroupModel","deleteGroup","alert","addNewGroupToAllGroup","setToActive","split","indexchat","sortThread","get","groups","changeSidebar","$event","threadType","screen","readsendMessage","setchat","openModal","checkFileType","preview","includes","fileType","currentUserName","chatobj","unreadchatHistory","isRead","readMessage","handleFileInput","files","fileToSend","item","invalidSize","removeAttachment","getFileType","fileR","filetype","test","option","SendFile","typingmessage","onlineNumbers","who","n","username","currentUserData","typinguser","e","nameList","userObj","join","j","setMultiUserTyping","querySelector","scrollTop","scrollHeight","newChat","logout","Disconnect","clearLocalStorge","navigate","isShowName","messageByObj","previourmessage","thread","newResponse","foundIndex","x","getLastMessage","isactivethread","unReadCount","lastMessage","openImage","imagesrc","popupimagesrc","closeImage","closeModal","isHideThread","isMobile","isHideChatScreen","window","innerWidth","addGroupEvent","startChat","val","clicked_item","project_id","auth","islogin","buildForm","onLogin","loginForm","minLength","saveData","formError","login","setUserData","setAuthToken","auth_token","setAuthUsername","ngOnDestroy","consts","ValidationService","usernameValidator","navigator","platform","emailValidator","signup","valid","controls","field","control","markAsTouched","onlySelf","validateFormArray","groupFiled","deleteEmptyFileds","trim","GetErrorsComponent","hasErrors","errors","dirty","touched","listOfErrors","Object","keys","getMessage","params","errorMessages","requiredLength","requiredPattern","inputs","OverlayModule","PortalModule","CdkTableModule","DragDropModule","LayoutModule","MatLegacyTableModule","MatTableModule","PlatformModule","MatSortModule","MatLegacyPaginatorModule","MatPaginatorModule","MatLegacySelectModule","MatSelectModule","MatLegacyCheckboxModule","MatCheckboxModule","MatLegacyInputModule","MatInputModule","MatLegacyRadioModule","MatRadioModule","MatLegacyButtonModule","MatButtonModule","MatDatepickerModule","MatLegacySlideToggleModule","MatSlideToggleModule","MatLegacyTooltipModule","MatTooltipModule","MatLegacyFormFieldModule","MatFormFieldModule","MatLegacyTabsModule","MatTabsModule","MatLegacyProgressBarModule","MatProgressBarModule","MatLegacyMenuModule","MatMenuModule","MatLegacyDialogModule","MatDialogModule","MAT_RIPPLE_GLOBAL_OPTIONS","MatRippleModule","MatNativeDateModule","MatLegacyProgressSpinnerModule","MatProgressSpinnerModule","globalRippleConfig","disabled","provide","useValue","authService","isAuthenticated","factory","ReplaySubject","Subject","AuthService","http","getToken","getAuthToken","resetUser","currentUserId","userRequest","userSubject","getUserId","userdata","_id","isAuthUser","isEmptyObj","obj","hasOwnProperty","isEmptyArray","array","Array","isArray","isEmail","email","emailLowercase","match","FindObjectByValue","inputArray","AutoUnsubscribe","original","prototype","prop","property","unsubscribe","apply","arguments","filterPipe","transform","items","pure","SafeUrlPipe","domSanitizer","url","bypassSecurityTrustResourceUrl","BaseService","userData","asObservable","isLoading","URL","save","payload","HttpResponse","HttpErrorResponse","throwError","catchError","tap","environment","HttpService","apiBaseUrl","version","intercept","req","next","getModifiedReq","handle","body","serRes","showErrorMsg","errorRes","clone","baseUrl","formdata","headers","set","errorResponse","PubsubService","wsSubscription","MVDOTOK","projectID","host","messaging_server_map","complete_address","stunServer","stun_server_map","Register","authorization_token","SendMessage","chanelObj","Subscribe","UnSubscribe","chatMessages","SendReceipt","SendNotification","localStorage","clear","sessionStorage","getItem","STORAGE_KEY_AUTH_TOKEN","token","setItem","removeAuthToken","removeItem","STORAGE_KEY_USER_NAME","removeAuthUsername","STORAGE_KEY_USER_DATA","removeUserData","Observable","WebsocketService","initSocket","webSocket","WebSocket","onopen","ready","observer","onmessage","onerror","onclose","complete","close","send","initPUBSUBSocket","PUBSUB","port","credentials","password","clientId","reConnectivity","secret","HTTP_INTERCEPTORS","MAT_LEGACY_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_DEFAULT_OPTIONS","components","hasBackdrop","useClass","multi","specialCharValidator","uppercaseCharacterRule","amount","validate","pattern","stripped","replace","creditCardValidator","isEmptyInputValue","emptySpacesValidator","removeSpace","englishWordsValidator","tempstring","nameValidator","whiteSpaceValidator","phoneValidator","phoneUsernameEmailValidator","validEmail","validPhone","validUsername","passwordValidator","MatchPassword","crud","root","passworMismatch","pinCodeValidator","trimData","checkInteger","parseFloat","parseInt","isNaN","alphnumericValidator","stringvalidator","disallowspecial","alphValidator","numericValidator","floatNumberValidator","mackAddressValidator","gatewayAddressValidator","ipValidator","domainNameValidator","production","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}