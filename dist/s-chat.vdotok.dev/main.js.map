{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/chat/add-group/add-group.component.ts","./src/app/components/chat/add-group/add-group.component.html","./src/app/components/chat/chat.component.ts","./src/app/components/chat/chat.component.html","./src/app/components/chat/new-chat/new-chat.component.ts","./src/app/components/chat/new-chat/new-chat.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/sign-up/sign-up.component.ts","./src/app/components/sign-up/sign-up.component.html","./src/app/shared/FormsHandler/FormsHandler.ts","./src/app/shared/FormsHandler/get-errors.component.ts","./src/app/shared/app-material/app-material.module.ts","./src/app/shared/auth/auth-guard.service.ts","./src/app/shared/auth/auth.service.ts","./src/app/shared/helpers/helpersFunctions.ts","./src/app/shared/pipe/filter.ts","./src/app/shared/pipe/safeurl.ts","./src/app/shared/services/base.service.ts","./src/app/shared/services/http.service.ts","./src/app/shared/services/pubsub.service.ts","./src/app/shared/services/storage.service.ts","./src/app/shared/services/websocket.service.ts","./src/app/shared/shared.module.ts","./src/app/shared/validators.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChatComponent } from './components/chat/chat.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { AuthGuard } from './shared/auth/auth-guard.service';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'signup',\n    component: SignUpComponent\n  },\n  {\n    path: 'chat',\n    component: ChatComponent,\n    canActivate: [AuthGuard]\n  },\n  { path: '**', redirectTo: 'login' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<router-outlet></router-outlet>`\n})\nexport class AppComponent {\n  constructor() { }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ChatComponent } from './components/chat/chat.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppMaterialModule } from './shared/app-material/app-material.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SharedModule } from './shared/shared.module';\nimport { AddGroupComponent } from './components/chat/add-group/add-group.component';\nimport { NewChatComponent } from './components/chat/new-chat/new-chat.component';\nimport { ToastrModule } from 'ngx-toastr';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatComponent,\n    AddGroupComponent,\n    LoginComponent,\n    NewChatComponent,\n    SignUpComponent\n  ],\n  imports: [\n    SharedModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    BrowserAnimationsModule,\n    AppMaterialModule,\n    HttpClientModule,\n    ToastrModule.forRoot({\n      maxOpened: 1,\n      preventDuplicates: true\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ChangeDetectorRef, Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport FormsHandler from 'src/app/shared/FormsHandler/FormsHandler';\nimport { BaseService } from 'src/app/shared/services/base.service';\nimport { PubsubService } from 'src/app/shared/services/pubsub.service';\nimport { StorageService } from 'src/app/shared/services/storage.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { fromEvent } from 'rxjs/internal/observable/fromEvent';\nimport { map } from 'rxjs/internal/operators/map';\nimport { debounceTime } from 'rxjs/internal/operators/debounceTime';\nimport { distinctUntilChanged } from 'rxjs/internal/operators/distinctUntilChanged';\nimport { mergeMap } from 'rxjs/internal/operators/mergeMap';\nimport { startWith } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'add-group',\n  templateUrl: './add-group.component.html',\n  styleUrls: ['./add-group.component.scss']\n})\nexport class AddGroupComponent implements OnInit {\n  currentUserName = StorageService.getAuthUsername();\n  currentUserData = StorageService.getUserData();\n  @Output() changeEvent = new EventEmitter<string>();\n  form: FormGroup;\n  loading = true;\n  addGroupModel = false;\n  AllUsers = [];\n  activeChat: any = {\n    chatHistory: []\n  };\n  message = '';\n  group_title = '';\n  groupnameError = '';\n  dialogRef;\n  selectedUsers = [];\n  CopyAllUsers = [];\n  @ViewChild('searchInput') searchInput: ElementRef;\n  @Output() setActiveChat = new EventEmitter<string>();\n\n  constructor(\n    public pubsubService: PubsubService,\n    private svc: BaseService,\n    private toastr: ToastrService,\n    private _fb: FormBuilder,\n    private changeDetector: ChangeDetectorRef,\n  ) {\n  }\n\n  ngOnInit() {\n    this.form = this._fb.group({\n      'group_title': new FormControl('', [Validators.required, Validators.maxLength(100)]),\n    }, { updateOn: 'change' });\n\n    document.addEventListener(\"keyup\", event => {\n      if (event.code === 'Enter' && !this.loading) {\n        this.addGroup();\n      }\n    });\n  }\n\n  ngAfterViewInit(): void {\n    if (this.searchInput) {\n      fromEvent(this.searchInput.nativeElement, 'input')\n        .pipe(\n          map((event: Event) => (event.target as HTMLInputElement).value),\n          debounceTime(1000),\n          distinctUntilChanged(),\n          startWith(''),\n          mergeMap(value => {\n            this.loading = true;\n            if (!value) {\n              const data = {\n                sorting: \"ORDER BY full_name ASC\",\n                search_field: \"full_name\",\n                search_value: '',\n                condition: \"contains\",\n              }\n              return this.svc.post('AllUsers', data).pipe(map(res => {\n                if(!(res.users && res.users.length))\n                {\n                  res.users = [];\n                }\n                this.CopyAllUsers = [...res.users];\n                return res;\n              }))\n            }\n            const temparaay = [...this.CopyAllUsers];\n            const filteruser = temparaay.filter(user => {\n              const searchValue = value.toLowerCase();\n              if (user.full_name.toLowerCase().startsWith(searchValue)) { return -1; }\n            });\n            const returnData = {\n              users: filteruser\n            }\n            return of(returnData)\n          }),\n        )\n        .subscribe(res => {\n          this.loading = false;\n          if (!res.users || !res.users.length) {\n            this.toastr.error(\"Opps!\", \"No contacts found\");\n            this.AllUsers = [];\n          } else {\n            this.AllUsers = res.users;\n          }\n          this.setAlreadySelected();\n        })\n    }\n  }\n\n  setAlreadySelected() {\n    this.selectedUsers.map(user => {\n      const userIndex = this.AllUsers.find(alluser => alluser.user_id == user.user_id);\n      if (userIndex) userIndex['selected'] = true;\n    });\n    this.changeDetector.detectChanges();\n  }\n\n  selectContact(contact) {\n    this.groupnameError = '';\n    contact['selected'] = !contact['selected'];\n    this.changeDetector.detectChanges();\n    this.selectedUsers.push(contact);\n    this.selectedUsers = this.selectedUsers.filter(user => user.selected);\n    this.selectedUsers = [...new Set(this.selectedUsers)];\n    if (!this.selectedUsers.length) {\n      this.groupnameError = 'Please Select Contacts';\n    } else if (this.selectedUsers.length > 4) {\n      this.groupnameError = 'Participants cannot be more than 4';\n    }\n    console.error('groupnameError', this.groupnameError);\n    this.changeDetector.detectChanges();\n  }\n\n  openDialog(content): void {\n    this.groupnameError = '';\n    this.selectedUsers = this.selectedUsers.filter(user => user.selected);\n    this.changeDetector.detectChanges();\n    if (!this.selectedUsers.length) {\n      this.groupnameError = 'Please Select Contacts';\n      return;\n    } else if (this.selectedUsers.length > 4) {\n      this.groupnameError = 'Participants cannot be more than 4';\n      return;\n    }\n    if (this.selectedUsers.length == 1) {\n      const useridArray = this.selectedUsers.map(user => user.user_id);\n      const data = {\n        participants: useridArray,\n        auto_created: useridArray.length > 1 ? 0 : 1,\n        group_title: \"One to One chat\",\n      }\n      this.svc.post('CreateGroup', data).subscribe(v => {\n        this.changeDetector.detectChanges();\n        if (v && v.status == 200) {\n          this.groupnameError = '';\n          this.setActiveChat.emit(v.group);\n          this.form.reset();\n        }\n        this.selectedUsers = [];\n        this.changeDetector.detectChanges();\n        this.loading = false;\n        this.changeEvent.emit(\"THREAD\");\n      });\n\n    } else {\n      this.addGroupModel = true;\n    }\n  }\n\n  addGroup() {\n    FormsHandler.validateForm(this.form);\n    const useridArray = this.selectedUsers.map(user => user.user_id);\n    if (this.form.invalid || !useridArray.length || this.loading) return;\n    if (useridArray.length > 5) {\n      this.toastr.error('OPPS!', 'participants Can not be more than 5!');\n      return;\n    }\n    this.loading = true;\n    this.changeDetector.detectChanges();\n    let data = {\n      participants: useridArray,\n      auto_created: useridArray.length > 1 ? 0 : 1\n    }\n    data = {\n      ...data,\n      ...this.form.value\n    };\n    this.svc.post('CreateGroup', data).subscribe(v => {\n      this.changeDetector.detectChanges();\n      if (v && v.status == 200) {\n        this.groupnameError = '';\n        this.setActiveChat.emit(v.group);\n        this.toastr.success('Success!', 'The group has been created!');\n        this.closemodel();\n        this.form.reset();\n      }\n      this.selectedUsers = [];\n      this.changeDetector.detectChanges();\n      this.loading = false;\n    });\n  }\n\n  closemodel() {\n    this.selectedUsers = [];\n    this.addGroupModel = false;\n    this.AllUsers.forEach(element => element['selected'] = false);\n    this.changeEvent.emit(\"THREAD\");\n    this.changeDetector.detectChanges();\n  }\n\n  backScreen() {\n    this.changeEvent.emit(\"CHAT\");\n  }\n\n}\n","<div class=\"newChatContainer\">\n  <div class=\"newChatHeader\">\n    <div class=\"newChatLeft hand\">\n      <img src=\"./assets/images/arrow-left.png\" class=\"arrowLeft hand\" (click)=\"backScreen()\" />\n      <p class=\"newChatHeading\">Create Group Chat</p>\n    </div>\n    <div class=\"newChatRight hand\" (click)=\"openDialog(content)\">\n      <img class=\"goodMark\" src=\"./assets/images/checkmark.png\" />\n    </div>\n  </div>\n  <div class=\"newChatSearchBox\">\n    <div class=\"input-group\">\n      <div class=\"input-group-prepend\">\n        <img src=\"./assets/images/search.png\" class=\"seacrchIcon\" />\n      </div>\n      <input type=\"text\" class=\"form-control\" placeholder=\"Search\" #searchInput />\n    </div>\n  </div>\n  <div class=\"newGrpChat\">\n    <p [ngClass]=\"groupnameError ? 'text-danger' :'cntct'\">\n      {{groupnameError ? groupnameError :'Select Contacts'}}\n    </p>\n  </div>\n  <div class=\"newListContainer max-height\">\n    <ng-container *ngFor=\"let user of AllUsers\">\n      <div class=\"contactListCard hand\" (click)=\"selectContact(user)\">\n        <div class=\"contactListCardLeft\">\n          <img src=\"./assets/images/user.png\" class=\"ListCardIcon\" />\n          <p class=\"ListCardName text-capitalize pb-1\">{{user.full_name}}</p>\n        </div>\n        <div class=\"selectuser contactListCardRight\" *ngIf=\"user['selected']\">\n          <img src=\"./assets/images/checkmark-circle.png\" class=\"ListCardButton\" />\n        </div>\n      </div>\n    </ng-container>\n  </div>\n</div>\n\n<div id=\"myModal\" class=\"modal\" *ngIf=\"addGroupModel\">\n  <div class=\"createChatPopup\">\n    <div class=\"chatPopupContent groupPopup\">\n      <div class=\"modalHeader\">\n        <p class=\"modalHeading\">Create a group chat</p>\n        <img src=\"./assets/images/cross.png\" class=\"modalCross hand\" (click)=\"closemodel()\" />\n      </div>\n      <div class=\"modalContent\">\n        <form [formGroup]=\"form\" class=\"w-100\" (submit)=\"addGroup()\">\n          <p class=\"modalContentHeading\">Name your group chat</p>\n          <input type=\"text\" class=\"form-control\" placeholder=\"ex: Deeper team\" formControlName=\"group_title\" />\n          <form-errors [control]=\"form.get('group_title')\"></form-errors>\n        </form>\n      </div>\n      <button type=\"submit\" class=\"btn doneButton mt-3\" (click)=\"addGroup()\" [disabled]=\"loading\">\n        DONE\n      </button>\n    </div>\n  </div>\n</div>\n\n<ng-template #content let-modal>\n  <div class=\"createChatPopup\">\n    <div class=\"chatPopupContent\">\n      <div class=\"modalHeader\">\n        <p class=\"modalHeading\">Create a group chat</p>\n        <img src=\"./assets/images/cross.png\" class=\"modalCross hand\" (click)=\"modal.dismiss('Cross click')\" />\n      </div>\n      <div class=\"modalContent\">\n        <form [formGroup]=\"form\" class=\"w-100\" (submit)=\"addGroup()\">\n          <p class=\"modalContentHeading\">Name your group chat</p>\n          <input type=\"text\" class=\"form-control\" placeholder=\"ex: Deeper team\" formControlName=\"group_title\" />\n          <form-errors [control]=\"form.get('group_title')\"></form-errors>\n        </form>\n      </div>\n      <button type=\"submit\" class=\"btn doneButton mt-3\" (click)=\"addGroup()\" [disabled]=\"loading\">\n        DONE\n      </button>\n    </div>\n  </div>\n</ng-template>","import { ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { fromEvent } from 'rxjs/internal/observable/fromEvent';\nimport { debounceTime } from 'rxjs/internal/operators/debounceTime';\nimport { distinctUntilChanged } from 'rxjs/internal/operators/distinctUntilChanged';\nimport { map } from 'rxjs/internal/operators/map';\nimport { FindArrayObject } from 'src/app/shared/helpers/helpersFunctions';\nimport { BaseService } from 'src/app/shared/services/base.service';\nimport { PubsubService } from 'src/app/shared/services/pubsub.service';\nimport { StorageService } from 'src/app/shared/services/storage.service';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport FormsHandler from 'src/app/shared/FormsHandler/FormsHandler';\nimport { MessageModel, onlineOfflineModel, receiptModel, typingModel } from 'src/app/shared/models/chat';\n\n@Component({\n  selector: 'chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss']\n})\nexport class ChatComponent implements OnInit {\n  editGroupModel = false;\n  groupForm: FormGroup;\n  loading = true;\n  AllGroups = [];\n  activeChat: any = {\n    chatHistory: []\n  };\n  message = '';\n  currentUserName = StorageService.getAuthUsername();\n  currentUserData = StorageService.getUserData();\n  @ViewChild('messageInputElement') messageInputElement: ElementRef;\n  threadType = 'THREAD';\n  fileToSend: File = null;\n  isActiveThread = false;\n  popupimagesrc = '';\n  screen = 'CHAT';\n  sdkconnected = false;\n  setToActive = null;\n  constructor(\n    public pubsubService: PubsubService,\n    private svc: BaseService,\n    private router: Router,\n    private elRef: ElementRef,\n    public dialog: MatDialog,\n    private toastr: ToastrService,\n    private changeDetector: ChangeDetectorRef,\n    private _fb: FormBuilder\n  ) {\n    this.groupForm = this._fb.group({\n      'group_id': new FormControl('', [Validators.required]),\n      'group_title': new FormControl('', [Validators.required, Validators.maxLength(100)]),\n    }, { updateOn: 'change' });\n    this.pubsubService.initConfigure();\n  }\n\n  ngOnInit() {\n    this.pubsubService.Client.on(\"connect\", response => {\n      console.error(\"connect\", response);\n      this.sdkconnected = true;\n      if (!this.AllGroups.length) {\n        this.getAllGroups();\n      }\n    });\n\n    this.pubsubService.Client.on(\"disconnect\", (response) => {\n      console.log(\"disconnect\", response);\n      this.sdkconnected = false;\n    });\n\n    document.addEventListener(\"keyup\", event => {\n      if (event.code === 'Enter') {\n        this.sendTextMessage();\n      }\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.pubsubService.Client.on(\"authentication_error\", (res: any) => {\n      console.log(\"authentication_error\", res);\n    });\n\n\n    this.pubsubService.Client.on(\"offline\", response => {\n      console.log(\"offline\", response);\n      this.setOfflineStatus(response);\n    });\n\n    this.pubsubService.Client.on(\"online\", (response: onlineOfflineModel) => {\n      console.log(\"online\", response);\n      this.setOnlineStatus(response);\n    });\n\n    this.pubsubService.Client.on(\"message\", response => {\n      response = JSON.parse(JSON.stringify(response));\n      //console.trace(\"new message\", response);\n      if (response.type == 'text' || response.type == 'file' || response.type == 'image' || response.type == 'audio' || response.type == 'video') {\n        this.scroll();\n        const chatthread = this.findChatThread(response.to);\n        const isActiveThread = chatthread.id == this.activeChat.id;\n        chatthread['unReadCount'] = isActiveThread ? 0 : (chatthread['unReadCount'] || 0) + 1;\n        response = this.messageBy(chatthread, response);\n        response['isRead'] = isActiveThread;\n        response['auto_created'] = chatthread['auto_created'];\n        chatthread['lastMessage'] = response.content;\n        chatthread['time'] = new Date(response.id);\n        chatthread['type'] = response.type;\n        this.pushMessage(chatthread, response);\n        this.readSingleMessage(response, isActiveThread);\n        setTimeout(() => {\n          this.AllGroups.sort((a, b) => {\n            return a.id == chatthread.id ? -1 : 1;\n          });\n        }, 500);\n        this.changeDetector.detectChanges();\n      } else if (response.type == 'typing') {\n        this.setUserTyping(response);\n      } else if (response.receiptType == 3) {\n        let chName = response.topic || response.to;\n        if (response.to != undefined)\n          chName = response.to;\n        const chatthread = this.findChatThread(chName);\n        const message = FindArrayObject(chatthread.chatHistory, 'id', response.messageId);\n        if (message) {\n          message['readCount'] = (message['readCount'] || 0) + 1\n        }\n        this.changeDetector.detectChanges();\n      }\n    });\n\n    this.pubsubService.Client.on(\"subscribed\", response => {\n      console.log(\"subscribed\", response);\n      this.setOnlineStatusforSubscribe(response);\n    });\n\n    if (this.messageInputElement) {\n      fromEvent(this.messageInputElement.nativeElement, 'input')\n        .pipe(\n          map((event: Event) => (event.target as HTMLInputElement).value),\n          debounceTime(3000),\n          distinctUntilChanged()\n        ).subscribe(data => {\n          const sendMessage: MessageModel = {\n            status: 0,\n            size: 0,\n            type: \"typing\",\n            isGroupMessage: false,\n            from: StorageService.getAuthUsername(),\n            content: '0',\n            id: new Date().getTime().toString(),\n            key: this.activeChat.channel_key,\n            to: this.activeChat.channel_name,\n            date: new Date().getTime(),\n          }\n          this.pubsubService.sendMessage(sendMessage);\n        });\n    }\n  }\n\n  deleteGroup(group) {\n    this.loading = true;\n    const playload = {\n      group_id: group.id\n    }\n    this.svc.post('DeleteGroup', playload).subscribe(v => {\n      this.changeDetector.detectChanges();\n      if (v && v.status == 200) {\n        this.loading = false;\n        this.getAllGroups();\n        this.toastr.success('The group has been deleted!', 'Success!');\n      } else {\n        console.error(v.message);\n        alert(v.message);\n        this.changeDetector.detectChanges();\n      }\n    });\n  }\n\n  openModal(group) {\n    if (group.auto_created) {\n      alert('Can not change One to one group title');\n      return;\n    }\n    group['group_id'] = group.id\n    this.groupForm.reset(group);\n    this.editGroupModel = true;\n    this.changeDetector.detectChanges();\n  }\n\n  editGroup() {\n    FormsHandler.validateForm(this.groupForm);\n    console.error(\"this.groupForm.\", this.groupForm.invalid);\n    if (this.groupForm.invalid || this.loading) return;\n    const playload = this.groupForm.value;\n    this.loading = true;\n    this.svc.post('RenameGroup', playload).subscribe(v => {\n      if (v && v.status == 200) {\n        this.getAllGroups();\n        this.editGroupModel = false;\n        this.loading = false;\n        this.toastr.success('The group has been updated!', 'Success!');\n      }\n    });\n  }\n\n  getAllGroups() {\n    this.loading = true;\n    this.svc.get('AllGroups').subscribe(v => {\n      this.loading = false;\n      if (v && v.status == 200) {\n        this.AllGroups = v.groups.map(chat => {\n          if (chat['participants'].length) {\n            chat['participants'] = chat['participants'].map(r => {\n              r['username'] = r['username'] || r['full_name'];\n              return r;\n            });\n          }\n          chat['chatTitle'] = chat.auto_created ? chat['participants'][0]['full_name'] : chat.group_title;\n          chat['Online'] = false;\n          chat['key'] = chat.channel_key;\n          chat['channel'] = chat.channel_name;\n          chat['chatHistory'] = [];\n          chat['TotalParticipants'] = chat['participants'].length;\n          chat['onlineParticipants'] = 1;\n          chat['isSeen'] = true;\n          return chat;\n        });\n        console.log(\"this.activeChat.chatTitle\", this.activeChat);\n        if (!this.activeChat.chatTitle) {\n          this.activeChat = this.AllGroups.length ? this.AllGroups['0'] : {};\n        }\n        if (this.setToActive) {\n          const indexchat = this.AllGroups.find(group => group.id == this.setToActive)\n          this.activeChat = indexchat ? indexchat : this.AllGroups['0'];\n          this.setToActive = null;\n        }\n        this.isActiveThread = true;\n        this.pubsubService.subscribeToChat(this.AllGroups);\n      }\n      setTimeout(() => {\n        this.sortThread();\n      }, 500);\n      this.changeDetector.detectChanges();\n    });\n  }\n  checkFileType(content: any) {\n    let preview = content.includes('text/plain') ? ('./assets/images/txt.png') : content.includes('/pdf') ? ('./assets/images/pdf.png') : content.includes('/json') ? ('./assets/images/json.png') : 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Icon-doc.svg/810px-Icon-doc.svg.png';\n    if (content.includes('video/'))\n      preview = './assets/images/video.png';\n    if (content.includes('audio/'))\n      preview = './assets/images/audio.png';\n    return preview;\n  }\n  fileType(content: any) {\n    return content.split(\";\")[0].split(\":\")[1]\n  }\n  findChatThread(channel) {\n    return FindArrayObject(this.AllGroups, 'channel_name', channel);\n  }\n\n  setActiveChat(group) {\n    this.isActiveThread = group.id == this.activeChat.id;\n    if (!this.isActiveThread) this.message = '';\n    this.activeChat = group;\n    group['unReadCount'] = 0;\n    this.screen = 'MSG';\n    this.scroll();\n    group.chatHistory = group.chatHistory || [];\n    this.readsendMessage(group.chatHistory);\n    this.changeDetector.detectChanges();\n  }\n\n  setchat(chat) {\n    this.setToActive = chat.id;\n  }\n\n  readSingleMessage(response, isActiveThread) {\n    if (response.from == this.currentUserName || !isActiveThread) return;\n    const chatobj: receiptModel = {\n      messageId: response.id,\n      receiptType: 3,\n      from: StorageService.getAuthUsername(),\n      key: response.key,\n      to: response.to,\n      date: new Date().getTime()\n    };\n    this.pubsubService.readSingleMessage(chatobj);\n  }\n\n  readsendMessage(chatHistory) {\n    const unreadchatHistory = chatHistory.filter(chat => !chat.isRead).map(chat => {\n      const chatobj: receiptModel = {\n        messageId: chat.id,\n        receiptType: 3,\n        from: StorageService.getAuthUsername(),\n        key: chat.key,\n        to: chat.to,\n        date: new Date().getTime()\n      };\n      return chatobj;\n    });\n    if (unreadchatHistory.length) this.pubsubService.readMessage(unreadchatHistory);\n    chatHistory = chatHistory.map(chat => {\n      chat.isRead = true;\n      return chat;\n    });\n  }\n\n  handleFileInput(files: FileList) {\n    this.fileToSend = files.item(0);\n  }\n\n  invalidSize() {\n    return ((this.fileToSend.size / 1024) > 6144);\n  }\n\n  removeAttachment() {\n    this.fileToSend = null;\n  }\n\n  getFileType(fileR) {\n    let type = \"file\";\n    const filetype = fileR.type;\n    if (filetype.includes('image')) type = \"image\";\n    else if (filetype.includes('audio')) type = \"audio\";\n    else if (filetype.includes('video')) type = \"video\";\n    return type;\n  }\n\n  sendTextMessage() {\n    if ((!(/\\S/.test(this.message))) && !this.fileToSend) {\n      return;\n    } else if (this.message.length > 400) {\n      this.toastr.error(\"Message can not be more than 400 characters\", \"Opps!\")\n      return;\n    } else if (this.fileToSend && this.invalidSize()) {\n      this.toastr.error(\"The maximum size of file should be 6MBs.\", \"Opps!\")\n      this.fileToSend = null;\n      return;\n    }\n    this.scroll();\n    if (!this.message && !this.fileToSend) return;\n    if (this.fileToSend) {\n      const option = {\n        id: new Date().getTime().toString(),\n        from: StorageService.getAuthUsername(),\n        topic: this.activeChat.channel_name,\n        to: this.activeChat.channel_name,\n        key: this.activeChat.channel_key,\n        type: this.getFileType(this.fileToSend),\n        date: new Date().getTime(),\n      };\n      this.pubsubService.Client.SendFile(this.fileToSend, option);\n      this.fileToSend = null;\n    }\n    if (!this.message) return;\n    const sendMessage: MessageModel = {\n      status: 1,\n      size: 0,\n      type: \"text\",\n      isGroupMessage: false,\n      from: StorageService.getAuthUsername(),\n      content: this.message,\n      id: new Date().getTime().toString(),\n      date: new Date().getTime(),\n      key: this.activeChat.channel_key,\n      to: this.activeChat.channel_name\n    }\n    this.pubsubService.sendMessage(sendMessage);\n    this.message = '';\n    this.scroll();\n    if (!(this.AllGroups.length && this.activeChat.id == this.AllGroups[0].id)) {\n      this.sortThread();\n    }\n  }\n\n  typingmessage($event) {\n    if ($event.key === \"Enter\") {\n      this.sendTextMessage();\n      return;\n    }\n    const sendMessage: MessageModel = {\n      status: 0,\n      size: 0,\n      type: \"typing\",\n      isGroupMessage: false,\n      from: StorageService.getAuthUsername(),\n      content: \"1\",\n      id: new Date().getTime().toString(),\n      key: this.activeChat.channel_key,\n      to: this.activeChat.channel_name,\n      date: new Date().getTime(),\n    }\n    this.pubsubService.sendMessage(sendMessage);\n  }\n\n  setOnlineStatusforSubscribe(response: onlineOfflineModel) {\n    const indexchat = this.findChatThread(response.channel);\n    if (indexchat) {\n      const onlineNumbers = [...new Set(response.who.map(n => n.username))]\n      indexchat['onlineParticipants'] = onlineNumbers && onlineNumbers.length || 1;\n      if (indexchat && indexchat.auto_created) indexchat['Online'] = onlineNumbers.length > 1\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  setOnlineStatus(response: onlineOfflineModel) {\n    const indexchat = this.findChatThread(response.channel);\n    if (!indexchat) return;\n    if (indexchat.auto_created) indexchat['Online'] = true;\n    if (!indexchat.auto_created) {\n      indexchat['onlineParticipants'] = indexchat['onlineParticipants'] < indexchat['TotalParticipants'] ? indexchat['onlineParticipants'] + 1 : indexchat['onlineParticipants'];\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  setOfflineStatus(response: onlineOfflineModel) {\n    const indexchat = this.findChatThread(response.channel);\n    if (indexchat && indexchat.auto_created) indexchat['Online'] = false;\n    if (!indexchat.auto_created) {\n      indexchat['onlineParticipants'] = indexchat['onlineParticipants'] > 2 ? indexchat['onlineParticipants'] - 1 : 1;\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  setUserTyping(response: typingModel) {\n    if (response.from == this.currentUserData.ref_id) return;\n    const indexchat = FindArrayObject(this.AllGroups, 'channel_name', response.to);\n    const typinguser = indexchat[\"participants\"].find(e => e.ref_id == response.from);\n    if (response.content == '1') {\n      indexchat['TypingUserList'] = (indexchat['TypingUserList'] || []);\n      indexchat['TypingUserList'] = [...new Set([typinguser])];\n    } else if (response.content == '0') {\n      indexchat['TypingUserList'] = indexchat['TypingUserList'].filter(e => e.ref_id != response.from);\n    }\n    indexchat['userTyping'] = indexchat['TypingUserList'].length && response.content != '0';\n    const nameList = indexchat['TypingUserList'].map(userObj => userObj.full_name);\n    if (nameList.length == 1) {\n      indexchat['userTypingContent'] = nameList + ' ' + 'is typing...';\n    } else if (nameList.length == 2) {\n      indexchat['userTypingContent'] = nameList.join() + ' ' + 'are typing...';\n    } else if (nameList.length > 2) {\n      indexchat['userTypingContent'] = nameList.filter((i, j) => j < 2).join() + ' ' + 'and other are typing...';\n    }\n    // if (indexchat && indexchat.auto_created) {\n    //   indexchat['userTyping'] = response.content != '0' && response.from != this.currentUserData.ref_id;\n    //   indexchat['userTypingContent'] = (response.content == '1') ? sender + \" is typing...\" : \"\";\n    // } else if (indexchat && !indexchat.auto_created) {\n    //   this.setMultiUserTyping(response, typinguser, indexchat);\n    // }\n    this.changeDetector.detectChanges();\n  }\n\n  setMultiUserTyping(response, typinguser, indexchat) {\n    if (response.content == '1') {\n      indexchat['TypingUserList'] = [...new Set(typinguser)];\n    } else if (response.content == '0') {\n      indexchat['TypingUserList'] = indexchat['TypingUserList'].filter(e => e.ref_id != response.from);\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  scroll(): void {\n    setTimeout(() => {\n      this.elRef.nativeElement.querySelector('.messagesBox').scrollTop = this.elRef.nativeElement.querySelector('.messagesBox').scrollHeight;\n    }, 500);\n  }\n\n  changeSidebar($event) {\n    this.threadType = $event;\n    if (this.threadType == 'THREAD') {\n      this.getAllGroups();\n    }\n  }\n\n  newChat() {\n    this.threadType = 'CHAT';\n    this.changeDetector.detectChanges();\n  }\n\n  logout() {\n    this.pubsubService.Disconnect();\n    StorageService.clearLocalStorge();\n    this.router.navigate(['login']);\n  }\n\n  sortThread() {\n    if (this.activeChat.id) {\n      this.AllGroups.sort((a, b) => {\n        return a.id == this.activeChat.id ? -1 : 1;\n      });\n    }\n  }\n\n  messageBy(chatthread, response) {\n    if (this.isShowName(chatthread, response)) {\n      const messageByObj = FindArrayObject(chatthread.participants, 'ref_id', response.from);\n      response['messageBy'] = messageByObj && messageByObj.full_name || '';\n    }\n    return response;\n  }\n\n  isShowName(chatthread, response) {\n    if (chatthread['chatHistory'].length && response.from) {\n      const previourmessage = chatthread['chatHistory'][chatthread['chatHistory'].length - 1];\n      return previourmessage.from != response.from;\n    }\n    return true;\n  }\n\n  pushMessage(thread, response) {\n    let newResponse = {};\n    newResponse = JSON.parse(JSON.stringify(response));\n    if (response.type == 'text' || !response.content) {\n      thread['chatHistory'].push(newResponse);\n    } else {\n      const foundIndex = thread.chatHistory.findIndex(x => x.id == response.id);\n      thread.chatHistory[foundIndex] = response;\n    }\n  }\n\n  getLastMessage(group): string {\n    const isactivethread = group.id == this.activeChat.id;\n    if (!isactivethread && group.unReadCount) {\n      return \"Misread messages\"\n    } else if (group.type != 'text') {\n      return group.type;\n    }\n    return group.lastMessage;\n  }\n\n  openImage(imagesrc): void {\n    this.popupimagesrc = imagesrc;\n    this.changeDetector.detectChanges();\n  }\n\n  closeImage() {\n    this.popupimagesrc = null;\n    this.changeDetector.detectChanges();\n  }\n\n  closeModal() {\n    this.editGroupModel = false;\n    this.changeDetector.detectChanges();\n  }\n\n  isHideThread() {\n    return this.isMobile() ? this.screen != 'CHAT' : false;\n  }\n\n  isHideChatScreen() {\n    return this.isMobile() ? this.screen != 'MSG' : false;\n  }\n\n  backScreen() {\n    this.threadType = \"THREAD\";\n    this.screen = \"CHAT\";\n    this.changeDetector.detectChanges();\n  }\n\n  isMobile() {\n    return window.innerWidth < 768\n  }\n\n}\n","<div class=\"row dashboardContainer\">\n  <!-- popup end -->\n  <div class=\"col-sm-4 leftSide\" [hidden]=\"isHideThread()\">\n    <div class=\"leftSideHeader\">\n      <img src=\"./assets/images/logo2.png\" class=\"dashboardLogo\" />\n    </div>\n    <div class=\"leftSideListContainer\">\n\n      <ng-container *ngIf=\"threadType === 'THREAD'\">\n        <div style=\"align-items: center; margin:0px\" class=\"leftSectionHeader\">\n          <h4 class=\"leftHeading\">CHATROOMS</h4>\n          <h4 class=\"createText\" (click)=\"newChat()\">Create +</h4>\n        </div>\n        <!-- empty chats section start-->\n        <div class=\"leftSectionEmptyContainer\" *ngIf=\"!AllGroups.length && !loading\">\n          <p class=\"noAvailableText\">No Available ChatRoom</p>\n          <p class=\"tapText\">Tap and hold on any message to star it, so you can easily find it later.</p>\n        </div>\n        <!-- empty chats section end-->\n\n        <div class=\"listingContainer fullHeight\">\n          <div class=\"chatListContainer noHorizontalPadding\">\n            <ng-container *ngFor=\"let group of AllGroups\">\n              <div class=\"chatsCardContainer hand\" (click)=\"setActiveChat(group)\">\n                <div class=\"chatsCardLeft\" >\n                  <div class=\"chatsNameWrap\">\n                    <p class=\"chatName text-capitalize\">{{group.chatTitle}}</p>\n                    <span class=\"unreadBadge\" *ngIf=\"group.unReadCount\"> {{group.unReadCount}}</span>\n                  </div>\n                  <p class=\"misreadMsg\" *ngIf=\"group.userTyping\">{{group?.userTypingContent}}</p>\n\n                  <p class=\"misreadMsg text-capitalize\" *ngIf=\"!group.userTyping\"\n                    [ngClass]=\"group.unReadCount ? 'misreadMsg':'readMsg'\">\n                    {{ getLastMessage(group) }}\n                  </p>\n\n                </div>\n                <div class=\"chatsCardRight mr-1\">\n                  <div class=\"dropdown mt-1\" style=\"align-self: flex-end\">\n                    <img src=\"./assets/images/more.png\" class=\"moreIcon\" />\n                    <div class=\"dropdown-content\">\n                      <a class=\"edit\" (click)=\"openModal(group)\">EDIT GROUP NAME</a>\n                      <a class=\"delete\" (click)=\"deleteGroup(group)\">DELETE</a>\n                    </div>\n                  </div>\n                  <p [ngClass]=\"group.Online ? 'cardOnlineStatus' :'cardOfflineStatus'\" *ngIf=\"group.auto_created\">\n                    {{group.Online\n                    ?\n                    'Online' :'Offline'}}\n                  </p>\n                  <p class=\"cardOnlineStatus\" *ngIf=\"!group.auto_created\">\n                    {{ group.onlineParticipants + '/' + group.TotalParticipants }} Online\n\n                  </p>\n\n                </div>\n              </div>\n            </ng-container>\n          </div>\n        </div>\n\n      </ng-container>\n\n      <ng-container *ngIf=\"threadType === 'GROUP'\">\n        <add-group (setActiveChat)=\"setchat($event)\" (changeEvent)=\"changeSidebar($event)\"></add-group>\n      </ng-container>\n\n      <ng-container *ngIf=\"threadType === 'CHAT'\">\n        <new-chat (setActiveChat)=\"setchat($event)\" (changeEvent)=\"changeSidebar($event)\"></new-chat>\n      </ng-container>\n\n\n    </div>\n    <div class=\"leftSideFooter\">\n      <div class=\"logoutContainer\" (click)=\"logout()\">\n        <img src=\"./assets/images/log-out.png\" class=\"logoutLogo\" />\n        <span class=\"logoutText\">LOG OUT {{currentUserData.full_name}}</span>\n        <span class=\"ml-1\" [ngClass]=\"sdkconnected ? 'online' :'offline' \"></span>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-sm-8 rightSide\" [hidden]=\"isHideChatScreen()\">\n    <div class=\"rightSideHeader alignBottom chatholder\">\n      <div style=\"display: flex;flex-direction: row;align-items: center\">\n        <img src=\"./assets/images/arrow-left.png\" class=\"arrowLeft hand\" (click)=\"backScreen()\" *ngIf=\"isMobile()\" />\n        <p class=\"roomNameText text-capitalize\" *ngIf=\"activeChat.chatTitle\">{{activeChat.chatTitle}}\n        </p>\n      </div>\n    </div>\n\n    <!-- right side starts -->\n    <div class=\"messagesBox\">\n      <ng-container *ngIf=\"activeChat.chatTitle\">\n        <ng-container *ngFor=\"let chat of activeChat['chatHistory']\">\n          <div [ngClass]=\"chat.from == currentUserName ? 'senderChatContainer' :'receiverChatContainer'\">\n\n            <h4 class=\"msgBy text-capitalize\" *ngIf=\"chat.from != currentUserName\">{{chat.messageBy}}</h4>\n            <!-- first messgae from same person -->\n            <div class=\"bubbleContainer\">\n\n              <div class=\"bubble\" *ngIf=\"chat.type ==='text'\">\n                <p class=\"msgText\">{{chat.content}}</p>\n              </div>\n\n              <div class=\"imgbubble\" *ngIf=\"chat.type ==='image'\">\n                <mat-spinner [diameter]=\"30\" *ngIf=\"!chat.content\"></mat-spinner>\n                <img [src]=\"chat.content | safeUrl\" class=\"w-100 msgImage img-thumbnail img-fluid\"\n                  (click)=\"openImage(chat.content)\" />\n              </div>\n\n              <div class=\"imgbubble file-attachment\" *ngIf=\"chat.type !=='text' && chat.type !=='image'\">\n                <mat-spinner [diameter]=\"30\" *ngIf=\"!chat.content\"></mat-spinner>\n                <ng-container *ngIf=\"chat.content\">\n                  <img [src]=\"checkFileType(chat.content)\" class=\"w-100 msgImage thumbnail img-fluid\" />\n                  <a [href]=\"chat.content | safeUrl\" download>Download</a>\n                </ng-container>\n              </div>\n\n              <span class=\"time\">\n                <ng-container *ngIf=\"chat.readCount && chat.from == currentUserName\">\n                   Read\n                  <br />\n                </ng-container>\n                <span> {{chat.date | date:\"shortTime\"}} </span>\n              </span>\n            </div>\n\n          </div>\n        </ng-container>\n      </ng-container>\n\n      <div class=\"chatRoomContainer\" *ngIf=\"!activeChat.chatTitle && !loading\">\n        <div style=\"height: 100%;\" class=\"listingContainer\">\n          <!-- empty list container start -->\n          <div class=\"emptyListContainer\">\n            <div class=\"emptyListTop\">\n              <div></div>\n              <img src=\"./assets/images/shipping.png\" class=\"shippingIcon\" />\n              <div class=\"noConvoTextWrapper\">\n                <p class=\"noConvoText\">No Conversation Yet</p>\n                <p style=\"max-width: 200px;\" class=\"noConvoSub\">\n                  Tap and hold on any message to star it, so you can easily find\n                  it later.\n                </p>\n              </div>\n            </div>\n            <div class=\"emptyListBottom\">\n              <button type=\"submit\" class=\"btn newChatButton\" (click)=\"newChat()\">\n                NEW CHAT\n              </button>\n              <button type=\"submit\" class=\"btn refreshButton\" (click)=\"getAllGroups()\">\n                REFRESH\n              </button>\n            </div>\n          </div>\n          <!-- empty list container end -->\n        </div>\n      </div>\n    </div>\n\n    <div class=\"sendInputContainer\" [hidden]=\"!activeChat.chatTitle\">\n      <div class=\"sendInputWrapper\">\n\n        <ng-container *ngIf=\"fileToSend\">\n          <div class=\"w-100\">\n            <img src=\"./assets/images/Document.png\" class=\"attachmentItemIcon ml-4\" />\n            <span class=\"ml-2\">{{fileToSend.name}}</span>\n            <span class=\"font-weight-bolder hand ml-2 text-danger\" (click)=\"removeAttachment()\">X</span>\n          </div>\n        </ng-container>\n\n        <input #messageInputElement type=\"text\" class=\"form-control\" placeholder=\"Type to reply..\"\n          (keyup)=\"typingmessage($event)\" [(ngModel)]=\"message\" *ngIf=\"!fileToSend\" />\n\n        <div class=\"sendInputButtonContainer dropup \" style=\"border-right: 1px solid #ebedf4\">\n          <img src=\"./assets/images/attachment.png\" data-toggle=\"dropdown\" class=\"sendIcon dropdown-toggle\" />\n          <div class=\"attachmentpopup dropdown-menu dropdown-menu-right selectOptionContainer\">\n            <div class=\"attachmentPopHeader mx-3\">\n              <p class=\"attachmentHeading\">ADD ATTACHMENT</p>\n              <p class=\"attachmentHeading\">X</p>\n            </div>\n            <div class=\"attachmentPopContent\" (click)=\"fileuploader.click()\">\n              <div class=\"attachmentTool\">\n                <div class=\"attachmentToolIcon\">\n                  <img src=\"./assets/images/Document.png\" class=\"attachmentItemIcon\" />\n                </div>\n                <input #fileuploader class=\"d-none\" type=\"file\" id=\"fileinput\"\n                  (change)=\"handleFileInput($event.target.files)\" />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"sendInputButtonContainer\" (click)=\"sendTextMessage()\">\n          <img src=\"./assets/images/send.png\" class=\"sendIcon\" />\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n\n\n<!-- The Modal -->\n<div id=\"myModal\" class=\"modal\" *ngIf=\"popupimagesrc\">\n  <span class=\"close\" (click)=\"closeImage()\">&times;</span>\n  <img class=\"modal-content\" id=\"img01\" [src]=\"popupimagesrc | safeUrl\">\n</div>\n\n<div id=\"myModal\" class=\"modal\" *ngIf=\"editGroupModel\">\n  <div class=\"createChatPopup \">\n    <div class=\"chatPopupContent groupPopup\">\n      <div class=\"modalHeader\">\n        <p class=\"modalHeading\">Edit group </p>\n        <img src=\"./assets/images/cross.png\" class=\"modalCross hand\" (click)=\"closeModal()\" />\n      </div>\n      <div class=\" modalContent\">\n        <form [formGroup]=\"groupForm\" class=\"w-100\" (submit)=\"editGroup()\">\n          <p class=\"modalContentHeading\">Name your group </p>\n          <input type=\"text\" class=\"form-control\" placeholder=\"ex: Deeper team\" formControlName=\"group_title\" />\n          <form-errors [control]=\"groupForm.get('group_title')\"></form-errors>\n        </form>\n      </div>\n      <button type=\"submit\" class=\"btn doneButton mt-3\" (click)=\"editGroup()\" [disabled]=\"loading\">\n        DONE\n      </button>\n    </div>\n  </div>\n</div>","import { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\nimport { fromEvent } from 'rxjs/internal/observable/fromEvent';\nimport { debounceTime } from 'rxjs/internal/operators/debounceTime';\nimport { distinctUntilChanged } from 'rxjs/internal/operators/distinctUntilChanged';\nimport { map } from 'rxjs/internal/operators/map';\nimport { mergeMap } from 'rxjs/internal/operators/mergeMap';\nimport { BaseService } from 'src/app/shared/services/base.service';\nimport { PubsubService } from 'src/app/shared/services/pubsub.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { startWith } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'new-chat',\n  templateUrl: './new-chat.component.html',\n  styleUrls: ['./new-chat.component.scss']\n})\nexport class NewChatComponent implements OnInit {\n  loading = true;\n  AllUsers = [];\n  CopyAllUsers = [];\n  @Output() changeEvent = new EventEmitter<string>();\n  @ViewChild('searchInput') searchInput: ElementRef;\n  @Output() setActiveChat = new EventEmitter<string>();\n\n\n  constructor(\n    public pubsubService: PubsubService,\n    private svc: BaseService,\n    public dialog: MatDialog,\n    private toastr: ToastrService,\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit(): void {\n    if (this.searchInput) {\n      fromEvent(this.searchInput.nativeElement, 'input')\n        .pipe(\n          map((event: Event) => (event.target as HTMLInputElement).value),\n          debounceTime(1000),\n          distinctUntilChanged(),\n          startWith(''),\n          mergeMap(value => {\n            this.loading = true;\n            if (!value) {\n              const data = {\n                sorting: \"ORDER BY full_name ASC\",\n                search_field: \"full_name\",\n                search_value: '',\n                condition: \"contains\",\n              }\n              return this.svc.post('AllUsers', data).pipe(map(res => {\n                if(!(res.users && res.users.length))\n                {\n                  res.users = [];\n                }\n                this.CopyAllUsers = [...res.users];\n                return res;\n              }))\n            }\n            const temparaay = [...this.CopyAllUsers];\n            const filteruser = temparaay.filter(user => {\n              const searchValue = value.toLowerCase();\n              if (user.full_name.toLowerCase().startsWith(searchValue)) { return -1; }\n            });\n            const returnData = {\n              users: filteruser\n            }\n            return of(returnData)\n          })\n        )\n        .subscribe(res => {\n          this.loading = false;\n          if (!res.users || !res.users.length) {\n            this.toastr.error(\"No contacts found\", \"Opps!\");\n            this.AllUsers = [];\n          } else {\n            this.AllUsers = res.users;\n          }\n        })\n    }\n  }\n\n\n  backScreen() {\n    this.changeEvent.emit(\"THREAD\");\n  }\n\n  addGroupEvent() {\n    this.changeEvent.emit(\"GROUP\");\n  }\n\n  startChat(user) {\n    if (this.loading) return;\n    this.loading = true;\n    const data = {\n      group_title: user.full_name,\n      participants: [user.user_id],\n      auto_created: 1\n    }\n    this.svc.post('CreateGroup', data).subscribe(v => {\n      if (v && v.status == 200) {\n        const subscribedata = {\n          ...v.group,\n          key: v.group['channel_key'],\n          channel: v.group['channel_name'],\n        };\n        const data = [];\n        data.push(subscribedata)\n        this.pubsubService.subscribeToChat(data);\n        this.changeEvent.emit(\"THREAD\");\n        this.setActiveChat.emit(v.group);\n        this.loading = false;\n      }\n    });\n  }\n\n}\n","<div class=\"newChatHeader\">\n  <div class=\"newChatLeft hand\">\n    <img src=\"./assets/images/arrow-left.png\" class=\"arrowLeft\" (click)=\"backScreen()\" />\n    <p class=\"newChatHeading\">New Chat</p>\n  </div>\n  <div class=\"newChatRight hand\">\n    <img class=\"goodMark\" src=\"./assets/images/checkmark.png\" />\n  </div>\n</div>\n<div class=\"newChatSearchBox\">\n  <div class=\"input-group\">\n    <div class=\"input-group-prepend\">\n      <img src=\"./assets/images/search.png\" class=\"seacrchIcon\" />\n    </div>\n    <input type=\"text\" class=\"form-control\" placeholder=\"Search\" #searchInput />\n  </div>\n</div>\n<div class=\"addGrpChat\">\n  <div class=\"addGrpChatTop hand\" (click)=\"addGroupEvent()\">\n    <img src=\"./assets/images/Group Chat.png\" class=\"addgrpIcon\" />\n    <p class=\"addGrpTitle\">Add Group Chat</p>\n  </div>\n  <div class=\"addGrpSep\"></div>\n  <!-- <div class=\"addGrpSub\"> -->\n  <p class=\"cntct\">Contacts</p>\n  <!-- </div> -->\n</div>\n<div class=\"contactListContainer max-height\">\n\n  <ng-container *ngFor=\"let user of AllUsers\">\n    <div class=\"contactListCard hand\" (click)=\"startChat(user)\">\n      <div class=\"contactListCardLeft\">\n        <img src=\"./assets/images/user.png\" class=\"ListCardIcon\" />\n        <p class=\"ListCardName text-capitalize pb-1\">{{user.full_name}}</p>\n      </div>\n      <div class=\"contactListCardRight justify-content-end pl-1\">\n        <img src=\"./assets/images/chat.png\" class=\" pl-1 ListCardButton hand\" />\n      </div>\n    </div>\n  </ng-container>\n\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from \"@angular/router\";\nimport { StorageService } from 'src/app/shared/services/storage.service';\nimport FormsHandler from '../../shared/FormsHandler/FormsHandler';\nimport { AuthService } from '../../shared/auth/auth.service';\n\n@Component({\n  selector: 'ngx-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n\n  loginForm: FormGroup;\n  loading = false;\n  formError = '';\n\n  constructor(\n    private router: Router,\n    private _fb: FormBuilder,\n    public auth: AuthService,\n  ) { }\n\n  ngOnInit() {\n    if (this.auth.islogin()) {\n      this.router.navigate(['chat']);\n    }\n    this.buildForm();\n    document.addEventListener(\"keyup\", event => {\n      if (event.code === 'Enter') {\n        this.onLogin();\n      }\n    });\n  }\n\n  buildForm() {\n    this.loginForm = this._fb.group({\n      'email': new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]),\n      'password': new FormControl(null, [Validators.required, Validators.minLength(8), Validators.maxLength(14)])\n    }, { updateOn: 'change' });\n  }\n\n  onLogin() {\n    FormsHandler.validateForm(this.loginForm);\n    if (this.loginForm.invalid) return;\n    const saveData = this.loginForm.value;\n    saveData.project_id = '115G1WZI';\n    this.loading = true;\n    this.formError = null;\n    this.auth.login(saveData).subscribe(v => {\n      this.loading = false;\n      if (v && v.status == 200) {\n        StorageService.setUserData(v);\n        StorageService.setAuthToken(v.auth_token);\n        StorageService.setAuthUsername(v.ref_id);\n        this.router.navigate(['chat']);\n        this.loginForm.reset();\n      } else {\n        this.formError = v.message;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.loginForm.reset();\n  }\n\n}\n","<div class=\"containerWrapper\">\n  <img src=\"./assets/images/logo2.png\" class=\"logo\" />\n  <div class=\"innerWrapper\">\n    <h6 class=\"wrapperHeading\">Sign In</h6>\n    <p class=\"text-danger text-capitalize\">{{formError}}</p>\n    <div class=\"inputsContainer form-group\">\n      <form [formGroup]=\"loginForm\" class=\"w-100\" (submit)=\"onLogin()\">\n        <input type=\"email\" class=\"form-control\" placeholder=\"Email/Username\" formControlName=\"email\" />\n        <form-errors [control]=\"loginForm.get('username')\"></form-errors>\n        <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"password\" />\n        <form-errors [control]=\"loginForm.get('password')\"></form-errors>\n      </form>\n    </div>\n    <div class=\"buttonsContainer\">\n      <button type=\"submit\" class=\"signButton\" (click)=\"onLogin()\" [disabled]=\"loading\">SIGN IN</button>\n      <h5 class=\"bottomLink\"><a routerLink=\"/signup\">SIGN UP</a></h5>\n      <p class=\"text-muted\">Version:2</p>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from \"@angular/router\";\nimport FormsHandler from '../../shared/FormsHandler/FormsHandler';\nimport { AuthService } from '../../shared/auth/auth.service';\nimport { ValidationService } from 'src/app/shared/validators';\nimport { StorageService } from 'src/app/shared/services/storage.service';\n\n@Component({\n  selector: 'sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit {\n\n  loginForm: FormGroup;\n  loading = false;\n  formError;\n\n  constructor(\n    private router: Router,\n    private _fb: FormBuilder,\n    public auth: AuthService\n  ) { }\n\n  ngOnInit() {\n    this.buildForm();\n    document.addEventListener(\"keyup\", event => {\n      if (event.code === 'Enter') {\n        this.onLogin();\n      }\n    });\n  }\n\n  buildForm() {\n    this.loginForm = this._fb.group({\n      'full_name': new FormControl('', [Validators.required, ValidationService.usernameValidator, Validators.minLength(4), Validators.maxLength(50)]),\n      'device_type': new FormControl('web', [Validators.required]),\n      'device_model': new FormControl('web', [Validators.required]),\n      'device_os_ver': new FormControl(navigator.platform, [Validators.required]),\n      'email': new FormControl(null, [ValidationService.emailValidator, Validators.required]),\n      'password': new FormControl(null, [Validators.required])\n    }, { updateOn: 'change' });\n    console.log('this.signupForm', this.loginForm);\n  }\n\n  onLogin() {\n    FormsHandler.validateForm(this.loginForm);\n    if (this.loginForm.invalid) return;\n    const saveData = this.loginForm.value;\n    saveData.project_id = '115G1WZI';\n    this.loading = true;\n    this.formError = null;\n    this.auth.signup(saveData).subscribe(v => {\n      this.loading = false;\n      if (v && v.status == 200) {\n        StorageService.setUserData(v);\n        StorageService.setAuthToken(v.auth_token);\n        StorageService.setAuthUsername(v.ref_id);\n        this.router.navigate(['chat']);\n        this.loginForm.reset();\n      } else {\n        this.formError = v.message;\n      }\n    });\n  }\n\n}\n","<div class=\"containerWrapper\">\n  <img src=\"./assets/images/logo2.png\" class=\"logo\" />\n  <div class=\"innerWrapper\">\n    <h6 class=\"wrapperHeading\">Sign Up to your account</h6>\n    <p class=\"text-danger text-capitalize\">{{formError }}</p>\n    <div class=\"inputsContainer form-group\">\n      <form [formGroup]=\"loginForm\" class=\"w-100\" (submit)=\"onLogin()\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"Your Username\" formControlName=\"full_name\" />\n        <form-errors [control]=\"loginForm.get('full_name')\"></form-errors>\n        <input type=\"email\" class=\"form-control\" placeholder=\"Your Email\" formControlName=\"email\" />\n        <form-errors [control]=\"loginForm.get('email')\"></form-errors>\n        <input type=\"password\" class=\"form-control\" placeholder=\"Your Password\" formControlName=\"password\" />\n        <form-errors [control]=\"loginForm.get('password')\"></form-errors>\n      </form>\n    </div>\n    <div class=\"buttonsContainer\">\n      <button type=\"submit\" class=\"signButton\" (click)=\"onLogin()\" [disabled]=\"loading\"> SIGN\n        UP</button>\n      <h5 class=\"bottomLink\"><a routerLink=\"/login\">SIGN IN</a></h5>\n    </div>\n  </div>\n</div>","import { FormGroup } from \"@angular/forms\";\n\nexport default class FormsHandler {\n\n    /**\n     * This method is use to validate Form\n     * @param formErrors string \n     * @param form  form instance | object\n     * @return errors as string\n     * @author  Mukhtiar Hussain <muhammad.mukhtiar@norgic.com>\n     **/\n    static validateForm(form) {\n        if (form.valid) {\n            return true;\n        } else {\n            if (form.controls) {\n                for (const field in form.controls) {\n                    const control = form.get(field);\n                    if (control.invalid) {\n                        control.markAsTouched({ onlySelf: true });\n                    }\n                }\n            }\n            return false;\n        }\n    }\n\n    /**\n    * this method is use to validate Form Array\n    * @param formErrors string \n    * @param form  form instance | object\n    * @return errors as string\n    * @author  Mukhtiar Hussain <muhammad.mukhtiar@norgic.com>\n    **/\n    static validateFormArray(form) {\n        if (form.valid) {\n            return true;\n        } else {\n            if (form.controls) {\n                for (const group in form.controls) {\n                    const groupFiled = form.get(group) as FormGroup;\n                    for (const field in groupFiled.controls) {\n                        const control = groupFiled.get(field);\n                        if (control.invalid) {\n                            control.markAsTouched({ onlySelf: true });\n                        }\n                    }\n                }\n            }\n            return false;\n        }\n    }\n\n    static deleteEmptyFileds(data) {\n        if (data) {\n            for (const key in data) {\n                if (data[key] == '' || data[key] == null) {\n                    delete data[key];\n                }\n                if (data[key] && typeof data[key] === 'string') {\n                    data[key] = data[key].trim();\n                }\n            }\n            return data;\n        }\n    }\n\n}","import { Component, Input } from '@angular/core';\nimport { AbstractControlDirective, AbstractControl } from '@angular/forms';\n\n@Component({\n    selector: 'form-errors',\n    template: `\n    <p class='text-danger'>\n     {{hasErrors() ? listOfErrors() : ''}}\n    </p>`,\n})\nexport class GetErrorsComponent {\n\n    private static readonly errorMessages = {\n        'required': () => 'The specified information is required.',\n        'minlength': (params) => 'The min number of characters is ' + params.requiredLength,\n        'maxlength': (params) => 'The max allowed number of characters is ' + params.requiredLength,\n        'pattern': (params) => 'The required pattern is: ' + params.requiredPattern,\n        'years': (params) => params.message,\n        'countryCity': (params) => params.message,\n        'uniqueName': (params) => params.message,\n        'telephoneNumbers': (params) => params.message,\n        'telephoneNumber': (params) => params.message,\n        'invalidNumber': () => 'The specified information is invalid.',\n        'emptySpaces': () => 'The specified information is invalid.',\n        'email': () => 'Email is not valid',\n        'invalidPassword': () => 'Password must be a minimum of 8 characters and contain at least 1 uppercase character and 1 numeric value',\n        'invalidUsernameCharacters': () => 'invalid user name',\n        'invalidInputCharacters': () => 'The specified information is invalid.',\n        'invalidEmailAddress': () => 'Email is not valid',\n    };\n\n    @Input() private control: AbstractControlDirective | AbstractControl;\n\n    hasErrors(): boolean {\n        return this.control && this.control.errors && (this.control.dirty || this.control.touched);\n    }\n\n    listOfErrors() {\n        const errors = Object.keys(this.control.errors).map(field => this.getMessage(field, this.control.errors[field]));\n        return errors.length ? errors[0] : errors;\n    }\n\n    private getMessage(type: string, params: any) {\n        return GetErrorsComponent.errorMessages[type](params);\n    }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatLegacyTableModule as MatTableModule } from '@angular/material/legacy-table';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatLegacyPaginatorModule as MatPaginatorModule } from '@angular/material/legacy-paginator';\nimport { MatLegacySelectModule as MatSelectModule } from '@angular/material/legacy-select';\nimport { MatLegacyCheckboxModule as MatCheckboxModule } from '@angular/material/legacy-checkbox';\nimport { MatLegacyInputModule as MatInputModule } from '@angular/material/legacy-input';\nimport { MatLegacyRadioModule as MatRadioModule } from '@angular/material/legacy-radio';\nimport { MatLegacyButtonModule as MatButtonModule } from '@angular/material/legacy-button';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatLegacySlideToggleModule as MatSlideToggleModule } from '@angular/material/legacy-slide-toggle';\nimport { MatLegacyTooltipModule as MatTooltipModule } from '@angular/material/legacy-tooltip';\nimport { MatLegacyFormFieldModule as MatFormFieldModule } from '@angular/material/legacy-form-field';\nimport { MatLegacyTabsModule as MatTabsModule } from '@angular/material/legacy-tabs';\nimport { MatLegacyProgressBarModule as MatProgressBarModule } from '@angular/material/legacy-progress-bar';\nimport { MatLegacyMenuModule as MatMenuModule } from '@angular/material/legacy-menu';\nimport { MatLegacyDialogModule as MatDialogModule } from '@angular/material/legacy-dialog';\nconst globalRippleConfig: RippleGlobalOptions = { disabled: true };\nimport {\n  MAT_RIPPLE_GLOBAL_OPTIONS,\n  RippleGlobalOptions,\n  MatRippleModule,\n  MatNativeDateModule,\n} from '@angular/material/core';\nimport {MatLegacyProgressSpinnerModule as MatProgressSpinnerModule} from '@angular/material/legacy-progress-spinner';\n\n@NgModule({\n  imports: [\n    MatFormFieldModule,\n    MatRippleModule,\n    MatDialogModule,\n    MatSortModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    DragDropModule,\n    PortalModule,\n    CommonModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatInputModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatTabsModule,\n    MatButtonModule,\n    MatTableModule,\n    MatSlideToggleModule,\n    OverlayModule,\n    MatTooltipModule,\n    MatProgressBarModule,\n    MatMenuModule,\n    MatProgressSpinnerModule\n  ],\n  declarations: [],\n  entryComponents: [],\n  providers: [\n    { provide: MAT_RIPPLE_GLOBAL_OPTIONS, useValue: globalRippleConfig }\n  ],\n  exports: [\n    MatFormFieldModule,\n    PlatformModule,\n    MatRippleModule,\n    MatSortModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    DragDropModule,\n    OverlayModule,\n    PortalModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatInputModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatTabsModule,\n    MatTableModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatProgressBarModule,\n    LayoutModule,\n    MatProgressSpinnerModule\n  ]\n})\nexport class AppMaterialModule { }\n","import { CanActivate, Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    protected router: Router\n  ) { }\n\n  canActivate() {\n    const isAuthenticated = this.authService.isAuthenticated();\n    if (!isAuthenticated) {\n      this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }\n}","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { StorageService } from '../services/storage.service';\n\n@Injectable()\nexport class AuthService {\n  public userSubject$ = new Subject();\n  public currentUserReq$;\n  public currentUserId;\n  public userSubject = new ReplaySubject<any>(1);\n  private userRequest: Observable<any>;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  login(data): Observable<any> {\n    return this.http.post('Login', data);\n  }\n\n  signup(data): Observable<any> {\n    return this.http.post('SignUp', data);\n  }\n\n  logout(): void {\n    StorageService.clearLocalStorge();\n  }\n\n  getToken(): string {\n    return StorageService.getAuthToken()\n  }\n\n  isAuthenticated(): boolean {\n    return !!this.getToken();\n  }\n\n  islogin(): boolean {\n    return !!this.getToken();\n  }\n\n  resetUser() {\n    this.currentUserId = null;\n    this.userRequest = null;\n    this.userSubject = new ReplaySubject(1);\n  }\n\n  getUserId() {\n    const userdata = StorageService.getUserData();\n    return userdata._id;\n  }\n\n  isAuthUser(): Observable<any> {\n    return this.http.get<any>('users/current-user');\n  }\n}\n","\nexport function isEmptyObj(obj) {\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\n\nexport function isEmptyArray(array) {\n    if (!Array.isArray(array) || !array.length) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function isEmail(email) {\n    const emailLowercase = email.toLowerCase();\n    if (email == null || emailLowercase.match(/^[\\w-]+(\\.[\\w-]+)*@([a-z0-9-]+(\\.[a-z0-9-]+)*?\\.[a-zA-Z]{2,6}|(\\d{1,3}\\.){3}\\d{1,3})(:\\d{4})?$/)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function FindObjectByValue(inputArray: Array<any>, value: string) {\n    return inputArray.find(e => e == value);\n}\n\nexport function FindArrayObject(inputArray, key, value) {\n    return inputArray.find(e => e[key] == value);\n}\n\nexport function AutoUnsubscribe(constructor) {\n    const original = constructor.prototype.ngOnDestroy;\n    constructor.prototype.ngOnDestroy = function () {\n        for (const prop in this) {\n            if (prop) {\n                const property = this[prop];\n                if (property && (typeof property.unsubscribe === 'function')) {\n                    property.unsubscribe();\n                }\n            }\n        }\n\n        if (original && typeof original === 'function') {\n            original.apply(this, arguments)\n        }\n    };\n\n}\nexport function isMobile() {\n    return window.innerWidth < 768\n}","import { Pipe, PipeTransform } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable, of } from 'rxjs';\nimport { debounce, debounceTime, map } from 'rxjs/operators';\nimport { BaseService } from '../services/base.service';\n\n@Pipe({\n  name: 'filter'\n})\nexport class filterPipe implements PipeTransform {\n\n  constructor(\n    private toastr: ToastrService,\n    private svc: BaseService\n  ) {\n  }\n\n  transform(items: any[], value: string): Observable<any> {\n    if (!items) return of([]);\n    if (!value) return of(items);\n    const data = {\n      \"search_field\": \"full_name\",\n      \"search_value\": value,\n      \"condition\": \"contains\",\n    }\n    return this.svc.post('AllUsers', data).pipe(\n      debounceTime(500),\n      map(res => {\n        if (res.status == 400) {\n          this.toastr.error(\"No contacts found\", \"Opps!\");\n          return [];\n        }\n        return res.users;\n      })\n    )\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n@Pipe({\n    name: 'safeUrl'\n})\nexport class SafeUrlPipe implements PipeTransform {\n    constructor(private domSanitizer: DomSanitizer) { }\n    transform(url) {\n        return this.domSanitizer.bypassSecurityTrustResourceUrl(url);\n    }\n}","import { HttpClient } from '@angular/common/http';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class BaseService {\n\n  constructor(\n    protected http: HttpClient\n  ) { }\n\n  public userData = new ReplaySubject<any>();\n  userData$ = this.userData.asObservable();\n\n  public isLoading = new Subject<any>();\n  isLoadingResponse = this.isLoading.asObservable();\n\n  /**\n  * This method is used to Call API using Http GET method.\n  * @param URL \n  * @return obserables responsce\n  * @author  Muhammad Mukhtiar  <muhammad.mukhtiar@norgic.com>\n  **/\n  get(URL): Observable<any> {\n    return this.http.get(URL);\n  }\n\n  /**\n  * This method is use to add or update data using API \n  * @param formData \n  * @return obserables responsce\n  * @author  Mukhtiar Hussain <muhammad.mukhtiar@norgic.com>\n  **/\n  save(URL, data = {}): Observable<any> {\n    return this.http.post(URL, data);\n  }\n\n  /**\n  * This method is used to Call API using Http Post method. \n  * @param URL \n  * @param URL \n  * @return obserables responsce\n  * @author  Mukhtiar Hussain <muhammad.mukhtiar@norgic.com>\n  **/\n  post(URL: string, payload: any = {}): Observable<any> {\n    return this.http.post(URL, payload);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpResponse, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { StorageService } from './storage.service';\nimport { environment } from '../../../environments/environment';\nimport { BaseService } from './base.service';\n\n@Injectable()\nexport class HttpService implements HttpInterceptor {\n    private baseUrl = environment.apiBaseUrl;\n\n    constructor(\n        private router: Router,\n        private svc: BaseService\n    ) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        req = this.getModifiedReq(req);\n        return next.handle(req)\n            .pipe(\n                tap(event => {\n                    if (event instanceof HttpResponse) {\n                        if (event && event.body) {\n                            const serRes = event.body;\n                            this.svc.isLoading.next(false);\n                            if (serRes.code === 401) {\n                                StorageService.clearLocalStorge();\n                                this.showErrorMsg(serRes.message);\n                                this.router.navigate(['/login']);\n                            } else if (serRes.code === 407) {\n                                // StorageService.clearLocalStorge();\n                                this.showErrorMsg(serRes.message);\n                                // this.router.navigate(['/auth/login']);\n                            } else if (serRes.code === 200 || serRes.code === 201) {\n                            } else {\n                                this.showErrorMsg(serRes.message);\n                            }\n                        }\n\n                    }\n                }),\n                catchError(errorRes => {\n                    this.svc.isLoading.next(false);\n                    console.log('this should print your error!', errorRes.error);\n                    if (errorRes instanceof HttpErrorResponse) {\n                        if (errorRes.status === 500) {\n                            // this.toastrService.danger('Opps!', \"Something went wrong\");\n                        } else {\n                            this.showErrorMsg(errorRes.message);\n                        }\n                    }\n                    return throwError(errorRes);\n                })\n            );\n    }\n\n    getModifiedReq(req: HttpRequest<any>): HttpRequest<any> {\n        req = req.clone({ url: this.baseUrl + req.url });\n        const formdata = JSON.stringify(req.body);\n        const auth_token = StorageService.getAuthToken();\n        if (auth_token) req = req.clone({ headers: req.headers.set('Authorization', 'Bearer ' + auth_token) });\n        req = req.clone({ headers: req.headers.set('Content-Type', 'application/json') });\n        req = req.clone({ body: formdata });\n        return req;\n    }\n\n    showErrorMsg(errorResponse) {\n        if (typeof errorResponse == 'string') {\n            // this.toastrService.danger('Opps!', errorResponse);\n        }\n\n    }\n}","import { Injectable, OnDestroy, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { StorageService } from './storage.service';\ndeclare const MVDOTOK: any;\n\n@Injectable()\nexport class PubsubService implements OnDestroy {\n  @Output()\n  protected wsSubscription: Subscription;\n  public Client: any;\n\n  constructor() { }\n\n  public ngOnDestroy(): void {\n    this.wsSubscription.unsubscribe();\n  }\n\n  public initConfigure(): void {\n    const user = StorageService.getUserData();\n    this.Client = new MVDOTOK.Client({\n      projectID: \"115G1WZI\",\n      host: `${user.messaging_server_map.complete_address}`,\n      stunServer: `${user.stun_server_map ? user.stun_server_map.complete_address : ''}`\n    });\n    this.Client.Register(user.ref_id.toString(), user.authorization_token.toString());\n  }\n\n  public sendMessage(message): void {\n    this.Client.SendMessage(message);\n  }\n\n  public subscribeToChat(groups): void {\n    groups.map(chanelObj => {\n      this.Client.Subscribe(chanelObj);\n    });\n  }\n\n\n  public unsubscribeToChat(groups): void {\n    this.Client.UnSubscribe(groups);\n  }\n\n  public Disconnect(): void {\n    this.Client.Disconnect();\n  }\n\n  readMessage(chatMessages) {\n    chatMessages.map(chat => {\n      this.Client.SendReceipt(chat);\n    });\n  }\n\n  readSingleMessage(chatMessages) {\n    this.Client.SendReceipt(chatMessages);\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\n@Injectable()\nexport class StorageService {\n\n  static readonly STORAGE_KEY_AUTH_TOKEN = 'auth_token';\n  static readonly STORAGE_KEY_USER_NAME = 'username';\n  static readonly STORAGE_KEY_USER_DATA = 'user_data';\n\n  static clearLocalStorge() {\n    localStorage.clear();\n    sessionStorage.clear();\n    return;\n  }\n\n  static getAuthToken() {\n    return localStorage.getItem(StorageService.STORAGE_KEY_AUTH_TOKEN);\n  }\n\n  static setAuthToken(token) {\n    localStorage.setItem(StorageService.STORAGE_KEY_AUTH_TOKEN, token);\n  }\n\n  static removeAuthToken() {\n    localStorage.removeItem(StorageService.STORAGE_KEY_AUTH_TOKEN);\n  }\n\n  static getAuthUsername() {\n    return localStorage.getItem(StorageService.STORAGE_KEY_USER_NAME);\n  }\n\n  static setAuthUsername(username) {\n    localStorage.setItem(StorageService.STORAGE_KEY_USER_NAME, username);\n  }\n\n  static removeAuthUsername() {\n    localStorage.removeItem(StorageService.STORAGE_KEY_USER_NAME);\n  }\n\n  static setUserData(userData) {\n    localStorage.setItem(StorageService.STORAGE_KEY_USER_DATA, JSON.stringify(userData));\n  }\n\n  static getUserData() {\n    return JSON.parse(localStorage.getItem(StorageService.STORAGE_KEY_USER_DATA));\n  }\n\n  static removeUserData() {\n    localStorage.removeItem(StorageService.STORAGE_KEY_USER_DATA);\n  }\n\n}\n","import { Injectable, Output } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n// declare var PUBSUB: any;\ndeclare const PUBSUB: any;\ndeclare const pubsub: any;\n\n@Injectable()\nexport class WebsocketService {\n  @Output() public ready: Subject<void> = new Subject();\n  public webSocket: WebSocket;\n  ws;\n  Client;\n\n  public initSocket(url: string): Observable<any> {\n    this.webSocket = new WebSocket('wss://' + 'vtest3.vdotok.com:8443' + '/call');\n    this.webSocket.onopen = () => this.ready.next();\n    return new Observable<any>(observer => {\n      this.webSocket.onmessage = (event: MessageEvent) => observer.next(event);\n      this.webSocket.onerror = (event: Event) => observer.error(event);\n      this.webSocket.onclose = (event: CloseEvent) => observer.complete();\n      // Callback invoked on unsubscribe\n      return () => this.webSocket.close();\n    });\n  }\n\n  public send(message: string): void {\n    // if (this.webSocket.readyState === WebSocket.OPEN) {\n    //   this.webSocket.send(message);\n    // }\n  }\n\n\n  public initPUBSUBSocket() {\n    return new PUBSUB.Client({\n      host: \"ws://emit1.togee.io\",\n      port: \"8080\",\n      credentials: {\n        username: \"john\",\n        password: \"\"\n      },\n      clientId: \"12345\",\n      reConnectivity: true,\n      secret: \"cWV91camkwd99XO9rvHmamvXxGdyeHK5\"\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { WebsocketService } from './services/websocket.service';\nimport { StorageService } from './services/storage.service';\nimport { AuthService } from './auth/auth.service';\nimport { AuthGuard } from './auth/auth-guard.service';\nimport { BaseService } from './services/base.service';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpService } from './services/http.service';\nimport { PubsubService } from './services/pubsub.service';\nimport { GetErrorsComponent } from './FormsHandler/get-errors.component';\nimport { MAT_LEGACY_DIALOG_DEFAULT_OPTIONS as MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material/legacy-dialog';\nimport { filterPipe } from './pipe/filter';\nimport { SafeUrlPipe } from './pipe/safeurl';\n\nconst components = [\n  GetErrorsComponent,\n  filterPipe,\n  SafeUrlPipe\n]\n\n@NgModule({\n  imports: [\n    RouterModule,\n    CommonModule,\n  ],\n  declarations: [...components],\n  exports: [...components],\n  providers: [\n    StorageService,\n    AuthService,\n    AuthGuard,\n    BaseService,\n    PubsubService,\n    WebsocketService,\n    { provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: { hasBackdrop: false } },\n    { provide: HTTP_INTERCEPTORS, useClass: HttpService, multi: true },\n  ],\n})\nexport class SharedModule { }\n","\nimport { AbstractControl } from '@angular/forms';\n\n\n\nexport class ValidationService {\n\n    static specialCharValidator(control) {\n        if (control.value == null || control.value.match(/^[a-zA-Z0-9._]*$/)) {\n            return null;\n        } else {\n\n            return { 'invalidCharacters': true };\n        }\n    }\n\n    static uppercaseCharacterRule(amount: number): any {\n        return function validate(control): { [key: string]: any } {\n            const value: string = control.value;\n            if (value.length === 0) {\n                return undefined;\n            }\n            const pattern = /[^A-Z]+/g;\n            const stripped = value.replace(pattern, '');\n            if (stripped.length < amount) {\n                return { 'uppercaseCharacterRule': true };\n            }\n            return undefined;\n        };\n    }\n\n    static creditCardValidator(control) {\n        // Visa, MasterCard, American Express, Diners Club, Discover, JCB\n        if (control.value.match(/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/)) {\n            return null;\n        } else {\n            return { 'invalidCreditCard': true };\n        }\n    }\n\n    static emailValidator(control) {\n        // RFC 2822 compliant regex\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        const emailLowercase = control.value.toLowerCase();\n        if (control.value == null || emailLowercase.match(/^[\\w-]+(\\.[\\w-]+)*@([a-z0-9-]+(\\.[a-z0-9-]+)*?\\.[a-zA-Z]{2,6}|(\\d{1,3}\\.){3}\\d{1,3})(:\\d{4})?$/)) {\n            return null;\n        } else {\n            return { 'invalidEmailAddress': true };\n        }\n    }\n\n\n    static isEmptyInputValue(value: any): boolean {\n        // we don't check for string here so it also works with arrays\n        return value == null || value.length === 0;\n    }\n\n    static emptySpacesValidator(control) {\n        console.log('emptySpacesValidator', control, control.value);\n        if (control.value.match(/([^\\s])/)) {\n            return null;\n        } else {\n            return { 'emptySpaces': true };\n        }\n    }\n\n    static removeSpace(value: any): string {\n        return value.trim()\n    }\n\n    static englishWordsValidator(control) {\n        console.log('englishWordsValidator', control);\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        const tempstring = ValidationService.removeSpace(control.value);\n        if (tempstring.match(/^[a-zA-Z]+( [\\&a-zA-Z]+)*$/)) {\n            return null;\n        } else {\n            return { 'invalidCharacters': true };\n        }\n    }\n\n    static nameValidator(control) {\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        if (control.value.match(/^(?:[a-zA-Z0-9\\s@,=%$#&_\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDCF\\uFDF0-\\uFDFF\\uFE70-\\uFEFF]|(?:\\uD802[\\uDE60-\\uDE9F]|\\uD83B[\\uDE00-\\uDEFF])){0,30}$/)) {\n            return null;\n        } else {\n            return { 'invalidNameCharacters': true };\n        }\n    }\n\n\n    static whiteSpaceValidator(control) {\n        // RFC 2822 compliant regex\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n\n        if (control.value.match(/^[-a-zA-Z\\u0600-\\u06FF0-9-()]+(\\s+[-a-zA-Z\\u0600-\\u06FF0-9-()]+)*$/)) {\n            return null;\n        } else {\n            return { 'invalidWhiteSpace': true };\n        }\n    }\n\n\n    static phoneValidator(control) {\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        if (control.value.match(/^\\+?[0-9]+$/g)) {\n            return null;\n        } else {\n            return { 'invalidPhone': true };\n        }\n    }\n\n    static phoneUsernameEmailValidator(control) {\n        if (control.value == null) return;\n        let validEmail = true, validPhone = true, validUsername = true;\n        if (ValidationService.emailValidator(control) != null) {\n            validEmail = false;\n        }\n        if (!control.value.match(/^[a-zA-Z0-9]{5,17}$/)) {\n            validUsername = false;\n        }\n        if (!control.value.match(/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/)) {\n            validPhone = false;\n        }\n        console.log('phoneUsernameEmailValidator', ValidationService.emailValidator(control), validEmail, validUsername, validPhone)\n        if (validEmail || validUsername || validPhone) return null;\n        return { 'invalidUsernameEmail': true };\n    }\n\n    static usernameValidator(control) {\n        // RFC 2822 compliant regex\n        if (control.value == null || control.value.match(/^[a-zA-Z0-9]+$/)) {\n            return null;\n        } else {\n            return { 'invalidUsernameCharacters': true };\n        }\n    }\n\n    static passwordValidator(control) {\n        // {8,100}           - Assert password is between 8 and 100 characters\n        // (?=.*[0-9])       - Assert a string has at least one number\n        if (control.value && !ValidationService.uppercaseCharacterRule(1)(control) && control.value.match(/^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/)) {\n            return null;\n        } else {\n            return { 'invalidPassword': true };\n        }\n    }\n\n    static MatchPassword(control: AbstractControl, crud) {\n        if (control.value == null) return null;\n        return control.root.get('password').value != control.value ? { passworMismatch: true } : null;\n    }\n\n\n    static pinCodeValidator(control) {\n        if (control.value && control.value.match(/^[0-9]{4}$/)) {\n            return null;\n        } else {\n            return { 'invalidPinCode': true };\n        }\n    }\n\n\n    static trimData(data) {\n        if (data) {\n            for (const key in data) {\n                if (data[key] && typeof data[key] == \"string\") {\n                    data[key] = data[key].trim();\n                }\n            }\n            return data;\n        }\n    }\n\n\n    static checkInteger(control) {\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        if (parseFloat(control.value) == 0 || (parseFloat(control.value) || parseInt(control.value)) && !isNaN(control.value)) {\n            return null;\n        } else {\n            return { 'invalidNumber': true };\n        }\n    }\n\n\n    static alphnumericValidator(control) {\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        if (ValidationService.whiteSpaceValidator(control.value)) return;\n        // if (control.value.match(/^[^±!@£$%^&*_+§¡€#¢§¶•ªº«\\\\/<>?:;|=.,0-9]{1,500}$/)) {\n        if (control.value.match(/^[a-zA-Z0-9-,]+(\\s{0,1}[a-zA-Z-, ])*$/)) {\n            return null;\n        } else {\n            return { 'invalidInputCharacters': true };\n        }\n    }\n\n\n    static stringvalidator(control) {\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        if (control.value.match(/^[a-zA-Z0-9-,]+(\\s{0,1}[a-zA-Z-, ])*$/)) {\n            return null;\n        } else {\n            return { 'invalidInputCharacters': true };\n        }\n    }\n\n    static disallowspecial(control) {\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        if (control.value.match(/^[A-Za-z0-9 ]+$/)) {\n            return null;\n        } else {\n            return { 'invalidInputCharacters': true };\n        }\n    }\n\n\n\n    static alphValidator(control) {\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        if (control.value.match(/^\\+?[A-Za-z]+$/g)) {\n            return null;\n        } else {\n            return { 'invalidString': true };\n        }\n    }\n\n    static numericValidator(control) {\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        if (ValidationService.whiteSpaceValidator(control.value)) return;\n        const value = control.value.toString()\n        if (value.match(/^\\+?[0-9]+$/g)) {\n            return null;\n        } else {\n            return { 'invalidNumeric': true };\n        }\n    }\n\n    static floatNumberValidator(control) {\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        const value = control.value.toString()\n        if (value.match(/^[+-]?\\d+(\\.\\d+)?$/g)) {\n            return null;\n        } else {\n            return { 'invalidNumeric': true };\n        }\n    }\n\n\n    static mackAddressValidator(control) {\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        const value = control.value.toString()\n        if (value.match(/^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$/g)) {\n            return null;\n        } else {\n            return { 'invalidMackAddress': true };\n        }\n    }\n\n\n    static gatewayAddressValidator(control) {\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        const value = control.value.toString()\n        if (value.match(/^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$/g)) {\n            return null;\n        } else {\n            return { 'invalidMackAddress': true };\n        }\n    }\n\n\n    static ipValidator(control) {\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        const value = control.value.toString()\n        if (value.match(/^(\\d|[1-9]\\d|1\\d\\d|2([0-4]\\d|5[0-5]))\\.(\\d|[1-9]\\d|1\\d\\d|2([0-4]\\d|5[0-5]))\\.(\\d|[1-9]\\d|1\\d\\d|2([0-4]\\d|5[0-5]))\\.(\\d|[1-9]\\d|1\\d\\d|2([0-4]\\d|5[0-5]))$/g)) {\n            return null;\n        } else {\n            return { 'invalidIp': true };\n        }\n    }\n\n\n    static domainNameValidator(control) {\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        const value = control.value.toString()\n        if (value.match(/^(?=^.{1,254}$)(^(?:(?!\\d+\\.)[a-zA-Z0-9_\\-]{1,63}\\.?)+(?:[a-zA-Z]{2,})$)/g)) {\n            return null;\n        } else {\n            return { 'invalidDomainName': true };\n        }\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  //apiBaseUrl : 'https://s-tenant.vdotok.dev/API/v0/'\n  apiBaseUrl : 'https://q-tenant.vdotok.dev/API/v0/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","ChatComponent","LoginComponent","SignUpComponent","AuthGuard","routes","path","component","canActivate","redirectTo","AppRoutingModule","forRoot","imports","exports","AppComponent","constructor","selectors","decls","vars","template","i0","BrowserModule","FormsModule","ReactiveFormsModule","CommonModule","BrowserAnimationsModule","AppMaterialModule","HttpClientModule","SharedModule","AddGroupComponent","NewChatComponent","ToastrModule","AppModule","bootstrap","maxOpened","preventDuplicates","declarations","EventEmitter","FormControl","Validators","FormsHandler","StorageService","fromEvent","map","debounceTime","distinctUntilChanged","mergeMap","startWith","of","pubsubService","svc","toastr","_fb","changeDetector","getAuthUsername","getUserData","chatHistory","ngOnInit","form","group","required","maxLength","updateOn","document","addEventListener","event","code","loading","addGroup","ngAfterViewInit","searchInput","nativeElement","pipe","target","value","data","sorting","search_field","search_value","condition","post","res","users","length","CopyAllUsers","temparaay","filteruser","filter","user","searchValue","toLowerCase","full_name","startsWith","returnData","subscribe","error","AllUsers","setAlreadySelected","selectedUsers","userIndex","find","alluser","user_id","detectChanges","selectContact","contact","groupnameError","push","selected","Set","console","openDialog","content","useridArray","participants","auto_created","group_title","v","status","setActiveChat","emit","reset","changeEvent","addGroupModel","validateForm","invalid","success","closemodel","forEach","element","backScreen","viewQuery","ctx","FindArrayObject","router","elRef","dialog","groupForm","initConfigure","Client","on","response","sdkconnected","AllGroups","getAllGroups","log","sendTextMessage","setOfflineStatus","setOnlineStatus","JSON","parse","stringify","type","scroll","chatthread","findChatThread","to","isActiveThread","id","activeChat","messageBy","Date","pushMessage","readSingleMessage","setTimeout","sort","a","b","setUserTyping","receiptType","chName","topic","undefined","message","messageId","setOnlineStatusforSubscribe","messageInputElement","sendMessage","size","isGroupMessage","from","getTime","toString","key","channel_key","channel_name","date","deleteGroup","playload","group_id","alert","openModal","editGroupModel","editGroup","get","groups","chat","r","chatTitle","setToActive","indexchat","subscribeToChat","sortThread","checkFileType","preview","includes","fileType","split","channel","screen","readsendMessage","setchat","currentUserName","chatobj","unreadchatHistory","isRead","readMessage","handleFileInput","files","fileToSend","item","invalidSize","removeAttachment","getFileType","fileR","filetype","test","option","SendFile","typingmessage","$event","onlineNumbers","who","n","username","currentUserData","ref_id","typinguser","e","nameList","userObj","join","i","j","setMultiUserTyping","querySelector","scrollTop","scrollHeight","changeSidebar","threadType","newChat","logout","Disconnect","clearLocalStorge","navigate","isShowName","messageByObj","previourmessage","thread","newResponse","foundIndex","findIndex","x","getLastMessage","isactivethread","unReadCount","lastMessage","openImage","imagesrc","popupimagesrc","closeImage","closeModal","isHideThread","isMobile","isHideChatScreen","window","innerWidth","addGroupEvent","startChat","subscribedata","auth","islogin","buildForm","onLogin","loginForm","minLength","saveData","project_id","formError","login","setUserData","setAuthToken","auth_token","setAuthUsername","ngOnDestroy","consts","ValidationService","usernameValidator","navigator","platform","emailValidator","signup","valid","controls","field","control","markAsTouched","onlySelf","validateFormArray","groupFiled","deleteEmptyFileds","trim","GetErrorsComponent","hasErrors","errors","dirty","touched","listOfErrors","Object","keys","getMessage","params","errorMessages","requiredLength","requiredPattern","inputs","OverlayModule","PortalModule","CdkTableModule","DragDropModule","LayoutModule","MatLegacyTableModule","MatTableModule","PlatformModule","MatSortModule","MatLegacyPaginatorModule","MatPaginatorModule","MatLegacySelectModule","MatSelectModule","MatLegacyCheckboxModule","MatCheckboxModule","MatLegacyInputModule","MatInputModule","MatLegacyRadioModule","MatRadioModule","MatLegacyButtonModule","MatButtonModule","MatDatepickerModule","MatLegacySlideToggleModule","MatSlideToggleModule","MatLegacyTooltipModule","MatTooltipModule","MatLegacyFormFieldModule","MatFormFieldModule","MatLegacyTabsModule","MatTabsModule","MatLegacyProgressBarModule","MatProgressBarModule","MatLegacyMenuModule","MatMenuModule","MatLegacyDialogModule","MatDialogModule","MAT_RIPPLE_GLOBAL_OPTIONS","MatRippleModule","MatNativeDateModule","MatLegacyProgressSpinnerModule","MatProgressSpinnerModule","globalRippleConfig","disabled","provide","useValue","authService","isAuthenticated","factory","ReplaySubject","Subject","AuthService","http","getToken","getAuthToken","resetUser","currentUserId","userRequest","userSubject","getUserId","userdata","_id","isAuthUser","isEmptyObj","obj","hasOwnProperty","isEmptyArray","array","Array","isArray","isEmail","email","emailLowercase","match","FindObjectByValue","inputArray","AutoUnsubscribe","original","prototype","prop","property","unsubscribe","apply","arguments","filterPipe","transform","items","pure","SafeUrlPipe","domSanitizer","url","bypassSecurityTrustResourceUrl","BaseService","userData","asObservable","isLoading","URL","save","payload","HttpResponse","HttpErrorResponse","throwError","catchError","tap","environment","HttpService","apiBaseUrl","intercept","req","next","getModifiedReq","handle","body","serRes","showErrorMsg","errorRes","clone","baseUrl","formdata","headers","set","errorResponse","PubsubService","wsSubscription","MVDOTOK","projectID","host","messaging_server_map","complete_address","stunServer","stun_server_map","Register","authorization_token","SendMessage","chanelObj","Subscribe","unsubscribeToChat","UnSubscribe","chatMessages","SendReceipt","localStorage","clear","sessionStorage","getItem","STORAGE_KEY_AUTH_TOKEN","token","setItem","removeAuthToken","removeItem","STORAGE_KEY_USER_NAME","removeAuthUsername","STORAGE_KEY_USER_DATA","removeUserData","Observable","WebsocketService","initSocket","webSocket","WebSocket","onopen","ready","observer","onmessage","onerror","onclose","complete","close","send","initPUBSUBSocket","PUBSUB","port","credentials","password","clientId","reConnectivity","secret","HTTP_INTERCEPTORS","MAT_LEGACY_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_DEFAULT_OPTIONS","components","hasBackdrop","useClass","multi","specialCharValidator","uppercaseCharacterRule","amount","validate","pattern","stripped","replace","creditCardValidator","isEmptyInputValue","emptySpacesValidator","removeSpace","englishWordsValidator","tempstring","nameValidator","whiteSpaceValidator","phoneValidator","phoneUsernameEmailValidator","validEmail","validPhone","validUsername","passwordValidator","MatchPassword","crud","root","passworMismatch","pinCodeValidator","trimData","checkInteger","parseFloat","parseInt","isNaN","alphnumericValidator","stringvalidator","disallowspecial","alphValidator","numericValidator","floatNumberValidator","mackAddressValidator","gatewayAddressValidator","ipValidator","domainNameValidator","production","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}