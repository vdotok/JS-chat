{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/chat/add-group/add-group.component.ts","./src/app/components/chat/add-group/add-group.component.html","./src/app/components/chat/chat.component.ts","./src/app/components/chat/chat.component.html","./src/app/components/chat/new-chat/new-chat.component.ts","./src/app/components/chat/new-chat/new-chat.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/sign-up/sign-up.component.ts","./src/app/components/sign-up/sign-up.component.html","./src/app/shared/FormsHandler/FormsHandler.ts","./src/app/shared/FormsHandler/get-errors.component.ts","./src/app/shared/app-material/app-material.module.ts","./src/app/shared/auth/auth-guard.service.ts","./src/app/shared/auth/auth.service.ts","./src/app/shared/helpers/helpersFunctions.ts","./src/app/shared/pipe/filter.ts","./src/app/shared/pipe/safeurl.ts","./src/app/shared/services/base.service.ts","./src/app/shared/services/http.service.ts","./src/app/shared/services/pubsub.service.ts","./src/app/shared/services/storage.service.ts","./src/app/shared/services/websocket.service.ts","./src/app/shared/shared.module.ts","./src/app/shared/validators.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChatComponent } from './components/chat/chat.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { AuthGuard } from './shared/auth/auth-guard.service';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'signup',\n    component: SignUpComponent\n  },\n  {\n    path: 'chat',\n    component: ChatComponent,\n    canActivate: [AuthGuard]\n  },\n  { path: '**', redirectTo: 'login' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<router-outlet></router-outlet>`\n})\nexport class AppComponent {\n  constructor() { }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ChatComponent } from './components/chat/chat.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppMaterialModule } from './shared/app-material/app-material.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SharedModule } from './shared/shared.module';\nimport { AddGroupComponent } from './components/chat/add-group/add-group.component';\nimport { NewChatComponent } from './components/chat/new-chat/new-chat.component';\nimport { ToastrModule } from 'ngx-toastr';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatComponent,\n    AddGroupComponent,\n    LoginComponent,\n    NewChatComponent,\n    SignUpComponent\n  ],\n  imports: [\n    SharedModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    BrowserAnimationsModule,\n    AppMaterialModule,\n    HttpClientModule,\n    ToastrModule.forRoot({\n      maxOpened: 1,\n      preventDuplicates: true\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ChangeDetectorRef, Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport FormsHandler from 'src/app/shared/FormsHandler/FormsHandler';\nimport { BaseService } from 'src/app/shared/services/base.service';\nimport { PubsubService } from 'src/app/shared/services/pubsub.service';\nimport { StorageService } from 'src/app/shared/services/storage.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { fromEvent } from 'rxjs/internal/observable/fromEvent';\nimport { map } from 'rxjs/internal/operators/map';\nimport { debounceTime } from 'rxjs/internal/operators/debounceTime';\nimport { distinctUntilChanged } from 'rxjs/internal/operators/distinctUntilChanged';\nimport { mergeMap } from 'rxjs/internal/operators/mergeMap';\nimport { startWith } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'add-group',\n  templateUrl: './add-group.component.html',\n  styleUrls: ['./add-group.component.scss']\n})\nexport class AddGroupComponent implements OnInit {\n  currentUserName = StorageService.getAuthUsername();\n  currentUserData = StorageService.getUserData();\n  @Output() changeEvent = new EventEmitter<string>();\n  form: FormGroup;\n  loading = true;\n  addGroupModel = false;\n  AllUsers = [];\n  activeChat: any = {\n    chatHistory: []\n  };\n  message: string = '';\n  group_title = '';\n  groupnameError = '';\n  dialogRef;\n  selectedUsers = [];\n  CopyAllUsers = [];\n  @ViewChild('searchInput') searchInput: ElementRef;\n  @Output() setActiveChat = new EventEmitter<string>();\n\n  constructor(\n    public pubsubService: PubsubService,\n    private svc: BaseService,\n    private toastr: ToastrService,\n    private _fb: FormBuilder,\n    private changeDetector: ChangeDetectorRef,\n  ) {\n  }\n\n  ngOnInit() {\n    this.form = this._fb.group({\n      'group_title': new FormControl('', [Validators.required, Validators.maxLength(100)]),\n    }, { updateOn: 'change' });\n\n    document.addEventListener(\"keyup\", event => {\n      if (event.code === 'Enter' && !this.loading) {\n        this.addGroup();\n      }\n    });\n  }\n\n  ngAfterViewInit(): void {\n    if (this.searchInput) {\n      fromEvent(this.searchInput.nativeElement, 'input')\n        .pipe(\n          map((event: Event) => (event.target as HTMLInputElement).value),\n          debounceTime(1000),\n          distinctUntilChanged(),\n          startWith(''),\n          mergeMap(value => {\n            this.loading = true;\n            if (!value) {\n              const data = {\n                sorting: \"ORDER BY full_name ASC\",\n                search_field: \"full_name\",\n                search_value: '',\n                condition: \"contains\",\n              }\n              return this.svc.post('AllUsers', data).pipe(map(res => {\n                if(!(res.users && res.users.length))\n                {\n                  res.users = [];\n                }\n                this.CopyAllUsers = [...res.users];\n                return res;\n              }))\n            }\n            const temparaay = [...this.CopyAllUsers];\n            const filteruser = temparaay.filter(user => {\n              let searchValue = value.toLowerCase();\n              if (user.full_name.toLowerCase().startsWith(searchValue)) { return -1; }\n            });\n            const returnData = {\n              users: filteruser\n            }\n            return of(returnData)\n          }),\n        )\n        .subscribe(res => {\n          this.loading = false;\n          if (!res.users || !res.users.length) {\n            this.toastr.error(\"Opps!\", \"No contacts found\");\n            this.AllUsers = [];\n          } else {\n            this.AllUsers = res.users;\n          }\n          this.setAlreadySelected();\n        })\n    }\n  }\n\n  setAlreadySelected() {\n    this.selectedUsers.map(user => {\n      const userIndex = this.AllUsers.find(alluser => alluser.user_id == user.user_id);\n      if (userIndex) userIndex['selected'] = true;\n    });\n    this.changeDetector.detectChanges();\n  }\n\n  selectContact(contact) {\n    this.groupnameError = '';\n    contact['selected'] = !contact['selected'];\n    this.changeDetector.detectChanges();\n    this.selectedUsers.push(contact);\n    this.selectedUsers = this.selectedUsers.filter(user => user.selected);\n    this.selectedUsers = [...new Set(this.selectedUsers)];\n    if (!this.selectedUsers.length) {\n      this.groupnameError = 'Please Select Contacts';\n    } else if (this.selectedUsers.length > 4) {\n      this.groupnameError = 'Participants cannot be more than 4';\n    }\n    console.error('groupnameError', this.groupnameError);\n    this.changeDetector.detectChanges();\n  }\n\n  openDialog(content): void {\n    this.groupnameError = '';\n    this.selectedUsers = this.selectedUsers.filter(user => user.selected);\n    this.changeDetector.detectChanges();\n    if (!this.selectedUsers.length) {\n      this.groupnameError = 'Please Select Contacts';\n      return;\n    } else if (this.selectedUsers.length > 4) {\n      this.groupnameError = 'Participants cannot be more than 4';\n      return;\n    }\n    if (this.selectedUsers.length == 1) {\n      const useridArray = this.selectedUsers.map(user => user.user_id);\n      let data = {\n        participants: useridArray,\n        auto_created: useridArray.length > 1 ? 0 : 1,\n        group_title: \"One to One chat\",\n      }\n      this.svc.post('CreateGroup', data).subscribe(v => {\n        this.changeDetector.detectChanges();\n        if (v && v.status == 200) {\n          this.groupnameError = '';\n          this.setActiveChat.emit(v.group);\n          this.form.reset();\n        }\n        this.selectedUsers = [];\n        this.changeDetector.detectChanges();\n        this.loading = false;\n        this.changeEvent.emit(\"THREAD\");\n      });\n\n    } else {\n      this.addGroupModel = true;\n    }\n  }\n\n  addGroup() {\n    FormsHandler.validateForm(this.form);\n    const useridArray = this.selectedUsers.map(user => user.user_id);\n    if (this.form.invalid || !useridArray.length || this.loading) return;\n    if (useridArray.length > 5) {\n      this.toastr.error('OPPS!', 'participants Can not be more than 5!');\n      return;\n    }\n    this.loading = true;\n    this.changeDetector.detectChanges();\n    let data = {\n      participants: useridArray,\n      auto_created: useridArray.length > 1 ? 0 : 1\n    }\n    data = {\n      ...data,\n      ...this.form.value\n    };\n    this.svc.post('CreateGroup', data).subscribe(v => {\n      this.changeDetector.detectChanges();\n      if (v && v.status == 200) {\n        this.groupnameError = '';\n        this.setActiveChat.emit(v.group);\n        this.toastr.success('Success!', 'The group has been created!');\n        this.closemodel();\n        this.form.reset();\n      }\n      this.selectedUsers = [];\n      this.changeDetector.detectChanges();\n      this.loading = false;\n    });\n  }\n\n  closemodel() {\n    this.selectedUsers = [];\n    this.addGroupModel = false;\n    this.AllUsers.forEach(element => element['selected'] = false);\n    this.changeEvent.emit(\"THREAD\");\n    this.changeDetector.detectChanges();\n  }\n\n  backScreen() {\n    this.changeEvent.emit(\"CHAT\");\n  }\n\n}\n","<div class=\"newChatContainer\">\n  <div class=\"newChatHeader\">\n    <div class=\"newChatLeft hand\">\n      <img src=\"./assets/images/arrow-left.png\" class=\"arrowLeft hand\" (click)=\"backScreen()\" />\n      <p class=\"newChatHeading\">Create Group Chat</p>\n    </div>\n    <div class=\"newChatRight hand\" (click)=\"openDialog(content)\">\n      <img class=\"goodMark\" src=\"./assets/images/checkmark.png\" />\n    </div>\n  </div>\n  <div class=\"newChatSearchBox\">\n    <div class=\"input-group\">\n      <div class=\"input-group-prepend\">\n        <img src=\"./assets/images/search.png\" class=\"seacrchIcon\" />\n      </div>\n      <input type=\"text\" class=\"form-control\" placeholder=\"Search\" #searchInput />\n    </div>\n  </div>\n  <div class=\"newGrpChat\">\n    <p [ngClass]=\"groupnameError ? 'text-danger' :'cntct'\">\n      {{groupnameError ? groupnameError :'Select Contacts'}}\n    </p>\n  </div>\n  <div class=\"newListContainer max-height\">\n    <ng-container *ngFor=\"let user of AllUsers\">\n      <div class=\"contactListCard hand\" (click)=\"selectContact(user)\">\n        <div class=\"contactListCardLeft\">\n          <img src=\"./assets/images/user.png\" class=\"ListCardIcon\" />\n          <p class=\"ListCardName text-capitalize pb-1\">{{user.full_name}}</p>\n        </div>\n        <div class=\"selectuser contactListCardRight\" *ngIf=\"user['selected']\">\n          <img src=\"./assets/images/checkmark-circle.png\" class=\"ListCardButton\" />\n        </div>\n      </div>\n    </ng-container>\n  </div>\n</div>\n\n<div id=\"myModal\" class=\"modal\" *ngIf=\"addGroupModel\">\n  <div class=\"createChatPopup\">\n    <div class=\"chatPopupContent groupPopup\">\n      <div class=\"modalHeader\">\n        <p class=\"modalHeading\">Create a group chat</p>\n        <img src=\"./assets/images/cross.png\" class=\"modalCross hand\" (click)=\"closemodel()\" />\n      </div>\n      <div class=\"modalContent\">\n        <form [formGroup]=\"form\" class=\"w-100\" (submit)=\"addGroup()\">\n          <p class=\"modalContentHeading\">Name your group chat</p>\n          <input type=\"text\" class=\"form-control\" placeholder=\"ex: Deeper team\" formControlName=\"group_title\" />\n          <form-errors [control]=\"form.get('group_title')\"></form-errors>\n        </form>\n      </div>\n      <button type=\"submit\" class=\"btn doneButton mt-3\" (click)=\"addGroup()\" [disabled]=\"loading\">\n        DONE\n      </button>\n    </div>\n  </div>\n</div>\n\n<ng-template #content let-modal>\n  <div class=\"createChatPopup\">\n    <div class=\"chatPopupContent\">\n      <div class=\"modalHeader\">\n        <p class=\"modalHeading\">Create a group chat</p>\n        <img src=\"./assets/images/cross.png\" class=\"modalCross hand\" (click)=\"modal.dismiss('Cross click')\" />\n      </div>\n      <div class=\"modalContent\">\n        <form [formGroup]=\"form\" class=\"w-100\" (submit)=\"addGroup()\">\n          <p class=\"modalContentHeading\">Name your group chat</p>\n          <input type=\"text\" class=\"form-control\" placeholder=\"ex: Deeper team\" formControlName=\"group_title\" />\n          <form-errors [control]=\"form.get('group_title')\"></form-errors>\n        </form>\n      </div>\n      <button type=\"submit\" class=\"btn doneButton mt-3\" (click)=\"addGroup()\" [disabled]=\"loading\">\n        DONE\n      </button>\n    </div>\n  </div>\n</ng-template>","import { ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { fromEvent } from 'rxjs/internal/observable/fromEvent';\nimport { debounceTime } from 'rxjs/internal/operators/debounceTime';\nimport { distinctUntilChanged } from 'rxjs/internal/operators/distinctUntilChanged';\nimport { map } from 'rxjs/internal/operators/map';\nimport { FindArrayObject } from 'src/app/shared/helpers/helpersFunctions';\nimport { BaseService } from 'src/app/shared/services/base.service';\nimport { PubsubService } from 'src/app/shared/services/pubsub.service';\nimport { StorageService } from 'src/app/shared/services/storage.service';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport FormsHandler from 'src/app/shared/FormsHandler/FormsHandler';\nimport { MessageModel, onlineOfflineModel, receiptModel, typingModel } from 'src/app/shared/models/chat';\n\n@Component({\n  selector: 'chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss']\n})\nexport class ChatComponent implements OnInit {\n  editGroupModel = false;\n  groupForm: FormGroup;\n  loading = true;\n  AllGroups = [];\n  activeChat: any = {\n    chatHistory: []\n  };\n  message: string = '';\n  currentUserName = StorageService.getAuthUsername();\n  currentUserData = StorageService.getUserData();\n  @ViewChild('messageInputElement') messageInputElement: ElementRef;\n  threadType = 'THREAD';\n  fileToSend: File = null;\n  isActiveThread = false;\n  popupimagesrc = '';\n  screen = 'CHAT';\n  sdkconnected = false;\n  setToActive = null;\n  constructor(\n    public pubsubService: PubsubService,\n    private svc: BaseService,\n    private router: Router,\n    private elRef: ElementRef,\n    public dialog: MatDialog,\n    private toastr: ToastrService,\n    private changeDetector: ChangeDetectorRef,\n    private _fb: FormBuilder\n  ) {\n    this.groupForm = this._fb.group({\n      'group_id': new FormControl('', [Validators.required]),\n      'group_title': new FormControl('', [Validators.required, Validators.maxLength(100)]),\n    }, { updateOn: 'change' });\n    this.pubsubService.initConfigure();\n  }\n\n  ngOnInit() {\n    this.pubsubService.Client.on(\"connect\", response => {\n      console.error(\"connect\", response);\n      this.sdkconnected = true;\n      if (!this.AllGroups.length) {\n        this.getAllGroups();\n      }\n    });\n\n    this.pubsubService.Client.on(\"disconnect\", (response) => {\n      console.log(\"disconnect\", response);\n      this.sdkconnected = false;\n    });\n\n    document.addEventListener(\"keyup\", event => {\n      if (event.code === 'Enter') {\n        this.sendTextMessage();\n      }\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.pubsubService.Client.on(\"authentication_error\", (res: any) => {\n      console.log(\"authentication_error\", res);\n    });\n\n\n    this.pubsubService.Client.on(\"offline\", response => {\n      console.log(\"offline\", response);\n      this.setOfflineStatus(response);\n    });\n\n    this.pubsubService.Client.on(\"online\", (response: onlineOfflineModel) => {\n      console.log(\"online\", response);\n      this.setOnlineStatus(response);\n    });\n\n    this.pubsubService.Client.on(\"message\", response => {\n      response = JSON.parse(JSON.stringify(response));\n      console.trace(\"new message\", response);\n      if (response.type == 'text' || response.type == 'file' || response.type == 'image' || response.type == 'audio' || response.type == 'video') {\n        this.scroll();\n        const chatthread = this.findChatThread(response.to);\n        const isActiveThread = chatthread.id == this.activeChat.id;\n        chatthread['unReadCount'] = isActiveThread ? 0 : (chatthread['unReadCount'] || 0) + 1;\n        response = this.messageBy(chatthread, response);\n        response['isRead'] = isActiveThread;\n        response['auto_created'] = chatthread['auto_created'];\n        chatthread['lastMessage'] = response.content;\n        chatthread['time'] = new Date(response.id);\n        chatthread['type'] = response.type;\n        this.pushMessage(chatthread, response);\n        this.readSingleMessage(response, isActiveThread);\n        setTimeout(() => {\n          this.AllGroups.sort((a, b) => {\n            return a.id == chatthread.id ? -1 : 1;\n          });\n        }, 500);\n        this.changeDetector.detectChanges();\n      } else if (response.type == 'typing') {\n        this.setUserTyping(response);\n      } else if (response.receiptType == 3) {\n        let chName = response.topic || response.to;\n        if (response.to != undefined)\n          chName = response.to;\n        const chatthread = this.findChatThread(chName);\n        let message = FindArrayObject(chatthread.chatHistory, 'id', response.messageId);\n        if (message) {\n          message['readCount'] = (message['readCount'] || 0) + 1\n        }\n        this.changeDetector.detectChanges();\n      }\n    });\n\n    this.pubsubService.Client.on(\"subscribed\", response => {\n      console.log(\"subscribed\", response);\n      this.setOnlineStatusforSubscribe(response);\n    });\n\n    if (this.messageInputElement) {\n      fromEvent(this.messageInputElement.nativeElement, 'input')\n        .pipe(\n          map((event: Event) => (event.target as HTMLInputElement).value),\n          debounceTime(3000),\n          distinctUntilChanged()\n        ).subscribe(data => {\n          const sendMessage: MessageModel = {\n            status: 0,\n            size: 0,\n            type: \"typing\",\n            isGroupMessage: false,\n            from: StorageService.getAuthUsername(),\n            content: '0',\n            id: new Date().getTime().toString(),\n            key: this.activeChat.channel_key,\n            to: this.activeChat.channel_name,\n            date: new Date().getTime(),\n          }\n          this.pubsubService.sendMessage(sendMessage);\n        });\n    }\n  }\n\n  deleteGroup(group) {\n    this.loading = true;\n    const playload = {\n      group_id: group.id\n    }\n    this.svc.post('DeleteGroup', playload).subscribe(v => {\n      this.changeDetector.detectChanges();\n      if (v && v.status == 200) {\n        this.loading = false;\n        this.getAllGroups();\n        this.toastr.success('The group has been deleted!', 'Success!');\n      } else {\n        console.error(v.message);\n        alert(v.message);\n        this.changeDetector.detectChanges();\n      }\n    });\n  }\n\n  openModal(group) {\n    if (group.auto_created) {\n      alert('Can not change One to one group title');\n      return;\n    }\n    group['group_id'] = group.id\n    this.groupForm.reset(group);\n    this.editGroupModel = true;\n    this.changeDetector.detectChanges();\n  }\n\n  editGroup() {\n    FormsHandler.validateForm(this.groupForm);\n    console.error(\"this.groupForm.\", this.groupForm.invalid);\n    if (this.groupForm.invalid || this.loading) return;\n    const playload = this.groupForm.value;\n    this.loading = true;\n    this.svc.post('RenameGroup', playload).subscribe(v => {\n      if (v && v.status == 200) {\n        this.getAllGroups();\n        this.editGroupModel = false;\n        this.loading = false;\n        this.toastr.success('The group has been updated!', 'Success!');\n      }\n    });\n  }\n\n  getAllGroups() {\n    this.loading = true;\n    this.svc.get('AllGroups').subscribe(v => {\n      this.loading = false;\n      if (v && v.status == 200) {\n        this.AllGroups = v.groups.map(chat => {\n          if (chat['participants'].length) {\n            chat['participants'] = chat['participants'].map(r => {\n              r['username'] = r['username'] || r['full_name'];\n              return r;\n            });\n          }\n          chat['chatTitle'] = chat.auto_created ? chat['participants'][0]['full_name'] : chat.group_title;\n          chat['Online'] = false;\n          chat['key'] = chat.channel_key;\n          chat['channel'] = chat.channel_name;\n          chat['chatHistory'] = [];\n          chat['TotalParticipants'] = chat['participants'].length;\n          chat['onlineParticipants'] = 1;\n          chat['isSeen'] = true;\n          return chat;\n        });\n        console.error(\"this.activeChat.chatTitle\", this.activeChat);\n        if (!this.activeChat.chatTitle) {\n          this.activeChat = this.AllGroups.length ? this.AllGroups['0'] : {};\n        }\n        if (this.setToActive) {\n          const indexchat = this.AllGroups.find(group => group.id == this.setToActive)\n          this.activeChat = indexchat ? indexchat : this.AllGroups['0'];\n          this.setToActive = null;\n        }\n        this.isActiveThread = true;\n        this.pubsubService.subscribeToChat(this.AllGroups);\n      }\n      setTimeout(() => {\n        this.sortThread();\n      }, 500);\n      this.changeDetector.detectChanges();\n    });\n  }\n  checkFileType(content: any) {\n    let preview = content.includes('text/plain') ? ('./assets/images/txt.png') : content.includes('/pdf') ? ('./assets/images/pdf.png') : content.includes('/json') ? ('./assets/images/json.png') : 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Icon-doc.svg/810px-Icon-doc.svg.png';\n    if (content.includes('video/'))\n      preview = './assets/images/video.png';\n    if (content.includes('audio/'))\n      preview = './assets/images/audio.png';\n    return preview;\n  }\n  fileType(content: any) {\n    return content.split(\";\")[0].split(\":\")[1]\n  }\n  findChatThread(channel) {\n    return FindArrayObject(this.AllGroups, 'channel_name', channel);\n  }\n\n  setActiveChat(group) {\n    this.isActiveThread = group.id == this.activeChat.id;\n    if (!this.isActiveThread) this.message = '';\n    this.activeChat = group;\n    group['unReadCount'] = 0;\n    this.screen = 'MSG';\n    this.scroll();\n    group.chatHistory = group.chatHistory || [];\n    this.readsendMessage(group.chatHistory);\n    this.changeDetector.detectChanges();\n  }\n\n  setchat(chat) {\n    this.setToActive = chat.id;\n  }\n\n  readSingleMessage(response, isActiveThread) {\n    if (response.from == this.currentUserName || !isActiveThread) return;\n    const chatobj: receiptModel = {\n      messageId: response.id,\n      receiptType: 3,\n      from: StorageService.getAuthUsername(),\n      key: response.key,\n      to: response.to,\n      date: new Date().getTime()\n    };\n    this.pubsubService.readSingleMessage(chatobj);\n  }\n\n  readsendMessage(chatHistory) {\n    const unreadchatHistory = chatHistory.filter(chat => !chat.isRead).map(chat => {\n      const chatobj: receiptModel = {\n        messageId: chat.id,\n        receiptType: 3,\n        from: StorageService.getAuthUsername(),\n        key: chat.key,\n        to: chat.to,\n        date: new Date().getTime()\n      };\n      return chatobj;\n    });\n    if (unreadchatHistory.length) this.pubsubService.readMessage(unreadchatHistory);\n    chatHistory = chatHistory.map(chat => {\n      chat.isRead = true;\n      return chat;\n    });\n  }\n\n  handleFileInput(files: FileList) {\n    this.fileToSend = files.item(0);\n  }\n\n  invalidSize() {\n    return ((this.fileToSend.size / 1024) > 6144);\n  }\n\n  removeAttachment() {\n    this.fileToSend = null;\n  }\n\n  getFileType(fileR) {\n    let type = \"file\";\n    const filetype = fileR.type;\n    if (filetype.includes('image')) type = \"image\";\n    else if (filetype.includes('audio')) type = \"audio\";\n    else if (filetype.includes('video')) type = \"video\";\n    return type;\n  }\n\n  sendTextMessage() {\n    if ((!(/\\S/.test(this.message))) && !this.fileToSend) {\n      return;\n    } else if (this.message.length > 400) {\n      this.toastr.error(\"Message can not be more than 400 characters\", \"Opps!\")\n      return;\n    } else if (this.fileToSend && this.invalidSize()) {\n      this.toastr.error(\"The maximum size of file should be 6MBs.\", \"Opps!\")\n      this.fileToSend = null;\n      return;\n    }\n    this.scroll();\n    if (!this.message && !this.fileToSend) return;\n    if (this.fileToSend) {\n      var option = {\n        id: new Date().getTime().toString(),\n        from: StorageService.getAuthUsername(),\n        topic: this.activeChat.channel_name,\n        to: this.activeChat.channel_name,\n        key: this.activeChat.channel_key,\n        type: this.getFileType(this.fileToSend),\n        date: new Date().getTime(),\n      };\n      this.pubsubService.Client.SendFile(this.fileToSend, option);\n      this.fileToSend = null;\n    }\n    if (!this.message) return;\n    const sendMessage: MessageModel = {\n      status: 1,\n      size: 0,\n      type: \"text\",\n      isGroupMessage: false,\n      from: StorageService.getAuthUsername(),\n      content: this.message,\n      id: new Date().getTime().toString(),\n      date: new Date().getTime(),\n      key: this.activeChat.channel_key,\n      to: this.activeChat.channel_name\n    }\n    this.pubsubService.sendMessage(sendMessage);\n    this.message = '';\n    this.scroll();\n    if (!(this.AllGroups.length && this.activeChat.id == this.AllGroups[0].id)) {\n      this.sortThread();\n    }\n  }\n\n  typingmessage($event) {\n    if ($event.key === \"Enter\") {\n      this.sendTextMessage();\n      return;\n    }\n    const sendMessage: MessageModel = {\n      status: 0,\n      size: 0,\n      type: \"typing\",\n      isGroupMessage: false,\n      from: StorageService.getAuthUsername(),\n      content: \"1\",\n      id: new Date().getTime().toString(),\n      key: this.activeChat.channel_key,\n      to: this.activeChat.channel_name,\n      date: new Date().getTime(),\n    }\n    this.pubsubService.sendMessage(sendMessage);\n  }\n\n  setOnlineStatusforSubscribe(response: onlineOfflineModel) {\n    const indexchat = this.findChatThread(response.channel);\n    if (indexchat) {\n      let onlineNumbers = [...new Set(response.who.map(n => n.username))]\n      indexchat['onlineParticipants'] = onlineNumbers && onlineNumbers.length || 1;\n      if (indexchat && indexchat.auto_created) indexchat['Online'] = onlineNumbers.length > 1\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  setOnlineStatus(response: onlineOfflineModel) {\n    let indexchat = this.findChatThread(response.channel);\n    if (!indexchat) return;\n    if (indexchat.auto_created) indexchat['Online'] = true;\n    if (!indexchat.auto_created) {\n      indexchat['onlineParticipants'] = indexchat['onlineParticipants'] < indexchat['TotalParticipants'] ? indexchat['onlineParticipants'] + 1 : indexchat['onlineParticipants'];\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  setOfflineStatus(response: onlineOfflineModel) {\n    const indexchat = this.findChatThread(response.channel);\n    if (indexchat && indexchat.auto_created) indexchat['Online'] = false;\n    if (!indexchat.auto_created) {\n      indexchat['onlineParticipants'] = indexchat['onlineParticipants'] > 2 ? indexchat['onlineParticipants'] - 1 : 1;\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  setUserTyping(response: typingModel) {\n    if (response.from == this.currentUserData.ref_id) return;\n    let indexchat = FindArrayObject(this.AllGroups, 'channel_name', response.to);\n    let typinguser = indexchat[\"participants\"].find(e => e.ref_id == response.from);\n    if (response.content == '1') {\n      indexchat['TypingUserList'] = (indexchat['TypingUserList'] || []);\n      indexchat['TypingUserList'] = [...new Set([typinguser])];\n    } else if (response.content == '0') {\n      indexchat['TypingUserList'] = indexchat['TypingUserList'].filter(e => e.ref_id != response.from);\n    }\n    indexchat['userTyping'] = indexchat['TypingUserList'].length && response.content != '0';\n    let nameList = indexchat['TypingUserList'].map(userObj => userObj.full_name);\n    if (nameList.length == 1) {\n      indexchat['userTypingContent'] = nameList + ' ' + 'is typing...';\n    } else if (nameList.length == 2) {\n      indexchat['userTypingContent'] = nameList.join() + ' ' + 'are typing...';\n    } else if (nameList.length > 2) {\n      indexchat['userTypingContent'] = nameList.filter((i, j) => j < 2).join() + ' ' + 'and other are typing...';\n    }\n    // if (indexchat && indexchat.auto_created) {\n    //   indexchat['userTyping'] = response.content != '0' && response.from != this.currentUserData.ref_id;\n    //   indexchat['userTypingContent'] = (response.content == '1') ? sender + \" is typing...\" : \"\";\n    // } else if (indexchat && !indexchat.auto_created) {\n    //   this.setMultiUserTyping(response, typinguser, indexchat);\n    // }\n    this.changeDetector.detectChanges();\n  }\n\n  setMultiUserTyping(response, typinguser, indexchat) {\n    if (response.content == '1') {\n      indexchat['TypingUserList'] = [...new Set(typinguser)];\n    } else if (response.content == '0') {\n      indexchat['TypingUserList'] = indexchat['TypingUserList'].filter(e => e.ref_id != response.from);\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  scroll(): void {\n    setTimeout(() => {\n      this.elRef.nativeElement.querySelector('.messagesBox').scrollTop = this.elRef.nativeElement.querySelector('.messagesBox').scrollHeight;\n    }, 500);\n  }\n\n  changeSidebar($event) {\n    this.threadType = $event;\n    if (this.threadType == 'THREAD') {\n      this.getAllGroups();\n    }\n  }\n\n  newChat() {\n    this.threadType = 'CHAT';\n    this.changeDetector.detectChanges();\n  }\n\n  logout() {\n    this.pubsubService.Disconnect();\n    StorageService.clearLocalStorge();\n    this.router.navigate(['login']);\n  }\n\n  sortThread() {\n    if (this.activeChat.id) {\n      this.AllGroups.sort((a, b) => {\n        return a.id == this.activeChat.id ? -1 : 1;\n      });\n    }\n  }\n\n  messageBy(chatthread, response) {\n    if (this.isShowName(chatthread, response)) {\n      const messageByObj = FindArrayObject(chatthread.participants, 'ref_id', response.from);\n      response['messageBy'] = messageByObj && messageByObj.full_name || '';\n    }\n    return response;\n  }\n\n  isShowName(chatthread, response) {\n    if (chatthread['chatHistory'].length && response.from) {\n      const previourmessage = chatthread['chatHistory'][chatthread['chatHistory'].length - 1];\n      return previourmessage.from != response.from;\n    }\n    return true;\n  }\n\n  pushMessage(thread, response) {\n    let newResponse = {};\n    newResponse = JSON.parse(JSON.stringify(response));\n    if (response.type == 'text' || !response.content) {\n      thread['chatHistory'].push(newResponse);\n    } else {\n      var foundIndex = thread.chatHistory.findIndex(x => x.id == response.id);\n      thread.chatHistory[foundIndex] = response;\n    }\n  }\n\n  getLastMessage(group): string {\n    const isactivethread = group.id == this.activeChat.id;\n    if (!isactivethread && group.unReadCount) {\n      return \"Misread messages\"\n    } else if (group.type != 'text') {\n      return group.type;\n    }\n    return group.lastMessage;\n  }\n\n  openImage(imagesrc): void {\n    this.popupimagesrc = imagesrc;\n    this.changeDetector.detectChanges();\n  }\n\n  closeImage() {\n    this.popupimagesrc = null;\n    this.changeDetector.detectChanges();\n  }\n\n  closeModal() {\n    this.editGroupModel = false;\n    this.changeDetector.detectChanges();\n  }\n\n  isHideThread() {\n    return this.isMobile() ? this.screen != 'CHAT' : false;\n  }\n\n  isHideChatScreen() {\n    return this.isMobile() ? this.screen != 'MSG' : false;\n  }\n\n  backScreen() {\n    this.threadType = \"THREAD\";\n    this.screen = \"CHAT\";\n    this.changeDetector.detectChanges();\n  }\n\n  isMobile() {\n    return window.innerWidth < 768\n  }\n\n}","<div class=\"row dashboardContainer\">\n  <!-- popup end -->\n  <div class=\"col-sm-4 leftSide\" [hidden]=\"isHideThread()\">\n    <div class=\"leftSideHeader\">\n      <img src=\"./assets/images/logo2.png\" class=\"dashboardLogo\" />\n    </div>\n    <div class=\"leftSideListContainer\">\n\n      <ng-container *ngIf=\"threadType === 'THREAD'\">\n        <div style=\"align-items: center; margin:0px\" class=\"leftSectionHeader\">\n          <h4 class=\"leftHeading\">CHATROOMS</h4>\n          <h4 class=\"createText\" (click)=\"newChat()\">Create +</h4>\n        </div>\n        <!-- empty chats section start-->\n        <div class=\"leftSectionEmptyContainer\" *ngIf=\"!AllGroups.length && !loading\">\n          <p class=\"noAvailableText\">No Available ChatRoom</p>\n          <p class=\"tapText\">Tap and hold on any message to star it, so you can easily find it later.</p>\n        </div>\n        <!-- empty chats section end-->\n\n        <div class=\"listingContainer fullHeight\">\n          <div class=\"chatListContainer noHorizontalPadding\">\n            <ng-container *ngFor=\"let group of AllGroups\">\n              <div class=\"chatsCardContainer hand\" (click)=\"setActiveChat(group)\">\n                <div class=\"chatsCardLeft\" >\n                  <div class=\"chatsNameWrap\">\n                    <p class=\"chatName text-capitalize\">{{group.chatTitle}}</p>\n                    <span class=\"unreadBadge\" *ngIf=\"group.unReadCount\"> {{group.unReadCount}}</span>\n                  </div>\n                  <p class=\"misreadMsg\" *ngIf=\"group.userTyping\">{{group?.userTypingContent}}</p>\n\n                  <p class=\"misreadMsg text-capitalize\" *ngIf=\"!group.userTyping\"\n                    [ngClass]=\"group.unReadCount ? 'misreadMsg':'readMsg'\">\n                    {{ getLastMessage(group) }}\n                  </p>\n\n                </div>\n                <div class=\"chatsCardRight mr-1\">\n                  <div class=\"dropdown mt-1\" style=\"align-self: flex-end\">\n                    <img src=\"./assets/images/more.png\" class=\"moreIcon\" />\n                    <div class=\"dropdown-content\">\n                      <a class=\"edit\" (click)=\"openModal(group)\">EDIT GROUP NAME</a>\n                      <a class=\"delete\" (click)=\"deleteGroup(group)\">DELETE</a>\n                    </div>\n                  </div>\n                  <p [ngClass]=\"group.Online ? 'cardOnlineStatus' :'cardOfflineStatus'\" *ngIf=\"group.auto_created\">\n                    {{group.Online\n                    ?\n                    'Online' :'Offline'}}\n                  </p>\n                  <p class=\"cardOnlineStatus\" *ngIf=\"!group.auto_created\">\n                    {{ group.onlineParticipants + '/' + group.TotalParticipants }} Online\n\n                  </p>\n\n                </div>\n              </div>\n            </ng-container>\n          </div>\n        </div>\n\n      </ng-container>\n\n      <ng-container *ngIf=\"threadType === 'GROUP'\">\n        <add-group (setActiveChat)=\"setchat($event)\" (changeEvent)=\"changeSidebar($event)\"></add-group>\n      </ng-container>\n\n      <ng-container *ngIf=\"threadType === 'CHAT'\">\n        <new-chat (setActiveChat)=\"setchat($event)\" (changeEvent)=\"changeSidebar($event)\"></new-chat>\n      </ng-container>\n\n\n    </div>\n    <div class=\"leftSideFooter\">\n      <div class=\"logoutContainer\" (click)=\"logout()\">\n        <img src=\"./assets/images/log-out.png\" class=\"logoutLogo\" />\n        <span class=\"logoutText\">LOG OUT {{currentUserData.full_name}}</span>\n        <span class=\"ml-1\" [ngClass]=\"sdkconnected ? 'online' :'offline' \"></span>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-sm-8 rightSide\" [hidden]=\"isHideChatScreen()\">\n    <div class=\"rightSideHeader alignBottom chatholder\">\n      <div style=\"display: flex;flex-direction: row;align-items: center\">\n        <img src=\"./assets/images/arrow-left.png\" class=\"arrowLeft hand\" (click)=\"backScreen()\" *ngIf=\"isMobile()\" />\n        <p class=\"roomNameText text-capitalize\" *ngIf=\"activeChat.chatTitle\">{{activeChat.chatTitle}}\n        </p>\n      </div>\n    </div>\n\n    <!-- right side starts -->\n    <div class=\"messagesBox\">\n      <ng-container *ngIf=\"activeChat.chatTitle\">\n        <ng-container *ngFor=\"let chat of activeChat['chatHistory']\">\n          <div [ngClass]=\"chat.from == currentUserName ? 'senderChatContainer' :'receiverChatContainer'\">\n\n            <h4 class=\"msgBy text-capitalize\" *ngIf=\"chat.from != currentUserName\">{{chat.messageBy}}</h4>\n            <!-- first messgae from same person -->\n            <div class=\"bubbleContainer\">\n\n              <div class=\"bubble\" *ngIf=\"chat.type =='text'\">\n                <p class=\"msgText\">{{chat.content}}</p>\n              </div>\n\n              <div class=\"imgbubble\" *ngIf=\"chat.type =='image'\">\n                <mat-spinner [diameter]=\"30\" *ngIf=\"!chat.content\"></mat-spinner>\n                <img [src]=\"chat.content | safeUrl\" class=\"w-100 msgImage img-thumbnail img-fluid\"\n                  (click)=\"openImage(chat.content)\" />\n              </div>\n\n              <div class=\"imgbubble file-attachment\" *ngIf=\"chat.type !='text' && chat.type !='image'\">\n                <mat-spinner [diameter]=\"30\" *ngIf=\"!chat.content\"></mat-spinner>\n                <ng-container *ngIf=\"chat.content\">\n                  <img [src]=\"checkFileType(chat.content)\" class=\"w-100 msgImage thumbnail img-fluid\" />\n                  <a [href]=\"chat.content | safeUrl\" download>Download</a>\n                </ng-container>\n              </div>\n\n              <span class=\"time\">\n                <ng-container *ngIf=\"chat.readCount && chat.from == currentUserName\">\n                   Read\n                  <br />\n                </ng-container>\n                <span> {{chat.date | date:\"shortTime\"}} </span>\n              </span>\n            </div>\n\n          </div>\n        </ng-container>\n      </ng-container>\n\n      <div class=\"chatRoomContainer\" *ngIf=\"!activeChat.chatTitle && !loading\">\n        <div style=\"height: 100%;\" class=\"listingContainer\">\n          <!-- empty list container start -->\n          <div class=\"emptyListContainer\">\n            <div class=\"emptyListTop\">\n              <div></div>\n              <img src=\"./assets/images/shipping.png\" class=\"shippingIcon\" />\n              <div class=\"noConvoTextWrapper\">\n                <p class=\"noConvoText\">No Conversation Yet</p>\n                <p style=\"max-width: 200px;\" class=\"noConvoSub\">\n                  Tap and hold on any message to star it, so you can easily find\n                  it later.\n                </p>\n              </div>\n            </div>\n            <div class=\"emptyListBottom\">\n              <button type=\"submit\" class=\"btn newChatButton\" (click)=\"newChat()\">\n                NEW CHAT\n              </button>\n              <button type=\"submit\" class=\"btn refreshButton\" (click)=\"getAllGroups()\">\n                REFRESH\n              </button>\n            </div>\n          </div>\n          <!-- empty list container end -->\n        </div>\n      </div>\n    </div>\n\n    <div class=\"sendInputContainer\" [hidden]=\"!activeChat.chatTitle\">\n      <div class=\"sendInputWrapper\">\n\n        <ng-container *ngIf=\"fileToSend\">\n          <div class=\"w-100\">\n            <img src=\"./assets/images/Document.png\" class=\"attachmentItemIcon ml-4\" />\n            <span class=\"ml-2\">{{fileToSend.name}}</span>\n            <span class=\"font-weight-bolder hand ml-2 text-danger\" (click)=\"removeAttachment()\">X</span>\n          </div>\n        </ng-container>\n\n        <input #messageInputElement type=\"text\" class=\"form-control\" placeholder=\"Type to reply..\"\n          (keyup)=\"typingmessage($event)\" [(ngModel)]=\"message\" *ngIf=\"!fileToSend\" />\n\n        <div class=\"sendInputButtonContainer dropup \" style=\"border-right: 1px solid #ebedf4\">\n          <img src=\"./assets/images/attachment.png\" data-toggle=\"dropdown\" class=\"sendIcon dropdown-toggle\" />\n          <div class=\"attachmentpopup dropdown-menu dropdown-menu-right selectOptionContainer\">\n            <div class=\"attachmentPopHeader mx-3\">\n              <p class=\"attachmentHeading\">ADD ATTACHMENT</p>\n              <p class=\"attachmentHeading\">X</p>\n            </div>\n            <div class=\"attachmentPopContent\" (click)=\"fileuploader.click()\">\n              <div class=\"attachmentTool\">\n                <div class=\"attachmentToolIcon\">\n                  <img src=\"./assets/images/Document.png\" class=\"attachmentItemIcon\" />\n                </div>\n                <input #fileuploader class=\"d-none\" type=\"file\" id=\"fileinput\"\n                  (change)=\"handleFileInput($event.target.files)\" />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"sendInputButtonContainer\" (click)=\"sendTextMessage()\">\n          <img src=\"./assets/images/send.png\" class=\"sendIcon\" />\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n\n\n<!-- The Modal -->\n<div id=\"myModal\" class=\"modal\" *ngIf=\"popupimagesrc\">\n  <span class=\"close\" (click)=\"closeImage()\">&times;</span>\n  <img class=\"modal-content\" id=\"img01\" [src]=\"popupimagesrc | safeUrl\">\n</div>\n\n<div id=\"myModal\" class=\"modal\" *ngIf=\"editGroupModel\">\n  <div class=\"createChatPopup \">\n    <div class=\"chatPopupContent groupPopup\">\n      <div class=\"modalHeader\">\n        <p class=\"modalHeading\">Edit group </p>\n        <img src=\"./assets/images/cross.png\" class=\"modalCross hand\" (click)=\"closeModal()\" />\n      </div>\n      <div class=\" modalContent\">\n        <form [formGroup]=\"groupForm\" class=\"w-100\" (submit)=\"editGroup()\">\n          <p class=\"modalContentHeading\">Name your group </p>\n          <input type=\"text\" class=\"form-control\" placeholder=\"ex: Deeper team\" formControlName=\"group_title\" />\n          <form-errors [control]=\"groupForm.get('group_title')\"></form-errors>\n        </form>\n      </div>\n      <button type=\"submit\" class=\"btn doneButton mt-3\" (click)=\"editGroup()\" [disabled]=\"loading\">\n        DONE\n      </button>\n    </div>\n  </div>\n</div>","import { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { fromEvent } from 'rxjs/internal/observable/fromEvent';\nimport { debounceTime } from 'rxjs/internal/operators/debounceTime';\nimport { distinctUntilChanged } from 'rxjs/internal/operators/distinctUntilChanged';\nimport { map } from 'rxjs/internal/operators/map';\nimport { mergeMap } from 'rxjs/internal/operators/mergeMap';\nimport { BaseService } from 'src/app/shared/services/base.service';\nimport { PubsubService } from 'src/app/shared/services/pubsub.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { startWith } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'new-chat',\n  templateUrl: './new-chat.component.html',\n  styleUrls: ['./new-chat.component.scss']\n})\nexport class NewChatComponent implements OnInit {\n  loading = true;\n  AllUsers = [];\n  CopyAllUsers = [];\n  @Output() changeEvent = new EventEmitter<string>();\n  @ViewChild('searchInput') searchInput: ElementRef;\n  @Output() setActiveChat = new EventEmitter<string>();\n\n\n  constructor(\n    public pubsubService: PubsubService,\n    private svc: BaseService,\n    public dialog: MatDialog,\n    private toastr: ToastrService,\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit(): void {\n    if (this.searchInput) {\n      fromEvent(this.searchInput.nativeElement, 'input')\n        .pipe(\n          map((event: Event) => (event.target as HTMLInputElement).value),\n          debounceTime(1000),\n          distinctUntilChanged(),\n          startWith(''),\n          mergeMap(value => {\n            this.loading = true;\n            if (!value) {\n              const data = {\n                sorting: \"ORDER BY full_name ASC\",\n                search_field: \"full_name\",\n                search_value: '',\n                condition: \"contains\",\n              }\n              return this.svc.post('AllUsers', data).pipe(map(res => {\n                if(!(res.users && res.users.length))\n                {\n                  res.users = [];\n                }\n                this.CopyAllUsers = [...res.users];\n                return res;\n              }))\n            }\n            const temparaay = [...this.CopyAllUsers];\n            const filteruser = temparaay.filter(user => {\n              let searchValue = value.toLowerCase();\n              if (user.full_name.toLowerCase().startsWith(searchValue)) { return -1; }\n            });\n            const returnData = {\n              users: filteruser\n            }\n            return of(returnData)\n          })\n        )\n        .subscribe(res => {\n          this.loading = false;\n          if (!res.users || !res.users.length) {\n            this.toastr.error(\"No contacts found\", \"Opps!\");\n            this.AllUsers = [];\n          } else {\n            this.AllUsers = res.users;\n          }\n        })\n    }\n  }\n\n\n  backScreen() {\n    this.changeEvent.emit(\"THREAD\");\n  }\n\n  addGroupEvent() {\n    this.changeEvent.emit(\"GROUP\");\n  }\n\n  startChat(user) {\n    if (this.loading) return;\n    this.loading = true;\n    let data = {\n      group_title: user.full_name,\n      participants: [user.user_id],\n      auto_created: 1\n    }\n    this.svc.post('CreateGroup', data).subscribe(v => {\n      if (v && v.status == 200) {\n        let subscribedata = {\n          ...v.group,\n          key: v.group['channel_key'],\n          channel: v.group['channel_name'],\n        };\n        let data = [];\n        data.push(subscribedata)\n        this.pubsubService.subscribeToChat(data);\n        this.changeEvent.emit(\"THREAD\");\n        this.setActiveChat.emit(v.group);\n        this.loading = false;\n      }\n    });\n  }\n\n}\n","<div class=\"newChatHeader\">\n  <div class=\"newChatLeft hand\">\n    <img src=\"./assets/images/arrow-left.png\" class=\"arrowLeft\" (click)=\"backScreen()\" />\n    <p class=\"newChatHeading\">New Chat</p>\n  </div>\n  <div class=\"newChatRight hand\">\n    <img class=\"goodMark\" src=\"./assets/images/checkmark.png\" />\n  </div>\n</div>\n<div class=\"newChatSearchBox\">\n  <div class=\"input-group\">\n    <div class=\"input-group-prepend\">\n      <img src=\"./assets/images/search.png\" class=\"seacrchIcon\" />\n    </div>\n    <input type=\"text\" class=\"form-control\" placeholder=\"Search\" #searchInput />\n  </div>\n</div>\n<div class=\"addGrpChat\">\n  <div class=\"addGrpChatTop hand\" (click)=\"addGroupEvent()\">\n    <img src=\"./assets/images/Group Chat.png\" class=\"addgrpIcon\" />\n    <p class=\"addGrpTitle\">Add Group Chat</p>\n  </div>\n  <div class=\"addGrpSep\"></div>\n  <!-- <div class=\"addGrpSub\"> -->\n  <p class=\"cntct\">Contacts</p>\n  <!-- </div> -->\n</div>\n<div class=\"contactListContainer max-height\">\n\n  <ng-container *ngFor=\"let user of AllUsers\">\n    <div class=\"contactListCard hand\" (click)=\"startChat(user)\">\n      <div class=\"contactListCardLeft\">\n        <img src=\"./assets/images/user.png\" class=\"ListCardIcon\" />\n        <p class=\"ListCardName text-capitalize pb-1\">{{user.full_name}}</p>\n      </div>\n      <div class=\"contactListCardRight justify-content-end pl-1\">\n        <img src=\"./assets/images/chat.png\" class=\" pl-1 ListCardButton hand\" />\n      </div>\n    </div>\n  </ng-container>\n\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from \"@angular/router\";\nimport { StorageService } from 'src/app/shared/services/storage.service';\nimport FormsHandler from '../../shared/FormsHandler/FormsHandler';\nimport { AuthService } from '../../shared/auth/auth.service';\n\n@Component({\n  selector: 'ngx-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n\n  loginForm: FormGroup;\n  loading: boolean = false;\n  formError: string = '';\n\n  constructor(\n    private router: Router,\n    private _fb: FormBuilder,\n    public auth: AuthService,\n  ) { }\n\n  ngOnInit() {\n    if (this.auth.islogin()) {\n      this.router.navigate(['chat']);\n    }\n    this.buildForm();\n    document.addEventListener(\"keyup\", event => {\n      if (event.code === 'Enter') {\n        this.onLogin();\n      }\n    });\n  }\n\n  buildForm() {\n    this.loginForm = this._fb.group({\n      'email': new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]),\n      'password': new FormControl(null, [Validators.required, Validators.minLength(8), Validators.maxLength(14)])\n    }, { updateOn: 'change' });\n  }\n\n  onLogin() {\n    FormsHandler.validateForm(this.loginForm);\n    if (this.loginForm.invalid) return;\n    const saveData = this.loginForm.value;\n    saveData.project_id = '180UJ6W2';\n    this.loading = true;\n    this.formError = null;\n    this.auth.login(saveData).subscribe(v => {\n      this.loading = false;\n      if (v && v.status == 200) {\n        StorageService.setUserData(v);\n        StorageService.setAuthToken(v.auth_token);\n        StorageService.setAuthUsername(v.ref_id);\n        this.router.navigate(['chat']);\n        this.loginForm.reset();\n      } else {\n        this.formError = v.message;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.loginForm.reset();\n  }\n\n}\n","<div class=\"containerWrapper\">\n  <img src=\"./assets/images/logo2.png\" class=\"logo\" />\n  <div class=\"innerWrapper\">\n    <h6 class=\"wrapperHeading\">Sign In</h6>\n    <p class=\"text-danger text-capitalize\">{{formError}}</p>\n    <div class=\"inputsContainer form-group\">\n      <form [formGroup]=\"loginForm\" class=\"w-100\" (submit)=\"onLogin()\">\n        <input type=\"email\" class=\"form-control\" placeholder=\"Email/Username\" formControlName=\"email\" />\n        <form-errors [control]=\"loginForm.get('username')\"></form-errors>\n        <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"password\" />\n        <form-errors [control]=\"loginForm.get('password')\"></form-errors>\n      </form>\n    </div>\n    <div class=\"buttonsContainer\">\n      <button type=\"submit\" class=\"signButton\" (click)=\"onLogin()\" [disabled]=\"loading\">SIGN IN</button>\n      <h5 class=\"bottomLink\"><a routerLink=\"/signup\">SIGN UP</a></h5>\n      <p class=\"text-muted\">Version:2</p>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from \"@angular/router\";\nimport FormsHandler from '../../shared/FormsHandler/FormsHandler';\nimport { AuthService } from '../../shared/auth/auth.service';\nimport { ValidationService } from 'src/app/shared/validators';\nimport { StorageService } from 'src/app/shared/services/storage.service';\n\n@Component({\n  selector: 'sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit {\n\n  loginForm: FormGroup;\n  loading = false;\n  formError;\n\n  constructor(\n    private router: Router,\n    private _fb: FormBuilder,\n    public auth: AuthService\n  ) { }\n\n  ngOnInit() {\n    this.buildForm();\n    document.addEventListener(\"keyup\", event => {\n      if (event.code === 'Enter') {\n        this.onLogin();\n      }\n    });\n  }\n\n  buildForm() {\n    this.loginForm = this._fb.group({\n      'full_name': new FormControl('', [Validators.required, ValidationService.usernameValidator, Validators.minLength(4), Validators.maxLength(50)]),\n      'device_type': new FormControl('web', [Validators.required]),\n      'device_model': new FormControl('web', [Validators.required]),\n      'device_os_ver': new FormControl(navigator.platform, [Validators.required]),\n      'email': new FormControl(null, [ValidationService.emailValidator, Validators.required]),\n      'password': new FormControl(null, [Validators.required])\n    }, { updateOn: 'change' });\n    console.log('this.signupForm', this.loginForm);\n  }\n\n  onLogin() {\n    FormsHandler.validateForm(this.loginForm);\n    if (this.loginForm.invalid) return;\n    const saveData = this.loginForm.value;\n    saveData.project_id = '180UJ6W2';\n    this.loading = true;\n    this.formError = null;\n    this.auth.signup(saveData).subscribe(v => {\n      this.loading = false;\n      if (v && v.status == 200) {\n        StorageService.setUserData(v);\n        StorageService.setAuthToken(v.auth_token);\n        StorageService.setAuthUsername(v.ref_id);\n        this.router.navigate(['chat']);\n        this.loginForm.reset();\n      } else {\n        this.formError = v.message;\n      }\n    });\n  }\n\n}\n","<div class=\"containerWrapper\">\n  <img src=\"./assets/images/logo2.png\" class=\"logo\" />\n  <div class=\"innerWrapper\">\n    <h6 class=\"wrapperHeading\">Sign Up to your account</h6>\n    <p class=\"text-danger text-capitalize\">{{formError }}</p>\n    <div class=\"inputsContainer form-group\">\n      <form [formGroup]=\"loginForm\" class=\"w-100\" (submit)=\"onLogin()\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"Your Username\" formControlName=\"full_name\" />\n        <form-errors [control]=\"loginForm.get('full_name')\"></form-errors>\n        <input type=\"email\" class=\"form-control\" placeholder=\"Your Email\" formControlName=\"email\" />\n        <form-errors [control]=\"loginForm.get('email')\"></form-errors>\n        <input type=\"password\" class=\"form-control\" placeholder=\"Your Password\" formControlName=\"password\" />\n        <form-errors [control]=\"loginForm.get('password')\"></form-errors>\n      </form>\n    </div>\n    <div class=\"buttonsContainer\">\n      <button type=\"submit\" class=\"signButton\" (click)=\"onLogin()\" [disabled]=\"loading\"> SIGN\n        UP</button>\n      <h5 class=\"bottomLink\"><a routerLink=\"/login\">SIGN IN</a></h5>\n    </div>\n  </div>\n</div>","import { FormGroup } from \"@angular/forms\";\n\nexport default class FormsHandler {\n\n    /**\n     * This method is use to validate Form\n     * @param formErrors string \n     * @param form  form instance | object\n     * @return errors as string\n     * @author  Mukhtiar Hussain <muhammad.mukhtiar@norgic.com>\n     **/\n    static validateForm(form) {\n        if (form.valid) {\n            return true;\n        } else {\n            if (form.controls) {\n                for (const field in form.controls) {\n                    const control = form.get(field);\n                    if (control.invalid) {\n                        control.markAsTouched({ onlySelf: true });\n                    }\n                }\n            }\n            return false;\n        }\n    }\n\n    /**\n    * this method is use to validate Form Array\n    * @param formErrors string \n    * @param form  form instance | object\n    * @return errors as string\n    * @author  Mukhtiar Hussain <muhammad.mukhtiar@norgic.com>\n    **/\n    static validateFormArray(form) {\n        if (form.valid) {\n            return true;\n        } else {\n            if (form.controls) {\n                for (const group in form.controls) {\n                    const groupFiled = form.get(group) as FormGroup;\n                    for (const field in groupFiled.controls) {\n                        const control = groupFiled.get(field);\n                        if (control.invalid) {\n                            control.markAsTouched({ onlySelf: true });\n                        }\n                    }\n                }\n            }\n            return false;\n        }\n    }\n\n    static deleteEmptyFileds(data) {\n        if (data) {\n            for (const key in data) {\n                if (data[key] == '' || data[key] == null) {\n                    delete data[key];\n                }\n                if (data[key] && typeof data[key] === 'string') {\n                    data[key] = data[key].trim();\n                }\n            }\n            return data;\n        }\n    }\n\n}","import { Component, Input } from '@angular/core';\nimport { AbstractControlDirective, AbstractControl } from '@angular/forms';\n\n@Component({\n    selector: 'form-errors',\n    template: `\n    <p class='text-danger'>\n     {{hasErrors() ? listOfErrors() : ''}}\n    </p>`,\n})\nexport class GetErrorsComponent {\n\n    private static readonly errorMessages = {\n        'required': () => 'The specified information is required.',\n        'minlength': (params) => 'The min number of characters is ' + params.requiredLength,\n        'maxlength': (params) => 'The max allowed number of characters is ' + params.requiredLength,\n        'pattern': (params) => 'The required pattern is: ' + params.requiredPattern,\n        'years': (params) => params.message,\n        'countryCity': (params) => params.message,\n        'uniqueName': (params) => params.message,\n        'telephoneNumbers': (params) => params.message,\n        'telephoneNumber': (params) => params.message,\n        'invalidNumber': () => 'The specified information is invalid.',\n        'emptySpaces': () => 'The specified information is invalid.',\n        'email': () => 'Email is not valid',\n        'invalidPassword': () => 'Password must be a minimum of 8 characters and contain at least 1 uppercase character and 1 numeric value',\n        'invalidUsernameCharacters': () => 'invalid user name',\n        'invalidInputCharacters': () => 'The specified information is invalid.',\n        'invalidEmailAddress': () => 'Email is not valid',\n    };\n\n    @Input() private control: AbstractControlDirective | AbstractControl;\n\n    hasErrors(): boolean {\n        return this.control && this.control.errors && (this.control.dirty || this.control.touched);\n    }\n\n    listOfErrors() {\n        const errors = Object.keys(this.control.errors).map(field => this.getMessage(field, this.control.errors[field]));\n        return errors.length ? errors[0] : errors;\n    }\n\n    private getMessage(type: string, params: any) {\n        return GetErrorsComponent.errorMessages[type](params);\n    }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatTableModule } from '@angular/material/table';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nconst globalRippleConfig: RippleGlobalOptions = { disabled: true };\nimport {\n  MAT_RIPPLE_GLOBAL_OPTIONS,\n  RippleGlobalOptions,\n  MatRippleModule,\n  MatNativeDateModule,\n} from '@angular/material/core';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n\n@NgModule({\n  imports: [\n    MatFormFieldModule,\n    MatRippleModule,\n    MatDialogModule,\n    MatSortModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    DragDropModule,\n    PortalModule,\n    CommonModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatInputModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatTabsModule,\n    MatButtonModule,\n    MatTableModule,\n    MatSlideToggleModule,\n    OverlayModule,\n    MatTooltipModule,\n    MatProgressBarModule,\n    MatMenuModule,\n    MatProgressSpinnerModule\n  ],\n  declarations: [],\n  entryComponents: [],\n  providers: [\n    { provide: MAT_RIPPLE_GLOBAL_OPTIONS, useValue: globalRippleConfig }\n  ],\n  exports: [\n    MatFormFieldModule,\n    PlatformModule,\n    MatRippleModule,\n    MatSortModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    DragDropModule,\n    OverlayModule,\n    PortalModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatInputModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatTabsModule,\n    MatTableModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatProgressBarModule,\n    LayoutModule,\n    MatProgressSpinnerModule\n  ]\n})\nexport class AppMaterialModule { }\n","import { CanActivate, Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    protected router: Router\n  ) { }\n\n  canActivate() {\n    const isAuthenticated = this.authService.isAuthenticated();\n    if (!isAuthenticated) {\n      this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }\n}","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { StorageService } from '../services/storage.service';\n\n@Injectable()\nexport class AuthService {\n  public userSubject$ = new Subject();\n  public currentUserReq$;\n  public currentUserId;\n  public userSubject = new ReplaySubject<any>(1);\n  private userRequest: Observable<any>;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  login(data): Observable<any> {\n    return this.http.post('Login', data);\n  }\n\n  signup(data): Observable<any> {\n    return this.http.post('SignUp', data);\n  }\n\n  logout(): void {\n    StorageService.clearLocalStorge();\n  }\n\n  getToken(): string {\n    return StorageService.getAuthToken()\n  }\n\n  isAuthenticated(): boolean {\n    return !!this.getToken();\n  }\n\n  islogin(): boolean {\n    return !!this.getToken();\n  }\n\n  resetUser() {\n    this.currentUserId = null;\n    this.userRequest = null;\n    this.userSubject = new ReplaySubject(1);\n  }\n\n  getUserId() {\n    const userdata = StorageService.getUserData();\n    return userdata._id;\n  }\n\n  isAuthUser(): Observable<any> {\n    return this.http.get<any>('users/current-user');\n  }\n}\n","\nexport function isEmptyObj(obj) {\n    for (var key in obj) {\n        if (obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\n\nexport function isEmptyArray(array) {\n    if (!Array.isArray(array) || !array.length) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function isEmail(email) {\n    const emailLowercase = email.toLowerCase();\n    if (email == null || emailLowercase.match(/^[\\w-]+(\\.[\\w-]+)*@([a-z0-9-]+(\\.[a-z0-9-]+)*?\\.[a-zA-Z]{2,6}|(\\d{1,3}\\.){3}\\d{1,3})(:\\d{4})?$/)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function FindObjectByValue(inputArray: Array<any>, value: string) {\n    return inputArray.find(e => e == value);\n}\n\nexport function FindArrayObject(inputArray, key, value) {\n    return inputArray.find(e => e[key] == value);\n}\n\nexport function AutoUnsubscribe(constructor) {\n    const original = constructor.prototype.ngOnDestroy;\n    constructor.prototype.ngOnDestroy = function () {\n        for (const prop in this) {\n            if (prop) {\n                const property = this[prop];\n                if (property && (typeof property.unsubscribe === 'function')) {\n                    property.unsubscribe();\n                }\n            }\n        }\n\n        if (original && typeof original === 'function') {\n            original.apply(this, arguments)\n        };\n    };\n\n}\nexport function isMobile() {\n    return window.innerWidth < 768\n}","import { Pipe, PipeTransform } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable, of } from 'rxjs';\nimport { debounce, debounceTime, map } from 'rxjs/operators';\nimport { BaseService } from '../services/base.service';\n\n@Pipe({\n  name: 'filter'\n})\nexport class filterPipe implements PipeTransform {\n\n  constructor(\n    private toastr: ToastrService,\n    private svc: BaseService\n  ) {\n  }\n\n  transform(items: any[], value: string): Observable<any> {\n    if (!items) return of([]);\n    if (!value) return of(items);\n    const data = {\n      \"search_field\": \"full_name\",\n      \"search_value\": value,\n      \"condition\": \"contains\",\n    }\n    return this.svc.post('AllUsers', data).pipe(\n      debounceTime(500),\n      map(res => {\n        if (res.status == 400) {\n          this.toastr.error(\"No contacts found\", \"Opps!\");\n          return [];\n        }\n        return res.users;\n      })\n    )\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n@Pipe({\n    name: 'safeUrl'\n})\nexport class SafeUrlPipe implements PipeTransform {\n    constructor(private domSanitizer: DomSanitizer) { }\n    transform(url) {\n        return this.domSanitizer.bypassSecurityTrustResourceUrl(url);\n    }\n}","import { HttpClient } from '@angular/common/http';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class BaseService {\n\n  constructor(\n    protected http: HttpClient\n  ) { }\n\n  public userData = new ReplaySubject<any>();\n  userData$ = this.userData.asObservable();\n\n  public isLoading = new Subject<any>();\n  isLoadingResponse = this.isLoading.asObservable();\n\n  /**\n  * This method is used to Call API using Http GET method.\n  * @param URL \n  * @return obserables responsce\n  * @author  Muhammad Mukhtiar  <muhammad.mukhtiar@norgic.com>\n  **/\n  get(URL): Observable<any> {\n    return this.http.get(URL);\n  }\n\n  /**\n  * This method is use to add or update data using API \n  * @param formData \n  * @return obserables responsce\n  * @author  Mukhtiar Hussain <muhammad.mukhtiar@norgic.com>\n  **/\n  save(URL, data = {}): Observable<any> {\n    return this.http.post(URL, data);\n  }\n\n  /**\n  * This method is used to Call API using Http Post method. \n  * @param URL \n  * @param URL \n  * @return obserables responsce\n  * @author  Mukhtiar Hussain <muhammad.mukhtiar@norgic.com>\n  **/\n  post(URL: string, payload: any = {}): Observable<any> {\n    return this.http.post(URL, payload);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpResponse, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { StorageService } from './storage.service';\nimport { environment } from '../../../environments/environment';\nimport { BaseService } from './base.service';\n\n@Injectable()\nexport class HttpService implements HttpInterceptor {\n    private baseUrl = environment.apiBaseUrl;\n\n    constructor(\n        private router: Router,\n        private svc: BaseService\n    ) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        req = this.getModifiedReq(req);\n        return next.handle(req)\n            .pipe(\n                tap(event => {\n                    if (event instanceof HttpResponse) {\n                        if (event && event.body) {\n                            const serRes = event.body;\n                            this.svc.isLoading.next(false);\n                            if (serRes.code === 401) {\n                                StorageService.clearLocalStorge();\n                                this.showErrorMsg(serRes.message);\n                                this.router.navigate(['/login']);\n                            } else if (serRes.code === 407) {\n                                // StorageService.clearLocalStorge();\n                                this.showErrorMsg(serRes.message);\n                                // this.router.navigate(['/auth/login']);\n                            } else if (serRes.code === 200 || serRes.code === 201) {\n                            } else {\n                                this.showErrorMsg(serRes.message);\n                            }\n                        }\n\n                    }\n                }),\n                catchError(errorRes => {\n                    this.svc.isLoading.next(false);\n                    console.log('this should print your error!', errorRes.error);\n                    if (errorRes instanceof HttpErrorResponse) {\n                        if (errorRes.status === 500) {\n                            // this.toastrService.danger('Opps!', \"Something went wrong\");\n                        } else {\n                            this.showErrorMsg(errorRes.message);\n                        }\n                    }\n                    return throwError(errorRes);\n                })\n            );\n    };\n\n    getModifiedReq(req: HttpRequest<any>): HttpRequest<any> {\n        req = req.clone({ url: this.baseUrl + req.url });\n        const formdata = JSON.stringify(req.body);\n        const auth_token = StorageService.getAuthToken();\n        if (auth_token) req = req.clone({ headers: req.headers.set('Authorization', 'Bearer ' + auth_token) });\n        req = req.clone({ headers: req.headers.set('Content-Type', 'application/json') });\n        req = req.clone({ body: formdata });\n        return req;\n    }\n\n    showErrorMsg(errorResponse) {\n        if (typeof errorResponse == 'string') {\n            // this.toastrService.danger('Opps!', errorResponse);\n        }\n\n    }\n}","import { Injectable, OnDestroy, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { StorageService } from './storage.service';\ndeclare const MVDOTOK: any;\n\n@Injectable()\nexport class PubsubService implements OnDestroy {\n  @Output()\n  protected wsSubscription: Subscription;\n  public Client: any;\n\n  constructor() { }\n\n  public ngOnDestroy(): void {\n    this.wsSubscription.unsubscribe();\n  }\n\n  public initConfigure(): void {\n    let user = StorageService.getUserData();\n    this.Client = new MVDOTOK.Client({\n      projectID: \"180UJ6W2\",\n      secret: \"462a4b478d515fd35eae075eea059d89\",\n      host: `${user.messaging_server_map.protocol}://${user.messaging_server_map.host}:${user.messaging_server_map.port}`\n    });\n    this.Client.Register(user.ref_id.toString(), user.authorization_token.toString());\n  }\n\n  public sendMessage(message): void {\n    this.Client.SendMessage(message);\n  }\n\n  public subscribeToChat(groups): void {\n    groups.map(chanelObj => {\n      this.Client.Subscribe(chanelObj);\n    });\n  }\n\n\n  public unsubscribeToChat(groups): void {\n    this.Client.UnSubscribe(groups);\n  }\n\n  public Disconnect(): void {\n    this.Client.Disconnect();\n  }\n\n  readMessage(chatMessages) {\n    chatMessages.map(chat => {\n      this.Client.SendReceipt(chat);\n    });\n  }\n\n  readSingleMessage(chatMessages) {\n    this.Client.SendReceipt(chatMessages);\n  }\n\n}\n","export class StorageService {\n\n  static readonly STORAGE_KEY_AUTH_TOKEN = 'auth_token';\n  static readonly STORAGE_KEY_USER_NAME = 'username';\n  static readonly STORAGE_KEY_USER_DATA = 'user_data';\n\n  static clearLocalStorge() {\n    localStorage.clear();\n    sessionStorage.clear();\n    return;\n  }\n\n  static getAuthToken() {\n    return localStorage.getItem(StorageService.STORAGE_KEY_AUTH_TOKEN);\n  }\n\n  static setAuthToken(token) {\n    localStorage.setItem(StorageService.STORAGE_KEY_AUTH_TOKEN, token);\n  }\n\n  static removeAuthToken() {\n    localStorage.removeItem(StorageService.STORAGE_KEY_AUTH_TOKEN);\n  }\n\n  static getAuthUsername() {\n    return localStorage.getItem(StorageService.STORAGE_KEY_USER_NAME);\n  }\n\n  static setAuthUsername(username) {\n    localStorage.setItem(StorageService.STORAGE_KEY_USER_NAME, username);\n  }\n\n  static removeAuthUsername() {\n    localStorage.removeItem(StorageService.STORAGE_KEY_USER_NAME);\n  }\n\n  static setUserData(userData) {\n    localStorage.setItem(StorageService.STORAGE_KEY_USER_DATA, JSON.stringify(userData));\n  }\n\n  static getUserData() {\n    return JSON.parse(localStorage.getItem(StorageService.STORAGE_KEY_USER_DATA));\n  }\n\n  static removeUserData() {\n    localStorage.removeItem(StorageService.STORAGE_KEY_USER_DATA);\n  }\n\n}\n","import { Injectable, Output } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n// declare var PUBSUB: any;\ndeclare const PUBSUB: any;\ndeclare const pubsub: any;\n\n@Injectable()\nexport class WebsocketService {\n  @Output() public ready: Subject<void> = new Subject();\n  public webSocket: WebSocket;\n  ws;\n  Client;\n\n  public initSocket(url: string): Observable<any> {\n    this.webSocket = new WebSocket('wss://' + 'vtest3.vdotok.com:8443' + '/call');\n    this.webSocket.onopen = () => this.ready.next();\n    return new Observable<any>(observer => {\n      this.webSocket.onmessage = (event: MessageEvent) => observer.next(event);\n      this.webSocket.onerror = (event: Event) => observer.error(event);\n      this.webSocket.onclose = (event: CloseEvent) => observer.complete();\n      // Callback invoked on unsubscribe\n      return () => this.webSocket.close();\n    });\n  }\n\n  public send(message: string): void {\n    // if (this.webSocket.readyState === WebSocket.OPEN) {\n    //   this.webSocket.send(message);\n    // }\n  }\n\n\n  public initPUBSUBSocket() {\n    return new PUBSUB.Client({\n      host: \"ws://emit1.togee.io\",\n      port: \"8080\",\n      credentials: {\n        username: \"john\",\n        password: \"\"\n      },\n      clientId: \"12345\",\n      reConnectivity: true,\n      secret: \"cWV91camkwd99XO9rvHmamvXxGdyeHK5\"\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { WebsocketService } from './services/websocket.service';\nimport { StorageService } from './services/storage.service';\nimport { AuthService } from './auth/auth.service';\nimport { AuthGuard } from './auth/auth-guard.service';\nimport { BaseService } from './services/base.service';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpService } from './services/http.service';\nimport { PubsubService } from './services/pubsub.service';\nimport { GetErrorsComponent } from './FormsHandler/get-errors.component';\nimport { MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material/dialog';\nimport { filterPipe } from './pipe/filter';\nimport { SafeUrlPipe } from './pipe/safeurl';\n\nconst components = [\n  GetErrorsComponent,\n  filterPipe,\n  SafeUrlPipe\n]\n\n@NgModule({\n  imports: [\n    RouterModule,\n    CommonModule,\n  ],\n  declarations: [...components],\n  exports: [...components],\n  providers: [\n    StorageService,\n    AuthService,\n    AuthGuard,\n    BaseService,\n    PubsubService,\n    WebsocketService,\n    { provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: { hasBackdrop: false } },\n    { provide: HTTP_INTERCEPTORS, useClass: HttpService, multi: true },\n  ],\n})\nexport class SharedModule { }\n","\nimport { AbstractControl } from '@angular/forms';\n\n\n\nexport class ValidationService {\n\n    static specialCharValidator(control) {\n        if (control.value == null || control.value.match(/^[a-zA-Z0-9._]*$/)) {\n            return null;\n        } else {\n\n            return { 'invalidCharacters': true };\n        }\n    }\n\n    static uppercaseCharacterRule(amount: number): any {\n        return function validate(control): { [key: string]: any } {\n            const value: string = control.value;\n            if (value.length === 0) {\n                return undefined;\n            }\n            const pattern = /[^A-Z]+/g;\n            const stripped = value.replace(pattern, '');\n            if (stripped.length < amount) {\n                return { 'uppercaseCharacterRule': true };\n            }\n            return undefined;\n        };\n    }\n\n    static creditCardValidator(control) {\n        // Visa, MasterCard, American Express, Diners Club, Discover, JCB\n        if (control.value.match(/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/)) {\n            return null;\n        } else {\n            return { 'invalidCreditCard': true };\n        }\n    }\n\n    static emailValidator(control) {\n        // RFC 2822 compliant regex\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        const emailLowercase = control.value.toLowerCase();\n        if (control.value == null || emailLowercase.match(/^[\\w-]+(\\.[\\w-]+)*@([a-z0-9-]+(\\.[a-z0-9-]+)*?\\.[a-zA-Z]{2,6}|(\\d{1,3}\\.){3}\\d{1,3})(:\\d{4})?$/)) {\n            return null;\n        } else {\n            return { 'invalidEmailAddress': true };\n        }\n    }\n\n\n    static isEmptyInputValue(value: any): boolean {\n        // we don't check for string here so it also works with arrays\n        return value == null || value.length === 0;\n    }\n\n    static emptySpacesValidator(control) {\n        console.log('emptySpacesValidator', control, control.value);\n        if (control.value.match(/([^\\s])/)) {\n            return null;\n        } else {\n            return { 'emptySpaces': true };\n        }\n    }\n\n    static removeSpace(value: any): string {\n        return value.trim()\n    }\n\n    static englishWordsValidator(control) {\n        console.log('englishWordsValidator', control);\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        const tempstring = ValidationService.removeSpace(control.value);\n        if (tempstring.match(/^[a-zA-Z]+( [\\&a-zA-Z]+)*$/)) {\n            return null;\n        } else {\n            return { 'invalidCharacters': true };\n        }\n    }\n\n    static nameValidator(control) {\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        if (control.value.match(/^(?:[a-zA-Z0-9\\s@,=%$#&_\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDCF\\uFDF0-\\uFDFF\\uFE70-\\uFEFF]|(?:\\uD802[\\uDE60-\\uDE9F]|\\uD83B[\\uDE00-\\uDEFF])){0,30}$/)) {\n            return null;\n        } else {\n            return { 'invalidNameCharacters': true };\n        }\n    }\n\n\n    static whiteSpaceValidator(control) {\n        // RFC 2822 compliant regex\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n\n        if (control.value.match(/^[-a-zA-Z\\u0600-\\u06FF0-9-()]+(\\s+[-a-zA-Z\\u0600-\\u06FF0-9-()]+)*$/)) {\n            return null;\n        } else {\n            return { 'invalidWhiteSpace': true };\n        }\n    }\n\n\n    static phoneValidator(control) {\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        if (control.value.match(/^\\+?[0-9]+$/g)) {\n            return null;\n        } else {\n            return { 'invalidPhone': true };\n        }\n    }\n\n    static phoneUsernameEmailValidator(control) {\n        if (control.value == null) return;\n        let validEmail = true, validPhone = true, validUsername = true;\n        if (ValidationService.emailValidator(control) != null) {\n            validEmail = false;\n        }\n        if (!control.value.match(/^[a-zA-Z0-9]{5,17}$/)) {\n            validUsername = false;\n        }\n        if (!control.value.match(/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/)) {\n            validPhone = false;\n        }\n        console.log('phoneUsernameEmailValidator', ValidationService.emailValidator(control), validEmail, validUsername, validPhone)\n        if (validEmail || validUsername || validPhone) return null;\n        return { 'invalidUsernameEmail': true };\n    }\n\n    static usernameValidator(control) {\n        // RFC 2822 compliant regex\n        if (control.value == null || control.value.match(/^[a-zA-Z0-9]+$/)) {\n            return null;\n        } else {\n            return { 'invalidUsernameCharacters': true };\n        }\n    }\n\n    static passwordValidator(control) {\n        // {8,100}           - Assert password is between 8 and 100 characters\n        // (?=.*[0-9])       - Assert a string has at least one number\n        if (control.value && !ValidationService.uppercaseCharacterRule(1)(control) && control.value.match(/^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/)) {\n            return null;\n        } else {\n            return { 'invalidPassword': true };\n        }\n    }\n\n    static MatchPassword(control: AbstractControl, crud) {\n        if (control.value == null) return null;\n        return control.root.get('password').value != control.value ? { passworMismatch: true } : null;\n    }\n\n\n    static pinCodeValidator(control) {\n        if (control.value && control.value.match(/^[0-9]{4}$/)) {\n            return null;\n        } else {\n            return { 'invalidPinCode': true };\n        }\n    }\n\n\n    static trimData(data) {\n        if (data) {\n            for (const key in data) {\n                if (data[key] && typeof data[key] == \"string\") {\n                    data[key] = data[key].trim();\n                }\n            }\n            return data;\n        }\n    }\n\n\n    static checkInteger(control) {\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        if (parseFloat(control.value) == 0 || (parseFloat(control.value) || parseInt(control.value)) && !isNaN(control.value)) {\n            return null;\n        } else {\n            return { 'invalidNumber': true };\n        }\n    }\n\n\n    static alphnumericValidator(control) {\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        if (ValidationService.whiteSpaceValidator(control.value)) return;\n        // if (control.value.match(/^[^±!@£$%^&*_+§¡€#¢§¶•ªº«\\\\/<>?:;|=.,0-9]{1,500}$/)) {\n        if (control.value.match(/^[a-zA-Z0-9-,]+(\\s{0,1}[a-zA-Z-, ])*$/)) {\n            return null;\n        } else {\n            return { 'invalidInputCharacters': true };\n        }\n    }\n\n\n    static stringvalidator(control) {\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        if (control.value.match(/^[a-zA-Z0-9-,]+(\\s{0,1}[a-zA-Z-, ])*$/)) {\n            return null;\n        } else {\n            return { 'invalidInputCharacters': true };\n        }\n    }\n\n    static disallowspecial(control) {\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        if (control.value.match(/^[A-Za-z0-9 ]+$/)) {\n            return null;\n        } else {\n            return { 'invalidInputCharacters': true };\n        }\n    }\n\n\n\n    static alphValidator(control) {\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        if (control.value.match(/^\\+?[A-Za-z]+$/g)) {\n            return null;\n        } else {\n            return { 'invalidString': true };\n        }\n    }\n\n    static numericValidator(control) {\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        if (ValidationService.whiteSpaceValidator(control.value)) return;\n        const value = control.value.toString()\n        if (value.match(/^\\+?[0-9]+$/g)) {\n            return null;\n        } else {\n            return { 'invalidNumeric': true };\n        }\n    }\n\n    static floatNumberValidator(control) {\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        const value = control.value.toString()\n        if (value.match(/^[+-]?\\d+(\\.\\d+)?$/g)) {\n            return null;\n        } else {\n            return { 'invalidNumeric': true };\n        }\n    }\n\n\n    static mackAddressValidator(control) {\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        const value = control.value.toString()\n        if (value.match(/^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$/g)) {\n            return null;\n        } else {\n            return { 'invalidMackAddress': true };\n        }\n    }\n\n\n    static gatewayAddressValidator(control) {\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        const value = control.value.toString()\n        if (value.match(/^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$/g)) {\n            return null;\n        } else {\n            return { 'invalidMackAddress': true };\n        }\n    }\n\n\n    static ipValidator(control) {\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        const value = control.value.toString()\n        if (value.match(/^(\\d|[1-9]\\d|1\\d\\d|2([0-4]\\d|5[0-5]))\\.(\\d|[1-9]\\d|1\\d\\d|2([0-4]\\d|5[0-5]))\\.(\\d|[1-9]\\d|1\\d\\d|2([0-4]\\d|5[0-5]))\\.(\\d|[1-9]\\d|1\\d\\d|2([0-4]\\d|5[0-5]))$/g)) {\n            return null;\n        } else {\n            return { 'invalidIp': true };\n        }\n    }\n\n\n    static domainNameValidator(control) {\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\n        const value = control.value.toString()\n        if (value.match(/^(?=^.{1,254}$)(^(?:(?!\\d+\\.)[a-zA-Z0-9_\\-]{1,63}\\.?)+(?:[a-zA-Z]{2,})$)/g)) {\n            return null;\n        } else {\n            return { 'invalidDomainName': true };\n        }\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  //apiBaseUrl : 'https://s-tenant.vdotok.dev/API/v0/'\n  apiBaseUrl : 'https://tenant.vdotok.com/API/v0/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}